Metadata-Version: 2.1
Name: xaitk-saliency
Version: 0.12.0
Summary: Visual saliency map generation interfaces and baseline implementations for explainable AI.
License: Apache-2.0
Author: Kitware, Inc.
Author-email: xaitk@kitware.com
Requires-Python: >=3.9,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Provides-Extra: example-deps
Provides-Extra: tools
Requires-Dist: click (>=8.0.3)
Requires-Dist: kwcoco (>=0.2.18) ; extra == "tools"
Requires-Dist: matplotlib (>=3.4.1) ; extra == "example-deps" or extra == "tools"
Requires-Dist: notebook (>=7.2.2) ; extra == "example-deps"
Requires-Dist: numpy (>=1.25,<2.0) ; python_version >= "3.9" and python_version < "3.12"
Requires-Dist: numpy (>=1.26,<2.0) ; python_version >= "3.12" and python_version < "3.13"
Requires-Dist: papermill (>=2.3.3) ; extra == "example-deps"
Requires-Dist: pyyaml (>=6.0.1) ; (python_version >= "3.12") and (extra == "tools")
Requires-Dist: scikit-image (>=0.18.1) ; python_version < "3.11"
Requires-Dist: scikit-image (>=0.20.0) ; python_version >= "3.11" and python_version < "3.12"
Requires-Dist: scikit-image (>=0.22.0) ; python_version >= "3.12"
Requires-Dist: scikit-learn (>=1.5.0)
Requires-Dist: scipy (>=1.10.0)
Requires-Dist: setuptools
Requires-Dist: shapely (>=2.0.2) ; (python_version >= "3.12") and (extra == "tools")
Requires-Dist: smqtk-classifier (>=0.17.0)
Requires-Dist: smqtk-core (>=0.18.0)
Requires-Dist: smqtk-descriptors (>=0.16.0)
Requires-Dist: smqtk-detection (>=0.19.0)
Requires-Dist: torch (>=1.9.0,!=2.0.1) ; extra == "example-deps"
Requires-Dist: torchvision (>=0.10.0) ; extra == "example-deps"
Requires-Dist: tqdm (>=4.66.3) ; extra == "example-deps"
Project-URL: Documentation, https://xaitk-saliency.readthedocs.io/
Description-Content-Type: text/markdown

![xaitk-logo](./docs/figures/xaitk-wordmark-light.png)

<hr/>

<!-- :auto badges: -->
[![PyPI - Python Version](https://img.shields.io/pypi/v/xaitk-saliency)](https://pypi.org/project/xaitk-saliency/)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/xaitk-saliency)
[![Documentation Status](https://readthedocs.org/projects/xaitk-saliency/badge/?version=latest)](https://xaitk-saliency.readthedocs.io/en/latest/?badge=latest)
<!-- :auto badges: -->
<!-- TODO: re-enable these later. -->
<!-- [![badge-unittests](https://github.com/xaitk/xaitk-saliency/actions/workflows/ci-unittests.yml/badge.svg)](https://github.com/XAITK/xaitk-saliency/actions/workflows/ci-unittests.yml)
[![badge-notebooks](https://github.com/xaitk/xaitk-saliency/actions/workflows/ci-example-notebooks.yml/badge.svg)](https://github.com/XAITK/xaitk-saliency/actions/workflows/ci-example-notebooks.yml) -->
[![codecov](https://codecov.io/gh/XAITK/xaitk-saliency/branch/master/graph/badge.svg?token=VHRNXYCNCG)](https://codecov.io/gh/XAITK/xaitk-saliency)

# XAITK - Saliency
The `xaitk-saliency` package is an open source, Explainable AI (XAI) framework
for visual saliency algorithm interfaces and implementations, built for
analytics and autonomy applications.

See [here](https://xaitk-saliency.readthedocs.io/en/latest/introduction.html)
for a more formal introduction to the topic of XAI and visual saliency
explanations.

This framework is a part of the [Explainable AI Toolkit (XAITK)](
https://xaitk.org).

## Supported Algorithms
The `xaitk-saliency` package provides saliency algorithms for a wide range of image understanding
tasks, including image classification, image similarity, object detection, and reinforcement learning.
The current list of supported saliency algorithms can be found [here](
https://xaitk-saliency.readthedocs.io/en/latest/introduction.html#saliency-algorithms).

## Target Audience
This toolkit is intended to help data scientists and developers who want to
add visual saliency explanations to their workflow or product.
Functionality provided here is both directly accessible for targeted
experimentation, and through [Strategy](
https://en.wikipedia.org/wiki/Strategy_pattern) and [Adapter](
https://en.wikipedia.org/wiki/Adapter_pattern) patterns to allow for
modular integration into systems and applications.

<!-- :auto installation: -->
## Installation
Ensure the source tree is acquired locally before proceeding.

To install the current version via `pip`:
```bash
pip install xaitk-saliency[<extra1>,<extra2>,...]
```

Alternatively, you can use [Poetry](https://python-poetry.org/):
```bash
poetry install --with main,linting,tests,docs --extras "<extra1> <extra2> ..."
```

Certain plugins may require additional runtime dependencies. Details on these requirements can be found [here](https://xaitk-saliency.readthedocs.io/en/latest/implementations.html).

For more detailed installation instructions, visit the [installation documentation](https://xaitk-saliency.readthedocs.io/en/latest/installation.html).
<!-- :auto installation: -->

<!-- :auto getting-started: -->
## Getting Started
Explore usage examples of the `xaitk-saliency` package in various contexts using the Jupyter notebooks provided in the `./examples/` directory.

Contributions are encouraged! For more details, refer to the [CONTRIBUTING.md](./CONTRIBUTING.md) file.
<!-- :auto getting-started: -->

<!-- :auto documentation: -->
## Documentation
Documentation for both release snapshots and the latest master branch is available on [ReadTheDocs](https://xaitk-saliency.readthedocs.io/en/latest/).

To build the Sphinx-based documentation locally for the latest reference:
```bash
# Install dependencies
poetry install --sync --with main,linting,tests,docs
# Navigate to the documentation root
cd docs
# Build the documentation
poetry run make html
# Open the generated documentation in your browser
firefox _build/html/index.html
```
<!-- :auto documentation: -->

<!-- :auto developer-tools: -->
## Developer Tools

### Pre-commit Hooks
Pre-commit hooks ensure that code complies with required linting and formatting guidelines. These hooks run automatically before commits but can also be executed manually. To bypass checks during a commit, use the `--no-verify` flag.

To install and use pre-commit hooks:
```bash
# Install required dependencies
poetry install --sync --with main,linting,tests,docs
# Initialize pre-commit hooks for the repository
poetry run pre-commit install
# Run pre-commit checks on all files
poetry run pre-commit run --all-files
```
<!-- :auto developer-tools: -->

## XAITK Saliency Demonstration Tool
This [associated project](https://github.com/XAITK/xaitk-saliency-web-demo)
provides a local web-application that provides a demonstration of visual
saliency generation in a user-interface.
This provides an example of how visual saliency, as generated by this package,
can be utilized in a user-interface to facilitate model and results
exploration.
This tool uses the [trame framework](https://kitware.github.io/trame/).

| ![image1] | ![image2] | ![image3] | ![image4] |
|:---------:|:---------:|:---------:|:---------:|

[image1]: https://github.com/XAITK/xaitk-saliency-web-demo/blob/main/gallery/xaitk-classification-rise-4.jpg
[image2]: https://github.com/XAITK/xaitk-saliency-web-demo/blob/main/gallery/xaitk-classification-sliding-window.jpg
[image3]: https://github.com/XAITK/xaitk-saliency-web-demo/blob/main/gallery/xaitk-detection-retina.jpg
[image4]: https://github.com/XAITK/xaitk-saliency-web-demo/blob/main/gallery/xaitk-similarity-1.jpg

<!-- :auto license: -->
## License
[Apache 2.0](./LICENSE)
<!-- :auto license: -->

All development prior to Nov 19, 2024 falls under [BSD-3-Clause](./LICENSE.old)

<!-- :auto contacts: -->
## Contacts

**Principal Investigator**: Brian Hu (Kitware) @brian.hu

**Product Owner**: Austin Whitesell (MITRE) @awhitesell

**Scrum Master / Tech Lead**: Brandon RichardWebster (Kitware) @b.richardwebster

**Deputy Tech Lead**: Emily Veenhuis (Kitware) @emily.veenhuis
<!-- :auto contacts: -->

