# coding: utf-8

"""
    API Alegra Proveedor ElectrÃ³nico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_adjustment_note_equivalent_document_request_delivery_delivery_company_tax_scheme import CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme

class TestCreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme(unittest.TestCase):
    """CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme:
        """Test CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme`
        """
        model = CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme()
        if include_optional:
            return CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme(
                name = '',
                code = '',
                identification = '',
                identification_type = '',
                dv = '',
                address = openapi_client.models.create_adjustment_note_equivalent_document_request_delivery_delivery_company_tax_scheme_address.createAdjustmentNoteEquivalentDocument_request_delivery_deliveryCompany_taxScheme_address(
                    city = '', 
                    postal = '', 
                    department = '', 
                    address = '', )
            )
        else:
            return CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme(
        )
        """

    def testCreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme(self):
        """Test CreateAdjustmentNoteEquivalentDocumentRequestDeliveryDeliveryCompanyTaxScheme"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
