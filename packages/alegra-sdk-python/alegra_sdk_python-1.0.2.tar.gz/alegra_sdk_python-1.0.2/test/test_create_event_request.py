# coding: utf-8

"""
    API Alegra Proveedor ElectrÃ³nico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_event_request import CreateEventRequest

class TestCreateEventRequest(unittest.TestCase):
    """CreateEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateEventRequest:
        """Test CreateEventRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateEventRequest`
        """
        model = CreateEventRequest()
        if include_optional:
            return CreateEventRequest(
                number = '',
                type = '030',
                company = openapi_client.models.create_event_request_company.createEvent_request_company(
                    id = '', 
                    organization_type = 1, 
                    identification_type = '11', 
                    identification_number = '', 
                    dv = '0', 
                    name = '', 
                    regime_code = 'O-13', 
                    tax_code = '01', ),
                associated_document = openapi_client.models.create_event_request_associated_document.createEvent_request_associatedDocument(
                    prefix = '0', 
                    number = 1.337, 
                    uuid = '', ),
                receiver_party = openapi_client.models.create_event_request_receiver_party.createEvent_request_receiverParty(
                    name = '', 
                    organization_type = 1, 
                    identification_number = '', 
                    identification_type = '11', 
                    dv = '', 
                    regime_code = 'O-13', 
                    tax_code = '01', ),
                issuer_party = openapi_client.models.create_event_request_issuer_party.createEvent_request_issuerParty(
                    identification_type = '11', 
                    dv = '', 
                    identification_number = '', 
                    first_name = '', 
                    family_name = '', 
                    job_title = '', 
                    organization_department = '', ),
                claim_code = '01',
                email = openapi_client.models.create_event_request_email.createEvent_request_email(
                    to = '', 
                    cc = '', 
                    bcc = '', 
                    reply_to = '', )
            )
        else:
            return CreateEventRequest(
                number = '',
                type = '030',
                associated_document = openapi_client.models.create_event_request_associated_document.createEvent_request_associatedDocument(
                    prefix = '0', 
                    number = 1.337, 
                    uuid = '', ),
        )
        """

    def testCreateEventRequest(self):
        """Test CreateEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
