# coding: utf-8

"""
    API Alegra Proveedor Electrónico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_company_request import CreateCompanyRequest

class TestCreateCompanyRequest(unittest.TestCase):
    """CreateCompanyRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCompanyRequest:
        """Test CreateCompanyRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateCompanyRequest`
        """
        model = CreateCompanyRequest()
        if include_optional:
            return CreateCompanyRequest(
                name = '01234',
                trade_name = '0',
                identification = '012',
                dv = '00',
                type = 'main',
                use_alegra_certificate = True,
                certificate = openapi_client.models.create_company_request_all_of_certificate.createCompany_request_allOf_certificate(
                    name = '', 
                    extension = '', 
                    content = 'YQ==', 
                    password = '', ),
                notification_by_email = openapi_client.models.create_company_request_all_of_notification_by_email.createCompany_request_allOf_notificationByEmail(
                    enabled = True, 
                    message = '', ),
                webhooks = openapi_client.models.create_company_request_all_of_webhooks.createCompany_request_allOf_webhooks(
                    general = openapi_client.models.create_company_request_all_of_webhooks_general.createCompany_request_allOf_webhooks_general(
                        government_status_changed = openapi_client.models.create_company_request_all_of_webhooks_general_government_status_changed.createCompany_request_allOf_webhooks_general_governmentStatusChanged(
                            url = '', 
                            headers = openapi_client.models.headers.headers(), 
                            status = 'active', ), ), 
                    payrolls = openapi_client.models.create_company_request_all_of_webhooks_payrolls.createCompany_request_allOf_webhooks_payrolls(
                        emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_payrolls_emission_finished.getCompanies_200_response_companies_inner_webhooks_payrolls_emissionFinished(
                            url = '', 
                            headers = openapi_client.models.headers.headers(), 
                            status = 'active', ), ), 
                    invoices = openapi_client.models.create_company_request_all_of_webhooks_invoices.createCompany_request_allOf_webhooks_invoices(), 
                    credit_notes = openapi_client.models.create_company_request_all_of_webhooks_credit_notes.createCompany_request_allOf_webhooks_creditNotes(), 
                    debit_notes = openapi_client.models.create_company_request_all_of_webhooks_debit_notes.createCompany_request_allOf_webhooks_debitNotes(), 
                    equivalent_documents = openapi_client.models.get_companies_200_response_companies_inner_webhooks_equivalent_documents.getCompanies_200_response_companies_inner_webhooks_equivalentDocuments(), 
                    support_documents = openapi_client.models.get_companies_200_response_companies_inner_webhooks_support_documents.getCompanies_200_response_companies_inner_webhooks_supportDocuments(), ),
                organization_type = 1.337,
                identification_type = '',
                regime_code = '',
                tax_code = openapi_client.models.get_companies_200_response_companies_inner_tax_code.getCompanies_200_response_companies_inner_taxCode(
                    id = '', 
                    name = '', ),
                economic_activities = [
                    '0480'
                    ],
                email = '',
                phone = '',
                address = openapi_client.models.create_company_request_all_of_address.createCompany_request_allOf_address(
                    address = '', 
                    city = '', 
                    department = '', 
                    country = '', ),
                logo = '0',
                other_responsabilities = 'RÉGIMEN COMÚN/AGENTE RETENEDOR DE RENTA/AUTORRETENEDORES
RES. NO. 001240 DEL 20-02-2014.
GRANDES CONTRIBUYENTES PARA EL DISTRITO DE BOGOTÁ RES. NO. DDI-042065 DE 2017/ACTIVIDAD ECONÓMICA 1512'
            )
        else:
            return CreateCompanyRequest(
                name = '01234',
                identification = '012',
                dv = '00',
                use_alegra_certificate = True,
        )
        """

    def testCreateCompanyRequest(self):
        """Test CreateCompanyRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
