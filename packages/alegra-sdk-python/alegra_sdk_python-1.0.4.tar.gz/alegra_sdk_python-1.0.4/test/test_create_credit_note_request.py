# coding: utf-8

"""
    API Alegra Proveedor ElectrÃ³nico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_credit_note_request import CreateCreditNoteRequest

class TestCreateCreditNoteRequest(unittest.TestCase):
    """CreateCreditNoteRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCreditNoteRequest:
        """Test CreateCreditNoteRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateCreditNoteRequest`
        """
        model = CreateCreditNoteRequest()
        if include_optional:
            return CreateCreditNoteRequest(
                document_type = '91',
                prefix = '0',
                number = 1.337,
                concept_code = '',
                note = '',
                associated_documents = [
                    openapi_client.models.create_credit_note_request_associated_documents_inner.createCreditNote_request_associatedDocuments_inner(
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        document_type = '', 
                        number = 1.337, 
                        prefix = '0', 
                        uuid = '', )
                    ],
                company = openapi_client.models.create_invoice_request_company.createInvoice_request_company(
                    id = '', 
                    organization_type = 1, 
                    identification_number = '012', 
                    dv = '0', 
                    name = '01234', 
                    trade_name = '0', 
                    regime_code = 'R-99-PN;O-13;O-48;O-23;R-99-PN;O-13;O-47;R-99-PN;R-99-PN;R-99-PN;R-99-PN;O-47;R-99-PN;O-13;O-13;O-13;O-49;O-48;O-47;O-15;O-48;R-99-PN;O-23;R-99-PN;O-47;R-99-PN;O-47;O-15;O-47', 
                    tax_code = openapi_client.models.create_invoice_request_company_tax_code.createInvoice_request_company_taxCode(
                        id = '01', ), 
                    economic_activities = [
                        '0480'
                        ], 
                    email = '', 
                    phone = '', 
                    address = openapi_client.models.create_invoice_request_company_address.createInvoice_request_company_address(), 
                    tax_address = openapi_client.models.create_invoice_request_company_tax_address.createInvoice_request_company_taxAddress(), 
                    shareholders = [
                        openapi_client.models.create_invoice_request_company_shareholders_inner.createInvoice_request_company_shareholders_inner(
                            identification_number = '012', 
                            dv = '0', 
                            name = '01234', 
                            regime_code = 'R-99-PN;O-13;O-13;O-15;R-99-PN;O-13;O-47;R-99-PN;R-99-PN;R-99-PN;R-99-PN;O-13;R-99-PN;O-15;O-13;O-47;O-15;O-15;O-13;O-13;O-23;R-99-PN;O-13;R-99-PN;O-47;R-99-PN;O-13;O-23;O-13', 
                            percent = 0, 
                            tax_code = '01', )
                        ], 
                    contact = openapi_client.models.create_equivalent_document_pos_request_company_contact.createEquivalentDocumentPos_request_company_contact(
                        name = '', 
                        telefax = '', 
                        note = '', 
                        commercial_registration_number = '', ), ),
                customer = openapi_client.models.create_invoice_request_customer.createInvoice_request_customer(
                    name = '', 
                    trade_name = '', 
                    organization_type = 1, 
                    identification_type = '', 
                    identification_number = '', 
                    dv = '0', 
                    regime_code = 'R-99-PN;O-13;O-13;O-15;R-99-PN;O-13;O-47;R-99-PN;R-99-PN;R-99-PN;R-99-PN;O-13;R-99-PN;O-15;O-13;O-47;O-15;O-15;O-13;O-13;O-23;R-99-PN;O-13;R-99-PN;O-47;R-99-PN;O-13;O-23;O-13', 
                    tax_code = openapi_client.models.create_invoice_request_customer_tax_code.createInvoice_request_customer_taxCode(
                        id = '01', ), 
                    commercial_registration_number = '012345678', 
                    email = '', 
                    phone = '', 
                    address = openapi_client.models.create_invoice_request_customer_address.createInvoice_request_customer_address(
                        city = '', 
                        department = '', 
                        postal_code = 'gCu2LC012345', 
                        country = '', ), 
                    tax_address = openapi_client.models.create_invoice_request_customer_tax_address.createInvoice_request_customer_taxAddress(), 
                    contact = openapi_client.models.create_invoice_request_customer_contact.createInvoice_request_customer_contact(
                        name = '0', 
                        telefax = '0', 
                        note = '0', ), ),
                items = [
                    null
                    ],
                total_amounts = openapi_client.models.create_equivalent_document_pos_request_total_amounts.createEquivalentDocumentPos_request_totalAmounts(
                    gross_total = 1.337, 
                    taxable_total = 1.337, 
                    tax_total = 1.337, 
                    discount_total = 1.337, 
                    charge_total = 1.337, 
                    advance_total = 1.337, 
                    payable_total = 1.337, 
                    currency_code = '', ),
                payments = [
                    openapi_client.models.create_equivalent_document_pos_request_payments_inner.createEquivalentDocumentPos_request_payments_inner(
                        payment_form = '', 
                        payment_method = '', 
                        payment_due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        payment_id = '0', )
                    ],
                exchange_rate = openapi_client.models.create_equivalent_document_pos_request_exchange_rate.createEquivalentDocumentPos_request_exchangeRate(
                    rate_value = 1.337, 
                    rate_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                discounts_and_charges = [
                    openapi_client.models.create_invoice_request_discounts_and_charges_inner.createInvoice_request_discountsAndCharges_inner(
                        is_charge = True, 
                        reason = '', 
                        reason_code = '00', 
                        percentage_amount = 0, 
                        amount = 0, 
                        base_amount = 0, )
                    ],
                invoice_period = openapi_client.models.create_invoice_request_invoice_period.createInvoice_request_invoicePeriod(
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    start_time = '', 
                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    end_time = '', )
            )
        else:
            return CreateCreditNoteRequest(
                number = 1.337,
                concept_code = '',
                company = openapi_client.models.create_invoice_request_company.createInvoice_request_company(
                    id = '', 
                    organization_type = 1, 
                    identification_number = '012', 
                    dv = '0', 
                    name = '01234', 
                    trade_name = '0', 
                    regime_code = 'R-99-PN;O-13;O-48;O-23;R-99-PN;O-13;O-47;R-99-PN;R-99-PN;R-99-PN;R-99-PN;O-47;R-99-PN;O-13;O-13;O-13;O-49;O-48;O-47;O-15;O-48;R-99-PN;O-23;R-99-PN;O-47;R-99-PN;O-47;O-15;O-47', 
                    tax_code = openapi_client.models.create_invoice_request_company_tax_code.createInvoice_request_company_taxCode(
                        id = '01', ), 
                    economic_activities = [
                        '0480'
                        ], 
                    email = '', 
                    phone = '', 
                    address = openapi_client.models.create_invoice_request_company_address.createInvoice_request_company_address(), 
                    tax_address = openapi_client.models.create_invoice_request_company_tax_address.createInvoice_request_company_taxAddress(), 
                    shareholders = [
                        openapi_client.models.create_invoice_request_company_shareholders_inner.createInvoice_request_company_shareholders_inner(
                            identification_number = '012', 
                            dv = '0', 
                            name = '01234', 
                            regime_code = 'R-99-PN;O-13;O-13;O-15;R-99-PN;O-13;O-47;R-99-PN;R-99-PN;R-99-PN;R-99-PN;O-13;R-99-PN;O-15;O-13;O-47;O-15;O-15;O-13;O-13;O-23;R-99-PN;O-13;R-99-PN;O-47;R-99-PN;O-13;O-23;O-13', 
                            percent = 0, 
                            tax_code = '01', )
                        ], 
                    contact = openapi_client.models.create_equivalent_document_pos_request_company_contact.createEquivalentDocumentPos_request_company_contact(
                        name = '', 
                        telefax = '', 
                        note = '', 
                        commercial_registration_number = '', ), ),
                customer = openapi_client.models.create_invoice_request_customer.createInvoice_request_customer(
                    name = '', 
                    trade_name = '', 
                    organization_type = 1, 
                    identification_type = '', 
                    identification_number = '', 
                    dv = '0', 
                    regime_code = 'R-99-PN;O-13;O-13;O-15;R-99-PN;O-13;O-47;R-99-PN;R-99-PN;R-99-PN;R-99-PN;O-13;R-99-PN;O-15;O-13;O-47;O-15;O-15;O-13;O-13;O-23;R-99-PN;O-13;R-99-PN;O-47;R-99-PN;O-13;O-23;O-13', 
                    tax_code = openapi_client.models.create_invoice_request_customer_tax_code.createInvoice_request_customer_taxCode(
                        id = '01', ), 
                    commercial_registration_number = '012345678', 
                    email = '', 
                    phone = '', 
                    address = openapi_client.models.create_invoice_request_customer_address.createInvoice_request_customer_address(
                        city = '', 
                        department = '', 
                        postal_code = 'gCu2LC012345', 
                        country = '', ), 
                    tax_address = openapi_client.models.create_invoice_request_customer_tax_address.createInvoice_request_customer_taxAddress(), 
                    contact = openapi_client.models.create_invoice_request_customer_contact.createInvoice_request_customer_contact(
                        name = '0', 
                        telefax = '0', 
                        note = '0', ), ),
                items = [
                    null
                    ],
                total_amounts = openapi_client.models.create_equivalent_document_pos_request_total_amounts.createEquivalentDocumentPos_request_totalAmounts(
                    gross_total = 1.337, 
                    taxable_total = 1.337, 
                    tax_total = 1.337, 
                    discount_total = 1.337, 
                    charge_total = 1.337, 
                    advance_total = 1.337, 
                    payable_total = 1.337, 
                    currency_code = '', ),
                payments = [
                    openapi_client.models.create_equivalent_document_pos_request_payments_inner.createEquivalentDocumentPos_request_payments_inner(
                        payment_form = '', 
                        payment_method = '', 
                        payment_due_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        payment_id = '0', )
                    ],
        )
        """

    def testCreateCreditNoteRequest(self):
        """Test CreateCreditNoteRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
