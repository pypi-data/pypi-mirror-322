# coding: utf-8

"""
    API Alegra Proveedor ElectrÃ³nico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_company_request_all_of_webhooks import CreateCompanyRequestAllOfWebhooks

class TestCreateCompanyRequestAllOfWebhooks(unittest.TestCase):
    """CreateCompanyRequestAllOfWebhooks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateCompanyRequestAllOfWebhooks:
        """Test CreateCompanyRequestAllOfWebhooks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateCompanyRequestAllOfWebhooks`
        """
        model = CreateCompanyRequestAllOfWebhooks()
        if include_optional:
            return CreateCompanyRequestAllOfWebhooks(
                general = openapi_client.models.create_company_request_all_of_webhooks_general.createCompany_request_allOf_webhooks_general(
                    government_status_changed = openapi_client.models.create_company_request_all_of_webhooks_general_government_status_changed.createCompany_request_allOf_webhooks_general_governmentStatusChanged(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), ),
                payrolls = openapi_client.models.create_company_request_all_of_webhooks_payrolls.createCompany_request_allOf_webhooks_payrolls(
                    emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_payrolls_emission_finished.getCompanies_200_response_companies_inner_webhooks_payrolls_emissionFinished(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), ),
                invoices = openapi_client.models.create_company_request_all_of_webhooks_invoices.createCompany_request_allOf_webhooks_invoices(
                    emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_payrolls_emission_finished.getCompanies_200_response_companies_inner_webhooks_payrolls_emissionFinished(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), ),
                credit_notes = openapi_client.models.create_company_request_all_of_webhooks_credit_notes.createCompany_request_allOf_webhooks_creditNotes(
                    emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_payrolls_emission_finished.getCompanies_200_response_companies_inner_webhooks_payrolls_emissionFinished(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), ),
                debit_notes = openapi_client.models.create_company_request_all_of_webhooks_debit_notes.createCompany_request_allOf_webhooks_debitNotes(
                    emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_payrolls_emission_finished.getCompanies_200_response_companies_inner_webhooks_payrolls_emissionFinished(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), ),
                equivalent_documents = openapi_client.models.get_companies_200_response_companies_inner_webhooks_equivalent_documents.getCompanies_200_response_companies_inner_webhooks_equivalentDocuments(
                    emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_equivalent_documents_emission_finished.getCompanies_200_response_companies_inner_webhooks_equivalentDocuments_emissionFinished(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), ),
                support_documents = openapi_client.models.get_companies_200_response_companies_inner_webhooks_support_documents.getCompanies_200_response_companies_inner_webhooks_supportDocuments(
                    emission_finished = openapi_client.models.get_companies_200_response_companies_inner_webhooks_support_documents_emission_finished.getCompanies_200_response_companies_inner_webhooks_supportDocuments_emissionFinished(
                        url = '', 
                        headers = openapi_client.models.headers.headers(), 
                        status = 'active', ), )
            )
        else:
            return CreateCompanyRequestAllOfWebhooks(
        )
        """

    def testCreateCompanyRequestAllOfWebhooks(self):
        """Test CreateCompanyRequestAllOfWebhooks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
