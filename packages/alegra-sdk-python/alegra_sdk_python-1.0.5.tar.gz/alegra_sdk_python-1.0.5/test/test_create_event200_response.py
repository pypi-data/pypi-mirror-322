# coding: utf-8

"""
    API Alegra Proveedor ElectrÃ³nico Colombia

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_event200_response import CreateEvent200Response

class TestCreateEvent200Response(unittest.TestCase):
    """CreateEvent200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateEvent200Response:
        """Test CreateEvent200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateEvent200Response`
        """
        model = CreateEvent200Response()
        if include_optional:
            return CreateEvent200Response(
                event = openapi_client.models.create_event_200_response_event.createEvent_200_response_event(
                    id = '', 
                    type = openapi_client.models.create_event_200_response_event_type.createEvent_200_response_event_type(
                        code = '', 
                        value = '', ), 
                    date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    legal_status = 'ACCEPTED', 
                    company_identification = 1.337, 
                    cude = '', 
                    associated_document_id = '', 
                    receiver = openapi_client.models.create_event_200_response_event_receiver.createEvent_200_response_event_receiver(
                        id = '', 
                        name = '', 
                        identification_type = '', 
                        dv = '', ), 
                    prefix = '0', 
                    number = 1.337, 
                    full_number = '', 
                    government_response = openapi_client.models.get_test_set_by_government_id_200_response_emission_government_response.getTestSetByGovernmentId_200_response_emission_governmentResponse(
                        code = '', 
                        message = '', 
                        error_messages = [
                            ''
                            ], ), 
                    xml_file_name = '', 
                    zip_file_name = '', 
                    status = 'REGISTERED', )
            )
        else:
            return CreateEvent200Response(
        )
        """

    def testCreateEvent200Response(self):
        """Test CreateEvent200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
