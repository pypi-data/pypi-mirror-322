version: '{branch}-{build}'
image: Visual Studio 2019
build: off
skip_branch_with_pr: true
environment:
  global:
    SALT_FILEROOT: '%APPVEYOR_BUILD_FOLDER%'
    SALT_STATE: scap.scan
    SALT_URL: https://packages.broadcom.com/artifactory/saltproject-generic/windows/3006.6/Salt-Minion-3006.6-Py3-AMD64-Setup.exe
  matrix:
    - SALT_PILLARROOT: '%APPVEYOR_BUILD_FOLDER%\tests\pillar\test-scc'

init:
  - ps: echo $env:PILLAR_HOME
install:
  - ps: '[Net.ServicePointManager]::SecurityProtocol = "Tls12, Tls13"'
  - ps: |
      $null = `
        (new-object net.webclient).DownloadFile(${env:SALT_URL}, `
        "${env:temp}\salt-minion.exe")
  - ps: |
      $null = `
        Start-Process -FilePath "${env:temp}\salt-minion.exe" `
        -ArgumentList @("/S", "/install-dir=c:\salt") -NoNewWindow -PassThru -Wait
  - ps: C:\salt\salt-call.exe --versions-report

test_script:
  - ps: |
      C:\salt\salt-call.exe --local --retcode-passthrough `
        --log-file-level debug `
        --file-root="${env:SALT_FILEROOT}" `
        --pillar-root="${env:SALT_PILLARROOT}" `
        state.show_sls `
        "${env:SALT_STATE}"
  - ps: |
      C:\salt\salt-call.exe --local --retcode-passthrough `
        --log-file-level debug `
        --file-root="${env:SALT_FILEROOT}" `
        --pillar-root="${env:SALT_PILLARROOT}" `
        state.sls `
        "${env:SALT_STATE}" `
        mock=True

notifications:
  - provider: Email
    on_build_success: False
    on_build_failure: True

### To enable remote debugging uncomment this (also, see: http://www.appveyor.com/docs/how-to/rdp-to-build-worker):
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
