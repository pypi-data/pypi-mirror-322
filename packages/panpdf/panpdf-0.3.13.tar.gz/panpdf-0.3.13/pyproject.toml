[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "panpdf"
version = "0.3.13"
authors = [{ name = "daizutabi", email = "daizutabi@gmail.com" }]
description = "A PDF generator from Markdown that embeds figures from Jupyter Notebooks."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Framework :: MkDocs",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Documentation",
  "Topic :: Software Development :: Documentation",
]
requires-python = ">=3.10"
dependencies = [
  "aiohttp",
  "ipykernel",
  "nbformat",
  "panflute >= 2.3.1",
  "pyyaml",
  "pyzotero",
  "rich",
  "typer",
]

[project.urls]
Documentation = "https://daizutabi.github.io/panpdf"
Source = "https://github.com/daizutabi/panpdf"
Issues = "https://github.com/daizutabi/panpdf/issues"

[project.scripts]
panpdf = "panpdf.main:app"

[tool.uv]
dev-dependencies = [
  "cairosvg",
  "hvplot",
  "matplotlib",
  "numpy",
  "pandas",
  "polars",
  "pytest-clarity",
  "pytest-cov",
  "pytest-randomly",
  "pytest-xdist",
  "seaborn",
]

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/docs"]

[tool.hatch.build.targets.wheel]
packages = ["src/panpdf"]

[tool.pytest.ini_options]
addopts = ["--cov-report=lcov:lcov.info", "--cov=panpdf", "--doctest-modules"]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
filterwarnings = ['ignore:setDaemon\(\) is deprecated:DeprecationWarning']

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "raise NotImplementedError"]
skip_covered = true

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
unfixable = ["F401"]
ignore = ["ARG002", "D", "PGH003"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "ANN",
  "ARG",
  "ERA",
  "NPY",
  "PD",
  "PLR",
  "PT",
  "PTH",
  "RUF",
  "S",
  "T",
]
"filter.py" = ["ANN"]
"formatters.py" = ["ANN", "ARG", "SLF"]
