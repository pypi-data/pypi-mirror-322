[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python-liquid2"
dynamic = ["version"]
description = 'Liquid templates for Python'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [{ name = "James Prior", email = "jamesgr.prior@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
  "Markupsafe>=3",
  "python-dateutil",
  "Babel>=2",
  "pytz",
  "typing-extensions",
]

[project.urls]
Documentation = "https://jg-rp.github.io/python-liquid2/"
Issues = "https://github.com/jg-rp/python-liquid2/issues"
Source = "https://github.com/jg-rp/python-liquid2"


[tool.hatch.version]
path = "liquid2/__about__.py"

[tool.hatch.build.targets.sdist]
include = ["/liquid2"]

[tool.hatch.build.targets.wheel]
include = ["/liquid2"]

[tool.hatch.envs.default]
dependencies = [
  "black",
  "mypy[dmypy]",
  "pytest-cov",
  "pytest",
  "ruff",
  "twine",
  "jsonschema",
  "types-jsonschema",
  "types-python-dateutil",
  "mkdocs-material",
  "mkdocstrings[python]",
  "types-pytz",
  "types-babel",
  "types-python-dateutil",
  "pygments-liquid2",
]
python = "3.12"

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=liquid2 --cov=tests {args}"
cov-html = "pytest --cov-report=html --cov-config=pyproject.toml --cov=liquid2 --cov=tests {args}"
no-cov = "cov --no-cov {args}"
test = "pytest {args}"
lint = "ruff check ."
typing = "mypy"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12", "3.13", "pypy3.10"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["liquid2/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
files = "liquid2"
python_version = "3.10"
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
local_partial_types = true
no_implicit_reexport = true
strict = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = false
warn_return_any = true
warn_unreachable = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

# Same as Black.
line-length = 88

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "BLE",
  "C4",
  "D",
  "E",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PIE",
  "PL",
  "PT",
  "Q",
  "RET",
  "RSE",
  "S",
  "SIM",
  "SLF",
  "T10",
  "T20",
  "TCH",
  "TID",
  "YTT",
]

ignore = [
  "A002",
  "A005",
  "S105",
  "S101",
  "D107",
  "D105",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
  "SIM108",
  "PT001",
]

fixable = ["I"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"liquid2/utils/__init__.py" = ["D104"]
"liquid2/__about__.py" = ["D100"]
"liquid2/__init__.py" = ["D104", "I001"]
"scripts/__init__.py" = ["D104"]
"liquid2/token.py" = ["D101", "D106"]
"liquid2/builtin/expressions.py" = ["D101", "D102"]
"liquid2/lexer.py" = ["D102", "D103", "E741"]
"liquid2/query/parse.py" = ["D102", "PLR2004"]
"liquid2/unescape.py" = ["PLR2004"]
"tests/*" = ["D100", "D101", "D102", "D104", "D103", "PLR2004", "FBT003"]
"docs/.overrides/hooks*" = [
  "D100",
  "D101",
  "D102",
  "D104",
  "D103",
  "PLR2004",
  "FBT003",
]
"performance/*" = ["D103", "PLR2004", "T201", "D100"]
