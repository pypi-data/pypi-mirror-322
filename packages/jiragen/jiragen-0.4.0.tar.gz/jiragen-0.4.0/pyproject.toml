[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[project]
name = "jiragen"
version = "0.4.0"
dynamic = ["dependencies"]
authors = [
    { name = "Abdellah Laassairi", email = "laassairi.abdellah@gmail.com" },
]
description = "RAG-based JIRA ticket generator using vector similarity search"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Documentation",
]

[project.urls]
"Homepage" = "https://github.com/Abdellah-Laassairi/jiragen"
"Bug Tracker" = "https://github.com/Abdellah-Laassairi/jiragen/issues"

[tool.hatch.build.targets.wheel]
packages = ["jiragen"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements.txt"]

[project.scripts]
jiragen = "jiragen.main:main"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.4.0"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
version_files = ["pyproject.toml:^version"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov --cov-report term --cov-report xml:coverage.xml --html=report.html"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["jiragen"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[tool.isort]
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 79
target-version = ['py310']
include = '\.pyi?$'

[tool.pycln]
all = true

[tool.ruff]
line-length = 79
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = ["E203", "E266", "E501", "C901", "F841", "F821"]
exclude = [
    ".eggs",
    ".git",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py310
    isolated_build = True

    [testenv:py310]
    deps =
        pytest>=6.0
        pytest-cov
        pytest-sugar
        pytest-html
    commands =
      pytest --cov --cov-report=xml --cov-config=pyproject.toml --cov-branch --html=report.html

"""
