# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Yr=Object.defineProperty;var Kr=(e,t)=>{for(var A in t)Yr(e,A,{get:t[A],enumerable:!0})};var vr=new Map([["bmp","bmp"],["dcm","gdcm"],["gipl","gipl"],["gipl.gz","gipl"],["hdf5","hdf5"],["jpg","jpeg"],["jpeg","jpeg"],["iwi","wasm"],["iwi.cbor","wasm"],["iwi.cbor.zst","wasmZstd"],["lsm","lsm"],["mnc","mnc"],["mnc.gz","mnc"],["mnc2","mnc"],["mgh","mgh"],["mgz","mgh"],["mgh.gz","mgh"],["mha","meta"],["mhd","meta"],["mrc","mrc"],["nia","nifti"],["nii","nifti"],["nii.gz","nifti"],["hdr","nifti"],["nrrd","nrrd"],["nhdr","nrrd"],["png","png"],["pic","bioRad"],["tif","tiff"],["tiff","tiff"],["vtk","vtk"],["isq","scanco"],["aim","scanco"],["fdf","fdf"]]),_=vr;var jr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},w=jr;var _r={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},N=_r;function zr(e,t){let A=null;switch(e){case w.UInt8:{A=new Uint8Array(t);break}case w.Int8:{A=new Int8Array(t);break}case w.UInt16:{A=new Uint16Array(t);break}case w.Int16:{A=new Int16Array(t);break}case w.UInt32:{A=new Uint32Array(t);break}case w.Int32:{A=new Int32Array(t);break}case w.UInt64:{typeof globalThis.BigUint64Array=="function"?A=new BigUint64Array(t):A=new Uint8Array(t);break}case w.Int64:{typeof globalThis.BigInt64Array=="function"?A=new BigInt64Array(t):A=new Uint8Array(t);break}case N.Float32:{A=new Float32Array(t);break}case N.Float64:{A=new Float64Array(t);break}case"null":{A=null;break}case null:{A=null;break}default:throw new Error("Type is not supported as a TypedArray")}return A}var O=zr;var Vr={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},Qe=Vr;var _e=class{dimension;componentType;pixelType;components;constructor(t=2,A=w.UInt8,r=Qe.Scalar,o=1){this.dimension=t,this.componentType=A,this.pixelType=r,this.components=o}},bA=_e;function Zr(e,t,A,r,o){e[r+A*t]=o}var DA=Zr;var ze=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(t=new bA){this.imageType=t;let A=t.dimension;this.origin=new Array(A),this.origin.fill(0),this.spacing=new Array(A),this.spacing.fill(1),this.direction=new Float64Array(A*A),this.direction.fill(0);for(let r=0;r<A;r++)DA(this.direction,A,r,r,1);this.size=new Array(A),this.size.fill(0),this.metadata=new Map,this.data=null}},Z=ze;function Xr(e){let t=new Z(e.imageType);if(t.name=e.name,t.origin=Array.from(e.origin),t.spacing=Array.from(e.spacing),t.direction=e.direction.slice(),t.size=Array.from(e.size),e.data!==null){let A=e.data.constructor;t.data=new A(e.data.length),t.data!=null&&t.data.set(e.data,0)}return t}var Ve=Xr;function $r(e){if(e.length<1)throw Error("At least one images is required.");let t=e[0];if(t.data===null)throw Error("Image data is null.");let A=new Z(t.imageType);A.origin=Array.from(t.origin),A.spacing=Array.from(t.spacing);let r=A.imageType.dimension;A.direction=t.direction.slice();let o=r-1;A.size=Array.from(t.size);let i=e.reduce((a,g)=>a+g.size[o],0);A.size[o]=i;let n=A.size.reduce((a,g)=>a*g,1)*A.imageType.components,m=t.data.constructor;A.data=new m(n);let f=A.imageType.components;for(let a=0;a<A.size.length-1;a++)f*=A.size[a];let l=0;if(A.data!=null)for(let a=0;a<e.length;a++)A.data.set(e[a].data,f*l),l+=e[a].size[o];else throw Error("Could not create result image data.");return A}var Ze=$r;function ei(e){let t=e.slice((e.lastIndexOf(".")-1>>>0)+2);if(t.toLowerCase()==="gz"){let A=e.slice(0,-3).lastIndexOf(".");t=e.slice((A-1>>>0)+2)}else if(t.toLowerCase()==="cbor"){let A=e.slice(0,-5).lastIndexOf(".");t=e.slice((A-1>>>0)+2)}else if(t.toLowerCase()==="zst"){let A=e.slice(0,-10).lastIndexOf(".");t=e.slice((A-1>>>0)+2)}else if(t.toLowerCase()==="zip"){let A=e.slice(0,-4).lastIndexOf(".");t=e.slice((A-1>>>0)+2)}return t}var se=ei;function ti(e,t){let A={...e.imageType};if(typeof t<"u"&&typeof t.pixelType<"u"&&(A.pixelType=t.pixelType,t.pixelType===Qe.Scalar&&A.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof t<"u"&&typeof t.componentType<"u"&&t.componentType!==e.imageType.componentType&&(A.componentType=t.componentType);let r=new Z(A);if(r.name=e.name,r.origin=Array.from(e.origin),r.spacing=Array.from(e.spacing),r.direction=e.direction.slice(),r.size=Array.from(e.size),r.metadata=new Map(JSON.parse(JSON.stringify(Array.from(e.metadata)))),e.data!==null)if(typeof t<"u"&&typeof t.componentType<"u"&&t.componentType!==e.imageType.componentType)switch(e.imageType.componentType){case w.UInt8:case w.Int8:case w.UInt16:case w.Int16:case w.UInt32:case w.Int32:case N.Float32:case N.Float64:switch(r.imageType.componentType){case w.UInt8:r.data=new Uint8Array(e.data);break;case w.Int8:r.data=new Int8Array(e.data);break;case w.UInt16:r.data=new Uint16Array(e.data);break;case w.Int16:r.data=new Int16Array(e.data);break;case w.UInt32:r.data=new Uint32Array(e.data);break;case w.Int32:r.data=new Int32Array(e.data);break;case N.Float32:r.data=new Float32Array(e.data);break;case N.Float64:r.data=new Float64Array(e.data);break;case w.UInt64:r.data=new BigUint64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asIntN(64,BigInt(e.data[o]));break;case w.Int64:r.data=new BigInt64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=BigInt.asUintN(64,BigInt(e.data[o]));break}break;case w.UInt64:case w.Int64:switch(r.imageType.componentType){case w.UInt8:r.data=new Uint8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case w.Int8:r.data=new Int8Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case w.UInt16:r.data=new Uint16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case w.Int16:r.data=new Int16Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case w.UInt32:r.data=new Uint32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case w.Int32:r.data=new Int32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case N.Float32:r.data=new Float32Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case N.Float64:r.data=new Float64Array(e.data.length);for(let o=0;o<r.data.length;o++)r.data[o]=Number(e.data[o]);break;case w.UInt64:r.data=new BigUint64Array(e.data);break;case w.Int64:r.data=new BigInt64Array(e.data);break}break}else{let o=e.data.constructor;r.data=new o(e.data.length),r.data!=null&&r.data.set(e.data,0)}return r}var q=ti;var Xe=class{fcn;workerQueue;runInfo;constructor(t,A){this.fcn=A,this.workerQueue=new Array(t),this.workerQueue.fill(null),this.runInfo=[]}runTasks(t,A=null){let r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:A,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise((o,i)=>{r.resolve=o,r.reject=i,r.results=new Array(t.length),r.completedTasks=0,r.addingTasks=!0,t.forEach((n,m)=>{this.addTask(r.index,m,n)}),r.addingTasks=!1}),runId:r.index}}terminateWorkers(){for(let t=0;t<this.workerQueue.length;t++){let A=this.workerQueue[t];A?.terminate(),this.workerQueue[t]=null}}cancel(t){let A=this.runInfo[t];A!=null&&(A.canceled=!0)}addTask(t,A,r){let o=this.runInfo[t];if(o?.canceled===!0){o.reject("Remaining tasks canceled"),this.clearTask(o.index);return}if(this.workerQueue.length>0){let i=this.workerQueue.pop();o.runningWorkers++,r[r.length-1].webWorker=i,this.fcn(...r).then(({webWorker:n,...m})=>{if(this.workerQueue.push(n),this.runInfo[t]!==null){if(o.runningWorkers--,o.results[A]=m,o.completedTasks++,o.progressCallback!=null&&o.progressCallback(o.completedTasks,o.results.length),o.taskQueue.length>0){let f=o.taskQueue.shift();this.addTask(t,f[0],f[1])}else if(!o.addingTasks&&o.runningWorkers===0){let f=o.results;o.resolve(f),this.clearTask(o.index)}}}).catch(n=>{o.reject(n),this.clearTask(o.index)})}else o.runningWorkers!==0||o.postponed?o.taskQueue.push([A,r]):(o.postponed=!0,setTimeout(()=>{o.postponed=!1,this.addTask(o.index,A,r)},50))}clearTask(t){this.runInfo[t].results=[],this.runInfo[t].taskQueue=[],this.runInfo[t].progressCallback=null,this.runInfo[t].canceled=null,this.runInfo[t].reject=()=>{},this.runInfo[t].resolve=()=>{}}},$e=Xe;var Ai={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},p=Ai;var FA=Symbol("Comlink.proxy"),ri=Symbol("Comlink.endpoint"),At=Symbol("Comlink.releaseProxy"),et=Symbol("Comlink.finalizer"),we=Symbol("Comlink.thrown"),UA=e=>typeof e=="object"&&e!==null||typeof e=="function",ii={canHandle:e=>UA(e)&&e[FA],serialize(e){let{port1:t,port2:A}=new MessageChannel;return NA(e,t),[A,[A]]},deserialize(e){return e.start(),rt(e)}},oi={canHandle:e=>UA(e)&&we in e,serialize({value:e}){let t;return e instanceof Error?t={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:t={isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},SA=new Map([["proxy",ii],["throw",oi]]);function ai(e,t){for(let A of e)if(t===A||A==="*"||A instanceof RegExp&&A.test(t))return!0;return!1}function NA(e,t=globalThis,A=["*"]){t.addEventListener("message",function r(o){if(!o||!o.data)return;if(!ai(A,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:i,type:n,path:m}=Object.assign({path:[]},o.data),f=(o.data.argumentList||[]).map(z),l;try{let a=m.slice(0,-1).reduce((u,s)=>u[s],e),g=m.reduce((u,s)=>u[s],e);switch(n){case"GET":l=g;break;case"SET":a[m.slice(-1)[0]]=z(o.data.value),l=!0;break;case"APPLY":l=g.apply(a,f);break;case"CONSTRUCT":{let u=new g(...f);l=Ii(u)}break;case"ENDPOINT":{let{port1:u,port2:s}=new MessageChannel;NA(e,s),l=it(u,[u])}break;case"RELEASE":l=void 0;break;default:return}}catch(a){l={value:a,[we]:0}}Promise.resolve(l).catch(a=>({value:a,[we]:0})).then(a=>{let[g,u]=be(a);t.postMessage(Object.assign(Object.assign({},g),{id:i}),u),n==="RELEASE"&&(t.removeEventListener("message",r),OA(t),et in e&&typeof e[et]=="function"&&e[et]())}).catch(a=>{let[g,u]=be({value:new TypeError("Unserializable return value"),[we]:0});t.postMessage(Object.assign(Object.assign({},g),{id:i}),u)})}),t.start&&t.start()}function ni(e){return e.constructor.name==="MessagePort"}function OA(e){ni(e)&&e.close()}function rt(e,t){return tt(e,[],t)}function he(e){if(e)throw new Error("Proxy has been released and is not useable")}function PA(e){return X(e,{type:"RELEASE"}).then(()=>{OA(e)})}var Re=new WeakMap,ke="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let t=(Re.get(e)||0)-1;Re.set(e,t),t===0&&PA(e)});function si(e,t){let A=(Re.get(t)||0)+1;Re.set(t,A),ke&&ke.register(e,t,e)}function gi(e){ke&&ke.unregister(e)}function tt(e,t=[],A=function(){}){let r=!1,o=new Proxy(A,{get(i,n){if(he(r),n===At)return()=>{gi(o),PA(e),r=!0};if(n==="then"){if(t.length===0)return{then:()=>o};let m=X(e,{type:"GET",path:t.map(f=>f.toString())}).then(z);return m.then.bind(m)}return tt(e,[...t,n])},set(i,n,m){he(r);let[f,l]=be(m);return X(e,{type:"SET",path:[...t,n].map(a=>a.toString()),value:f},l).then(z)},apply(i,n,m){he(r);let f=t[t.length-1];if(f===ri)return X(e,{type:"ENDPOINT"}).then(z);if(f==="bind")return tt(e,t.slice(0,-1));let[l,a]=WA(m);return X(e,{type:"APPLY",path:t.map(g=>g.toString()),argumentList:l},a).then(z)},construct(i,n){he(r);let[m,f]=WA(n);return X(e,{type:"CONSTRUCT",path:t.map(l=>l.toString()),argumentList:m},f).then(z)}});return si(o,e),o}function li(e){return Array.prototype.concat.apply([],e)}function WA(e){let t=e.map(be);return[t.map(A=>A[0]),li(t.map(A=>A[1]))]}var xA=new WeakMap;function it(e,t){return xA.set(e,t),e}function Ii(e){return Object.assign(e,{[FA]:!0})}function be(e){for(let[t,A]of SA)if(A.canHandle(e)){let[r,o]=A.serialize(e);return[{type:"HANDLER",name:t,value:r},o]}return[{type:"RAW",value:e},xA.get(e)||[]]}function z(e){switch(e.type){case"HANDLER":return SA.get(e.name).deserialize(e.value);case"RAW":return e.value}}function X(e,t,A){return new Promise(r=>{let o=pi();e.addEventListener("message",function i(n){!n.data||!n.data.id||n.data.id!==o||(e.removeEventListener("message",i),r(n.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:o},t),A)})}function pi(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function ge(e,t){return function(){return e.apply(t,arguments)}}var{toString:mi}=Object.prototype,{getPrototypeOf:nt}=Object,We=(e=>t=>{let A=mi.call(t);return e[A]||(e[A]=A.slice(8,-1).toLowerCase())})(Object.create(null)),T=e=>(e=e.toLowerCase(),t=>We(t)===e),Fe=e=>t=>typeof t===e,{isArray:$}=Array,le=Fe("undefined");function ui(e){return e!==null&&!le(e)&&e.constructor!==null&&!le(e.constructor)&&P(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}var JA=T("ArrayBuffer");function fi(e){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(e):t=e&&e.buffer&&JA(e.buffer),t}var ci=Fe("string"),P=Fe("function"),MA=Fe("number"),Ue=e=>e!==null&&typeof e=="object",di=e=>e===!0||e===!1,De=e=>{if(We(e)!=="object")return!1;let t=nt(e);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Bi=T("Date"),Ci=T("File"),Ei=T("Blob"),yi=T("FileList"),Qi=e=>Ue(e)&&P(e.pipe),hi=e=>{let t;return e&&(typeof FormData=="function"&&e instanceof FormData||P(e.append)&&((t=We(e))==="formdata"||t==="object"&&P(e.toString)&&e.toString()==="[object FormData]"))},wi=T("URLSearchParams"),[Ri,ki,bi,Di]=["ReadableStream","Request","Response","Headers"].map(T),Wi=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function Ie(e,t,{allOwnKeys:A=!1}={}){if(e===null||typeof e>"u")return;let r,o;if(typeof e!="object"&&(e=[e]),$(e))for(r=0,o=e.length;r<o;r++)t.call(null,e[r],r,e);else{let i=A?Object.getOwnPropertyNames(e):Object.keys(e),n=i.length,m;for(r=0;r<n;r++)m=i[r],t.call(null,e[m],m,e)}}function HA(e,t){t=t.toLowerCase();let A=Object.keys(e),r=A.length,o;for(;r-- >0;)if(o=A[r],t===o.toLowerCase())return o;return null}var V=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,qA=e=>!le(e)&&e!==V;function at(){let{caseless:e}=qA(this)&&this||{},t={},A=(r,o)=>{let i=e&&HA(t,o)||o;De(t[i])&&De(r)?t[i]=at(t[i],r):De(r)?t[i]=at({},r):$(r)?t[i]=r.slice():t[i]=r};for(let r=0,o=arguments.length;r<o;r++)arguments[r]&&Ie(arguments[r],A);return t}var Fi=(e,t,A,{allOwnKeys:r}={})=>(Ie(t,(o,i)=>{A&&P(o)?e[i]=ge(o,A):e[i]=o},{allOwnKeys:r}),e),Ui=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),Si=(e,t,A,r)=>{e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),A&&Object.assign(e.prototype,A)},Ni=(e,t,A,r)=>{let o,i,n,m={};if(t=t||{},e==null)return t;do{for(o=Object.getOwnPropertyNames(e),i=o.length;i-- >0;)n=o[i],(!r||r(n,e,t))&&!m[n]&&(t[n]=e[n],m[n]=!0);e=A!==!1&&nt(e)}while(e&&(!A||A(e,t))&&e!==Object.prototype);return t},Oi=(e,t,A)=>{e=String(e),(A===void 0||A>e.length)&&(A=e.length),A-=t.length;let r=e.indexOf(t,A);return r!==-1&&r===A},Pi=e=>{if(!e)return null;if($(e))return e;let t=e.length;if(!MA(t))return null;let A=new Array(t);for(;t-- >0;)A[t]=e[t];return A},xi=(e=>t=>e&&t instanceof e)(typeof Uint8Array<"u"&&nt(Uint8Array)),Ti=(e,t)=>{let r=(e&&e[Symbol.iterator]).call(e),o;for(;(o=r.next())&&!o.done;){let i=o.value;t.call(e,i[0],i[1])}},Gi=(e,t)=>{let A,r=[];for(;(A=e.exec(t))!==null;)r.push(A);return r},Li=T("HTMLFormElement"),Ji=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(A,r,o){return r.toUpperCase()+o}),GA=(({hasOwnProperty:e})=>(t,A)=>e.call(t,A))(Object.prototype),Mi=T("RegExp"),YA=(e,t)=>{let A=Object.getOwnPropertyDescriptors(e),r={};Ie(A,(o,i)=>{let n;(n=t(o,i,e))!==!1&&(r[i]=n||o)}),Object.defineProperties(e,r)},Hi=e=>{YA(e,(t,A)=>{if(P(e)&&["arguments","caller","callee"].indexOf(A)!==-1)return!1;let r=e[A];if(P(r)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+A+"'")})}})},qi=(e,t)=>{let A={},r=o=>{o.forEach(i=>{A[i]=!0})};return $(e)?r(e):r(String(e).split(t)),A},Yi=()=>{},Ki=(e,t)=>e!=null&&Number.isFinite(e=+e)?e:t,ot="abcdefghijklmnopqrstuvwxyz",LA="0123456789",KA={DIGIT:LA,ALPHA:ot,ALPHA_DIGIT:ot+ot.toUpperCase()+LA},vi=(e=16,t=KA.ALPHA_DIGIT)=>{let A="",{length:r}=t;for(;e--;)A+=t[Math.random()*r|0];return A};function ji(e){return!!(e&&P(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}var _i=e=>{let t=new Array(10),A=(r,o)=>{if(Ue(r)){if(t.indexOf(r)>=0)return;if(!("toJSON"in r)){t[o]=r;let i=$(r)?[]:{};return Ie(r,(n,m)=>{let f=A(n,o+1);!le(f)&&(i[m]=f)}),t[o]=void 0,i}}return r};return A(e,0)},zi=T("AsyncFunction"),Vi=e=>e&&(Ue(e)||P(e))&&P(e.then)&&P(e.catch),vA=((e,t)=>e?setImmediate:t?((A,r)=>(V.addEventListener("message",({source:o,data:i})=>{o===V&&i===A&&r.length&&r.shift()()},!1),o=>{r.push(o),V.postMessage(A,"*")}))(`axios@${Math.random()}`,[]):A=>setTimeout(A))(typeof setImmediate=="function",P(V.postMessage)),Zi=typeof queueMicrotask<"u"?queueMicrotask.bind(V):typeof process<"u"&&process.nextTick||vA,c={isArray:$,isArrayBuffer:JA,isBuffer:ui,isFormData:hi,isArrayBufferView:fi,isString:ci,isNumber:MA,isBoolean:di,isObject:Ue,isPlainObject:De,isReadableStream:Ri,isRequest:ki,isResponse:bi,isHeaders:Di,isUndefined:le,isDate:Bi,isFile:Ci,isBlob:Ei,isRegExp:Mi,isFunction:P,isStream:Qi,isURLSearchParams:wi,isTypedArray:xi,isFileList:yi,forEach:Ie,merge:at,extend:Fi,trim:Wi,stripBOM:Ui,inherits:Si,toFlatObject:Ni,kindOf:We,kindOfTest:T,endsWith:Oi,toArray:Pi,forEachEntry:Ti,matchAll:Gi,isHTMLForm:Li,hasOwnProperty:GA,hasOwnProp:GA,reduceDescriptors:YA,freezeMethods:Hi,toObjectSet:qi,toCamelCase:Ji,noop:Yi,toFiniteNumber:Ki,findKey:HA,global:V,isContextDefined:qA,ALPHABET:KA,generateString:vi,isSpecCompliantForm:ji,toJSONObject:_i,isAsyncFn:zi,isThenable:Vi,setImmediate:vA,asap:Zi};function ee(e,t,A,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",t&&(this.code=t),A&&(this.config=A),r&&(this.request=r),o&&(this.response=o)}c.inherits(ee,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:c.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var jA=ee.prototype,_A={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{_A[e]={value:e}});Object.defineProperties(ee,_A);Object.defineProperty(jA,"isAxiosError",{value:!0});ee.from=(e,t,A,r,o,i)=>{let n=Object.create(jA);return c.toFlatObject(e,n,function(f){return f!==Error.prototype},m=>m!=="isAxiosError"),ee.call(n,e.message,t,A,r,o),n.cause=e,n.name=e.name,i&&Object.assign(n,i),n};var h=ee;var Se=null;function st(e){return c.isPlainObject(e)||c.isArray(e)}function VA(e){return c.endsWith(e,"[]")?e.slice(0,-2):e}function zA(e,t,A){return e?e.concat(t).map(function(o,i){return o=VA(o),!A&&i?"["+o+"]":o}).join(A?".":""):t}function Xi(e){return c.isArray(e)&&!e.some(st)}var $i=c.toFlatObject(c,{},null,function(t){return/^is[A-Z]/.test(t)});function eo(e,t,A){if(!c.isObject(e))throw new TypeError("target must be an object");t=t||new(Se||FormData),A=c.toFlatObject(A,{metaTokens:!0,dots:!1,indexes:!1},!1,function(B,d){return!c.isUndefined(d[B])});let r=A.metaTokens,o=A.visitor||a,i=A.dots,n=A.indexes,f=(A.Blob||typeof Blob<"u"&&Blob)&&c.isSpecCompliantForm(t);if(!c.isFunction(o))throw new TypeError("visitor must be a function");function l(I){if(I===null)return"";if(c.isDate(I))return I.toISOString();if(!f&&c.isBlob(I))throw new h("Blob is not supported. Use a Buffer instead.");return c.isArrayBuffer(I)||c.isTypedArray(I)?f&&typeof Blob=="function"?new Blob([I]):Buffer.from(I):I}function a(I,B,d){let k=I;if(I&&!d&&typeof I=="object"){if(c.endsWith(B,"{}"))B=r?B:B.slice(0,-2),I=JSON.stringify(I);else if(c.isArray(I)&&Xi(I)||(c.isFileList(I)||c.endsWith(B,"[]"))&&(k=c.toArray(I)))return B=VA(B),k.forEach(function(R,x){!(c.isUndefined(R)||R===null)&&t.append(n===!0?zA([B],x,i):n===null?B:B+"[]",l(R))}),!1}return st(I)?!0:(t.append(zA(d,B,i),l(I)),!1)}let g=[],u=Object.assign($i,{defaultVisitor:a,convertValue:l,isVisitable:st});function s(I,B){if(!c.isUndefined(I)){if(g.indexOf(I)!==-1)throw Error("Circular reference detected in "+B.join("."));g.push(I),c.forEach(I,function(k,U){(!(c.isUndefined(k)||k===null)&&o.call(t,k,c.isString(U)?U.trim():U,B,u))===!0&&s(k,B?B.concat(U):[U])}),g.pop()}}if(!c.isObject(e))throw new TypeError("data must be an object");return s(e),t}var Y=eo;function ZA(e){let t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(r){return t[r]})}function XA(e,t){this._pairs=[],e&&Y(e,this,t)}var $A=XA.prototype;$A.append=function(t,A){this._pairs.push([t,A])};$A.toString=function(t){let A=t?function(r){return t.call(this,r,ZA)}:ZA;return this._pairs.map(function(o){return A(o[0])+"="+A(o[1])},"").join("&")};var Ne=XA;function to(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function pe(e,t,A){if(!t)return e;let r=A&&A.encode||to,o=A&&A.serialize,i;if(o?i=o(t,A):i=c.isURLSearchParams(t)?t.toString():new Ne(t,A).toString(r),i){let n=e.indexOf("#");n!==-1&&(e=e.slice(0,n)),e+=(e.indexOf("?")===-1?"?":"&")+i}return e}var gt=class{constructor(){this.handlers=[]}use(t,A,r){return this.handlers.push({fulfilled:t,rejected:A,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){c.forEach(this.handlers,function(r){r!==null&&t(r)})}},lt=gt;var Oe={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var er=typeof URLSearchParams<"u"?URLSearchParams:Ne;var tr=typeof FormData<"u"?FormData:null;var Ar=typeof Blob<"u"?Blob:null;var rr={isBrowser:!0,classes:{URLSearchParams:er,FormData:tr,Blob:Ar},protocols:["http","https","file","blob","url","data"]};var pt={};Kr(pt,{hasBrowserEnv:()=>It,hasStandardBrowserEnv:()=>Ao,hasStandardBrowserWebWorkerEnv:()=>ro,origin:()=>io});var It=typeof window<"u"&&typeof document<"u",Ao=(e=>It&&["ReactNative","NativeScript","NS"].indexOf(e)<0)(typeof navigator<"u"&&navigator.product),ro=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",io=It&&window.location.href||"http://localhost";var F={...pt,...rr};function mt(e,t){return Y(e,new F.classes.URLSearchParams,Object.assign({visitor:function(A,r,o,i){return F.isNode&&c.isBuffer(A)?(this.append(r,A.toString("base64")),!1):i.defaultVisitor.apply(this,arguments)}},t))}function oo(e){return c.matchAll(/\w+|\[(\w*)]/g,e).map(t=>t[0]==="[]"?"":t[1]||t[0])}function ao(e){let t={},A=Object.keys(e),r,o=A.length,i;for(r=0;r<o;r++)i=A[r],t[i]=e[i];return t}function no(e){function t(A,r,o,i){let n=A[i++];if(n==="__proto__")return!0;let m=Number.isFinite(+n),f=i>=A.length;return n=!n&&c.isArray(o)?o.length:n,f?(c.hasOwnProp(o,n)?o[n]=[o[n],r]:o[n]=r,!m):((!o[n]||!c.isObject(o[n]))&&(o[n]=[]),t(A,r,o[n],i)&&c.isArray(o[n])&&(o[n]=ao(o[n])),!m)}if(c.isFormData(e)&&c.isFunction(e.entries)){let A={};return c.forEachEntry(e,(r,o)=>{t(oo(r),o,A,0)}),A}return null}var Pe=no;function so(e,t,A){if(c.isString(e))try{return(t||JSON.parse)(e),c.trim(e)}catch(r){if(r.name!=="SyntaxError")throw r}return(A||JSON.stringify)(e)}var ut={transitional:Oe,adapter:["xhr","http","fetch"],transformRequest:[function(t,A){let r=A.getContentType()||"",o=r.indexOf("application/json")>-1,i=c.isObject(t);if(i&&c.isHTMLForm(t)&&(t=new FormData(t)),c.isFormData(t))return o?JSON.stringify(Pe(t)):t;if(c.isArrayBuffer(t)||c.isBuffer(t)||c.isStream(t)||c.isFile(t)||c.isBlob(t)||c.isReadableStream(t))return t;if(c.isArrayBufferView(t))return t.buffer;if(c.isURLSearchParams(t))return A.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let m;if(i){if(r.indexOf("application/x-www-form-urlencoded")>-1)return mt(t,this.formSerializer).toString();if((m=c.isFileList(t))||r.indexOf("multipart/form-data")>-1){let f=this.env&&this.env.FormData;return Y(m?{"files[]":t}:t,f&&new f,this.formSerializer)}}return i||o?(A.setContentType("application/json",!1),so(t)):t}],transformResponse:[function(t){let A=this.transitional||ut.transitional,r=A&&A.forcedJSONParsing,o=this.responseType==="json";if(c.isResponse(t)||c.isReadableStream(t))return t;if(t&&c.isString(t)&&(r&&!this.responseType||o)){let n=!(A&&A.silentJSONParsing)&&o;try{return JSON.parse(t)}catch(m){if(n)throw m.name==="SyntaxError"?h.from(m,h.ERR_BAD_RESPONSE,this,null,this.response):m}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:F.classes.FormData,Blob:F.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};c.forEach(["delete","get","head","post","put","patch"],e=>{ut.headers[e]={}});var te=ut;var go=c.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),ir=e=>{let t={},A,r,o;return e&&e.split(`
`).forEach(function(n){o=n.indexOf(":"),A=n.substring(0,o).trim().toLowerCase(),r=n.substring(o+1).trim(),!(!A||t[A]&&go[A])&&(A==="set-cookie"?t[A]?t[A].push(r):t[A]=[r]:t[A]=t[A]?t[A]+", "+r:r)}),t};var or=Symbol("internals");function me(e){return e&&String(e).trim().toLowerCase()}function xe(e){return e===!1||e==null?e:c.isArray(e)?e.map(xe):String(e)}function lo(e){let t=Object.create(null),A=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=A.exec(e);)t[r[1]]=r[2];return t}var Io=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function ft(e,t,A,r,o){if(c.isFunction(r))return r.call(this,t,A);if(o&&(t=A),!!c.isString(t)){if(c.isString(r))return t.indexOf(r)!==-1;if(c.isRegExp(r))return r.test(t)}}function po(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(t,A,r)=>A.toUpperCase()+r)}function mo(e,t){let A=c.toCamelCase(" "+t);["get","set","has"].forEach(r=>{Object.defineProperty(e,r+A,{value:function(o,i,n){return this[r].call(this,t,o,i,n)},configurable:!0})})}var Ae=class{constructor(t){t&&this.set(t)}set(t,A,r){let o=this;function i(m,f,l){let a=me(f);if(!a)throw new Error("header name must be a non-empty string");let g=c.findKey(o,a);(!g||o[g]===void 0||l===!0||l===void 0&&o[g]!==!1)&&(o[g||f]=xe(m))}let n=(m,f)=>c.forEach(m,(l,a)=>i(l,a,f));if(c.isPlainObject(t)||t instanceof this.constructor)n(t,A);else if(c.isString(t)&&(t=t.trim())&&!Io(t))n(ir(t),A);else if(c.isHeaders(t))for(let[m,f]of t.entries())i(f,m,r);else t!=null&&i(A,t,r);return this}get(t,A){if(t=me(t),t){let r=c.findKey(this,t);if(r){let o=this[r];if(!A)return o;if(A===!0)return lo(o);if(c.isFunction(A))return A.call(this,o,r);if(c.isRegExp(A))return A.exec(o);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,A){if(t=me(t),t){let r=c.findKey(this,t);return!!(r&&this[r]!==void 0&&(!A||ft(this,this[r],r,A)))}return!1}delete(t,A){let r=this,o=!1;function i(n){if(n=me(n),n){let m=c.findKey(r,n);m&&(!A||ft(r,r[m],m,A))&&(delete r[m],o=!0)}}return c.isArray(t)?t.forEach(i):i(t),o}clear(t){let A=Object.keys(this),r=A.length,o=!1;for(;r--;){let i=A[r];(!t||ft(this,this[i],i,t,!0))&&(delete this[i],o=!0)}return o}normalize(t){let A=this,r={};return c.forEach(this,(o,i)=>{let n=c.findKey(r,i);if(n){A[n]=xe(o),delete A[i];return}let m=t?po(i):String(i).trim();m!==i&&delete A[i],A[m]=xe(o),r[m]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let A=Object.create(null);return c.forEach(this,(r,o)=>{r!=null&&r!==!1&&(A[o]=t&&c.isArray(r)?r.join(", "):r)}),A}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,A])=>t+": "+A).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...A){let r=new this(t);return A.forEach(o=>r.set(o)),r}static accessor(t){let r=(this[or]=this[or]={accessors:{}}).accessors,o=this.prototype;function i(n){let m=me(n);r[m]||(mo(o,n),r[m]=!0)}return c.isArray(t)?t.forEach(i):i(t),this}};Ae.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);c.reduceDescriptors(Ae.prototype,({value:e},t)=>{let A=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(r){this[A]=r}}});c.freezeMethods(Ae);var W=Ae;function ue(e,t){let A=this||te,r=t||A,o=W.from(r.headers),i=r.data;return c.forEach(e,function(m){i=m.call(A,i,o.normalize(),t?t.status:void 0)}),o.normalize(),i}function fe(e){return!!(e&&e.__CANCEL__)}function ar(e,t,A){h.call(this,e??"canceled",h.ERR_CANCELED,t,A),this.name="CanceledError"}c.inherits(ar,h,{__CANCEL__:!0});var M=ar;function ce(e,t,A){let r=A.config.validateStatus;!A.status||!r||r(A.status)?e(A):t(new h("Request failed with status code "+A.status,[h.ERR_BAD_REQUEST,h.ERR_BAD_RESPONSE][Math.floor(A.status/100)-4],A.config,A.request,A))}function ct(e){let t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}function uo(e,t){e=e||10;let A=new Array(e),r=new Array(e),o=0,i=0,n;return t=t!==void 0?t:1e3,function(f){let l=Date.now(),a=r[i];n||(n=l),A[o]=f,r[o]=l;let g=i,u=0;for(;g!==o;)u+=A[g++],g=g%e;if(o=(o+1)%e,o===i&&(i=(i+1)%e),l-n<t)return;let s=a&&l-a;return s?Math.round(u*1e3/s):void 0}}var nr=uo;function fo(e,t){let A=0,r=1e3/t,o,i,n=(l,a=Date.now())=>{A=a,o=null,i&&(clearTimeout(i),i=null),e.apply(null,l)};return[(...l)=>{let a=Date.now(),g=a-A;g>=r?n(l,a):(o=l,i||(i=setTimeout(()=>{i=null,n(o)},r-g)))},()=>o&&n(o)]}var sr=fo;var re=(e,t,A=3)=>{let r=0,o=nr(50,250);return sr(i=>{let n=i.loaded,m=i.lengthComputable?i.total:void 0,f=n-r,l=o(f),a=n<=m;r=n;let g={loaded:n,total:m,progress:m?n/m:void 0,bytes:f,rate:l||void 0,estimated:l&&m&&a?(m-n)/l:void 0,event:i,lengthComputable:m!=null,[t?"download":"upload"]:!0};e(g)},A)},dt=(e,t)=>{let A=e!=null;return[r=>t[0]({lengthComputable:A,total:e,loaded:r}),t[1]]},Bt=e=>(...t)=>c.asap(()=>e(...t));var gr=F.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),A=document.createElement("a"),r;function o(i){let n=i;return t&&(A.setAttribute("href",n),n=A.href),A.setAttribute("href",n),{href:A.href,protocol:A.protocol?A.protocol.replace(/:$/,""):"",host:A.host,search:A.search?A.search.replace(/^\?/,""):"",hash:A.hash?A.hash.replace(/^#/,""):"",hostname:A.hostname,port:A.port,pathname:A.pathname.charAt(0)==="/"?A.pathname:"/"+A.pathname}}return r=o(window.location.href),function(n){let m=c.isString(n)?o(n):n;return m.protocol===r.protocol&&m.host===r.host}}():function(){return function(){return!0}}();var lr=F.hasStandardBrowserEnv?{write(e,t,A,r,o,i){let n=[e+"="+encodeURIComponent(t)];c.isNumber(A)&&n.push("expires="+new Date(A).toGMTString()),c.isString(r)&&n.push("path="+r),c.isString(o)&&n.push("domain="+o),i===!0&&n.push("secure"),document.cookie=n.join("; ")},read(e){let t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function Ct(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function Et(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}function de(e,t){return e&&!Ct(t)?Et(e,t):t}var Ir=e=>e instanceof W?{...e}:e;function G(e,t){t=t||{};let A={};function r(l,a,g){return c.isPlainObject(l)&&c.isPlainObject(a)?c.merge.call({caseless:g},l,a):c.isPlainObject(a)?c.merge({},a):c.isArray(a)?a.slice():a}function o(l,a,g){if(c.isUndefined(a)){if(!c.isUndefined(l))return r(void 0,l,g)}else return r(l,a,g)}function i(l,a){if(!c.isUndefined(a))return r(void 0,a)}function n(l,a){if(c.isUndefined(a)){if(!c.isUndefined(l))return r(void 0,l)}else return r(void 0,a)}function m(l,a,g){if(g in t)return r(l,a);if(g in e)return r(void 0,l)}let f={url:i,method:i,data:i,baseURL:n,transformRequest:n,transformResponse:n,paramsSerializer:n,timeout:n,timeoutMessage:n,withCredentials:n,withXSRFToken:n,adapter:n,responseType:n,xsrfCookieName:n,xsrfHeaderName:n,onUploadProgress:n,onDownloadProgress:n,decompress:n,maxContentLength:n,maxBodyLength:n,beforeRedirect:n,transport:n,httpAgent:n,httpsAgent:n,cancelToken:n,socketPath:n,responseEncoding:n,validateStatus:m,headers:(l,a)=>o(Ir(l),Ir(a),!0)};return c.forEach(Object.keys(Object.assign({},e,t)),function(a){let g=f[a]||o,u=g(e[a],t[a],a);c.isUndefined(u)&&g!==m||(A[a]=u)}),A}var Te=e=>{let t=G({},e),{data:A,withXSRFToken:r,xsrfHeaderName:o,xsrfCookieName:i,headers:n,auth:m}=t;t.headers=n=W.from(n),t.url=pe(de(t.baseURL,t.url),e.params,e.paramsSerializer),m&&n.set("Authorization","Basic "+btoa((m.username||"")+":"+(m.password?unescape(encodeURIComponent(m.password)):"")));let f;if(c.isFormData(A)){if(F.hasStandardBrowserEnv||F.hasStandardBrowserWebWorkerEnv)n.setContentType(void 0);else if((f=n.getContentType())!==!1){let[l,...a]=f?f.split(";").map(g=>g.trim()).filter(Boolean):[];n.setContentType([l||"multipart/form-data",...a].join("; "))}}if(F.hasStandardBrowserEnv&&(r&&c.isFunction(r)&&(r=r(t)),r||r!==!1&&gr(t.url))){let l=o&&i&&lr.read(i);l&&n.set(o,l)}return t};var co=typeof XMLHttpRequest<"u",pr=co&&function(e){return new Promise(function(A,r){let o=Te(e),i=o.data,n=W.from(o.headers).normalize(),{responseType:m,onUploadProgress:f,onDownloadProgress:l}=o,a,g,u,s,I;function B(){s&&s(),I&&I(),o.cancelToken&&o.cancelToken.unsubscribe(a),o.signal&&o.signal.removeEventListener("abort",a)}let d=new XMLHttpRequest;d.open(o.method.toUpperCase(),o.url,!0),d.timeout=o.timeout;function k(){if(!d)return;let R=W.from("getAllResponseHeaders"in d&&d.getAllResponseHeaders()),j={data:!m||m==="text"||m==="json"?d.responseText:d.response,status:d.status,statusText:d.statusText,headers:R,config:e,request:d};ce(function(J){A(J),B()},function(J){r(J),B()},j),d=null}"onloadend"in d?d.onloadend=k:d.onreadystatechange=function(){!d||d.readyState!==4||d.status===0&&!(d.responseURL&&d.responseURL.indexOf("file:")===0)||setTimeout(k)},d.onabort=function(){d&&(r(new h("Request aborted",h.ECONNABORTED,e,d)),d=null)},d.onerror=function(){r(new h("Network Error",h.ERR_NETWORK,e,d)),d=null},d.ontimeout=function(){let x=o.timeout?"timeout of "+o.timeout+"ms exceeded":"timeout exceeded",j=o.transitional||Oe;o.timeoutErrorMessage&&(x=o.timeoutErrorMessage),r(new h(x,j.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,e,d)),d=null},i===void 0&&n.setContentType(null),"setRequestHeader"in d&&c.forEach(n.toJSON(),function(x,j){d.setRequestHeader(j,x)}),c.isUndefined(o.withCredentials)||(d.withCredentials=!!o.withCredentials),m&&m!=="json"&&(d.responseType=o.responseType),l&&([u,I]=re(l,!0),d.addEventListener("progress",u)),f&&d.upload&&([g,s]=re(f),d.upload.addEventListener("progress",g),d.upload.addEventListener("loadend",s)),(o.cancelToken||o.signal)&&(a=R=>{d&&(r(!R||R.type?new M(null,e,d):R),d.abort(),d=null)},o.cancelToken&&o.cancelToken.subscribe(a),o.signal&&(o.signal.aborted?a():o.signal.addEventListener("abort",a)));let U=ct(o.url);if(U&&F.protocols.indexOf(U)===-1){r(new h("Unsupported protocol "+U+":",h.ERR_BAD_REQUEST,e));return}d.send(i||null)})};var Bo=(e,t)=>{let A=new AbortController,r,o=function(f){if(!r){r=!0,n();let l=f instanceof Error?f:this.reason;A.abort(l instanceof h?l:new M(l instanceof Error?l.message:l))}},i=t&&setTimeout(()=>{o(new h(`timeout ${t} of ms exceeded`,h.ETIMEDOUT))},t),n=()=>{e&&(i&&clearTimeout(i),i=null,e.forEach(f=>{f&&(f.removeEventListener?f.removeEventListener("abort",o):f.unsubscribe(o))}),e=null)};e.forEach(f=>f&&f.addEventListener&&f.addEventListener("abort",o));let{signal:m}=A;return m.unsubscribe=n,[m,()=>{i&&clearTimeout(i),i=null}]},mr=Bo;var Co=function*(e,t){let A=e.byteLength;if(!t||A<t){yield e;return}let r=0,o;for(;r<A;)o=r+t,yield e.slice(r,o),r=o},Eo=async function*(e,t,A){for await(let r of e)yield*Co(ArrayBuffer.isView(r)?r:await A(String(r)),t)},yt=(e,t,A,r,o)=>{let i=Eo(e,t,o),n=0,m,f=l=>{m||(m=!0,r&&r(l))};return new ReadableStream({async pull(l){try{let{done:a,value:g}=await i.next();if(a){f(),l.close();return}let u=g.byteLength;if(A){let s=n+=u;A(s)}l.enqueue(new Uint8Array(g))}catch(a){throw f(a),a}},cancel(l){return f(l),i.return()}},{highWaterMark:2})};var Le=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",fr=Le&&typeof ReadableStream=="function",Qt=Le&&(typeof TextEncoder=="function"?(e=>t=>e.encode(t))(new TextEncoder):async e=>new Uint8Array(await new Response(e).arrayBuffer())),cr=(e,...t)=>{try{return!!e(...t)}catch{return!1}},yo=fr&&cr(()=>{let e=!1,t=new Request(F.origin,{body:new ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type");return e&&!t}),ur=64*1024,ht=fr&&cr(()=>c.isReadableStream(new Response("").body)),Ge={stream:ht&&(e=>e.body)};Le&&(e=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!Ge[t]&&(Ge[t]=c.isFunction(e[t])?A=>A[t]():(A,r)=>{throw new h(`Response type '${t}' is not supported`,h.ERR_NOT_SUPPORT,r)})})})(new Response);var Qo=async e=>{if(e==null)return 0;if(c.isBlob(e))return e.size;if(c.isSpecCompliantForm(e))return(await new Request(e).arrayBuffer()).byteLength;if(c.isArrayBufferView(e)||c.isArrayBuffer(e))return e.byteLength;if(c.isURLSearchParams(e)&&(e=e+""),c.isString(e))return(await Qt(e)).byteLength},ho=async(e,t)=>{let A=c.toFiniteNumber(e.getContentLength());return A??Qo(t)},dr=Le&&(async e=>{let{url:t,method:A,data:r,signal:o,cancelToken:i,timeout:n,onDownloadProgress:m,onUploadProgress:f,responseType:l,headers:a,withCredentials:g="same-origin",fetchOptions:u}=Te(e);l=l?(l+"").toLowerCase():"text";let[s,I]=o||i||n?mr([o,i],n):[],B,d,k=()=>{!B&&setTimeout(()=>{s&&s.unsubscribe()}),B=!0},U;try{if(f&&yo&&A!=="get"&&A!=="head"&&(U=await ho(a,r))!==0){let L=new Request(t,{method:"POST",body:r,duplex:"half"}),J;if(c.isFormData(r)&&(J=L.headers.get("content-type"))&&a.setContentType(J),L.body){let[je,ye]=dt(U,re(Bt(f)));r=yt(L.body,ur,je,ye,Qt)}}c.isString(g)||(g=g?"include":"omit"),d=new Request(t,{...u,signal:s,method:A.toUpperCase(),headers:a.normalize().toJSON(),body:r,duplex:"half",credentials:g});let R=await fetch(d),x=ht&&(l==="stream"||l==="response");if(ht&&(m||x)){let L={};["status","statusText","headers"].forEach(kA=>{L[kA]=R[kA]});let J=c.toFiniteNumber(R.headers.get("content-length")),[je,ye]=m&&dt(J,re(Bt(m),!0))||[];R=new Response(yt(R.body,ur,je,()=>{ye&&ye(),x&&k()},Qt),L)}l=l||"text";let j=await Ge[c.findKey(Ge,l)||"text"](R,e);return!x&&k(),I&&I(),await new Promise((L,J)=>{ce(L,J,{data:j,headers:W.from(R.headers),status:R.status,statusText:R.statusText,config:e,request:d})})}catch(R){throw k(),R&&R.name==="TypeError"&&/fetch/i.test(R.message)?Object.assign(new h("Network Error",h.ERR_NETWORK,e,d),{cause:R.cause||R}):h.from(R,R&&R.code,e,d)}});var wt={http:Se,xhr:pr,fetch:dr};c.forEach(wt,(e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch{}Object.defineProperty(e,"adapterName",{value:t})}});var Br=e=>`- ${e}`,wo=e=>c.isFunction(e)||e===null||e===!1,Je={getAdapter:e=>{e=c.isArray(e)?e:[e];let{length:t}=e,A,r,o={};for(let i=0;i<t;i++){A=e[i];let n;if(r=A,!wo(A)&&(r=wt[(n=String(A)).toLowerCase()],r===void 0))throw new h(`Unknown adapter '${n}'`);if(r)break;o[n||"#"+i]=r}if(!r){let i=Object.entries(o).map(([m,f])=>`adapter ${m} `+(f===!1?"is not supported by the environment":"is not available in the build")),n=t?i.length>1?`since :
`+i.map(Br).join(`
`):" "+Br(i[0]):"as no adapter specified";throw new h("There is no suitable adapter to dispatch the request "+n,"ERR_NOT_SUPPORT")}return r},adapters:wt};function Rt(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new M(null,e)}function Me(e){return Rt(e),e.headers=W.from(e.headers),e.data=ue.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),Je.getAdapter(e.adapter||te.adapter)(e).then(function(r){return Rt(e),r.data=ue.call(e,e.transformResponse,r),r.headers=W.from(r.headers),r},function(r){return fe(r)||(Rt(e),r&&r.response&&(r.response.data=ue.call(e,e.transformResponse,r.response),r.response.headers=W.from(r.response.headers))),Promise.reject(r)})}var He="1.7.4";var kt={};["object","boolean","number","function","string","symbol"].forEach((e,t)=>{kt[e]=function(r){return typeof r===e||"a"+(t<1?"n ":" ")+e}});var Cr={};kt.transitional=function(t,A,r){function o(i,n){return"[Axios v"+He+"] Transitional option '"+i+"'"+n+(r?". "+r:"")}return(i,n,m)=>{if(t===!1)throw new h(o(n," has been removed"+(A?" in "+A:"")),h.ERR_DEPRECATED);return A&&!Cr[n]&&(Cr[n]=!0,console.warn(o(n," has been deprecated since v"+A+" and will be removed in the near future"))),t?t(i,n,m):!0}};function Ro(e,t,A){if(typeof e!="object")throw new h("options must be an object",h.ERR_BAD_OPTION_VALUE);let r=Object.keys(e),o=r.length;for(;o-- >0;){let i=r[o],n=t[i];if(n){let m=e[i],f=m===void 0||n(m,i,e);if(f!==!0)throw new h("option "+i+" must be "+f,h.ERR_BAD_OPTION_VALUE);continue}if(A!==!0)throw new h("Unknown option "+i,h.ERR_BAD_OPTION)}}var qe={assertOptions:Ro,validators:kt};var K=qe.validators,ie=class{constructor(t){this.defaults=t,this.interceptors={request:new lt,response:new lt}}async request(t,A){try{return await this._request(t,A)}catch(r){if(r instanceof Error){let o;Error.captureStackTrace?Error.captureStackTrace(o={}):o=new Error;let i=o.stack?o.stack.replace(/^.+\n/,""):"";try{r.stack?i&&!String(r.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+i):r.stack=i}catch{}}throw r}}_request(t,A){typeof t=="string"?(A=A||{},A.url=t):A=t||{},A=G(this.defaults,A);let{transitional:r,paramsSerializer:o,headers:i}=A;r!==void 0&&qe.assertOptions(r,{silentJSONParsing:K.transitional(K.boolean),forcedJSONParsing:K.transitional(K.boolean),clarifyTimeoutError:K.transitional(K.boolean)},!1),o!=null&&(c.isFunction(o)?A.paramsSerializer={serialize:o}:qe.assertOptions(o,{encode:K.function,serialize:K.function},!0)),A.method=(A.method||this.defaults.method||"get").toLowerCase();let n=i&&c.merge(i.common,i[A.method]);i&&c.forEach(["delete","get","head","post","put","patch","common"],I=>{delete i[I]}),A.headers=W.concat(n,i);let m=[],f=!0;this.interceptors.request.forEach(function(B){typeof B.runWhen=="function"&&B.runWhen(A)===!1||(f=f&&B.synchronous,m.unshift(B.fulfilled,B.rejected))});let l=[];this.interceptors.response.forEach(function(B){l.push(B.fulfilled,B.rejected)});let a,g=0,u;if(!f){let I=[Me.bind(this),void 0];for(I.unshift.apply(I,m),I.push.apply(I,l),u=I.length,a=Promise.resolve(A);g<u;)a=a.then(I[g++],I[g++]);return a}u=m.length;let s=A;for(g=0;g<u;){let I=m[g++],B=m[g++];try{s=I(s)}catch(d){B.call(this,d);break}}try{a=Me.call(this,s)}catch(I){return Promise.reject(I)}for(g=0,u=l.length;g<u;)a=a.then(l[g++],l[g++]);return a}getUri(t){t=G(this.defaults,t);let A=de(t.baseURL,t.url);return pe(A,t.params,t.paramsSerializer)}};c.forEach(["delete","get","head","options"],function(t){ie.prototype[t]=function(A,r){return this.request(G(r||{},{method:t,url:A,data:(r||{}).data}))}});c.forEach(["post","put","patch"],function(t){function A(r){return function(i,n,m){return this.request(G(m||{},{method:t,headers:r?{"Content-Type":"multipart/form-data"}:{},url:i,data:n}))}}ie.prototype[t]=A(),ie.prototype[t+"Form"]=A(!0)});var Be=ie;var bt=class e{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let A;this.promise=new Promise(function(i){A=i});let r=this;this.promise.then(o=>{if(!r._listeners)return;let i=r._listeners.length;for(;i-- >0;)r._listeners[i](o);r._listeners=null}),this.promise.then=o=>{let i,n=new Promise(m=>{r.subscribe(m),i=m}).then(o);return n.cancel=function(){r.unsubscribe(i)},n},t(function(i,n,m){r.reason||(r.reason=new M(i,n,m),A(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let A=this._listeners.indexOf(t);A!==-1&&this._listeners.splice(A,1)}static source(){let t;return{token:new e(function(o){t=o}),cancel:t}}},Er=bt;function Dt(e){return function(A){return e.apply(null,A)}}function Wt(e){return c.isObject(e)&&e.isAxiosError===!0}var Ft={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Ft).forEach(([e,t])=>{Ft[t]=e});var yr=Ft;function Qr(e){let t=new Be(e),A=ge(Be.prototype.request,t);return c.extend(A,Be.prototype,t,{allOwnKeys:!0}),c.extend(A,t,null,{allOwnKeys:!0}),A.create=function(o){return Qr(G(e,o))},A}var b=Qr(te);b.Axios=Be;b.CanceledError=M;b.CancelToken=Er;b.isCancel=fe;b.VERSION=He;b.toFormData=Y;b.AxiosError=h;b.Cancel=b.CanceledError;b.all=function(t){return Promise.all(t)};b.spread=Dt;b.isAxiosError=Wt;b.mergeConfig=G;b.AxiosHeaders=W;b.formToJSON=e=>Pe(c.isHTMLForm(e)?new FormData(e):e);b.getAdapter=Je.getAdapter;b.HttpStatusCode=yr;b.default=b;var H=b;var{Axios:Hl,AxiosError:ql,CanceledError:Yl,isCancel:Kl,CancelToken:vl,VERSION:jl,all:_l,Cancel:zl,isAxiosError:Vl,spread:Zl,toFormData:Xl,AxiosHeaders:$l,HttpStatusCode:eI,formToJSON:tI,getAdapter:AI,mergeConfig:rI}=H;async function ko(e,t){let A=e,r=null;if(A==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(A.startsWith("http")){let o=await H.get(A,{responseType:"blob",params:t}),i=URL.createObjectURL(o.data);r=new Worker(i,{type:"module"})}else r=new Worker(A,{type:"module"});return r}var Ce=ko;function hr(e){let t=rt(e),A=e;return A.terminated=!1,A.workerProxy=t,A.originalTerminate=A.terminate,A.terminate=()=>{A.terminated=!0,A.workerProxy[At](),A.originalTerminate()},{workerProxy:t,worker:A}}async function bo(e,t,A){let r;if(e!=null){let i=e;return i.workerProxy!==void 0?(r=i.workerProxy,{workerProxy:r,worker:i}):hr(e)}let o=await Ce(t,A);return hr(o)}var wr=bo;async function Do(e,t,A){let r="unknown";typeof e!="string"?r=e.href:e.startsWith("http")?r=e:r=typeof t<"u"?`${t}/${e}`:e,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let o=`${r}.wasm`,n=(await H.get(o,{responseType:"arraybuffer",params:A})).data;return(await import(`${r}.js`)).default({wasmBinary:n})}var Rr=Do;var kr=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var Wr=typeof globalThis.SharedArrayBuffer=="function",br=new TextEncoder,Dr=new TextDecoder("utf-8");function Wo(e,t){let A={flags:"r",encoding:"binary"},r=e.fs_open(t,A.flags),i=e.fs_stat(t).size,n=null;Wr?n=new SharedArrayBuffer(i):n=new ArrayBuffer(i);let m=new Uint8Array(n);return e.fs_read(r,m,0,i,0),e.fs_close(r),m}function Fr(e,t,A){let r=null;Wr?r=new SharedArrayBuffer(A):r=new ArrayBuffer(A);let o=new Uint8Array(r),i=new Uint8Array(e.HEAPU8.buffer,t,A);return o.set(i),o}function D(e,t,A,r){let o=0;return t!==null&&(o=e.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,A,r,t.buffer.byteLength]),e.HEAPU8.set(new Uint8Array(t.buffer),o)),o}function v(e,t,A){let r=JSON.stringify(t),o=e.lengthBytesUTF8(r)+1,i=e.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,A,o]);e.stringToUTF8(r,i,o)}function S(e,t,A,r){let o=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,A]),i=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,A]),n=Fr(e,o,i);return O(r,n.buffer)}function Ee(e,t){let A=e.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),r=e.UTF8ToString(A);return JSON.parse(r)}function Fo(e,t,A,r){r!=null&&r.length>0&&r.forEach(function(l,a){switch(l.type){case p.TextStream:{let g=br.encode(l.data.data),u=D(e,g,a,0),s={size:g.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};v(e,s,a);break}case p.JsonCompatible:{let g=br.encode(JSON.stringify(l.data)),u=D(e,g,a,0),s={size:g.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};v(e,s,a);break}case p.BinaryStream:{let g=l.data.data,u=D(e,g,a,0),s={size:g.buffer.byteLength,data:`data:application/vnd.itk.address,0:${u}`};v(e,s,a);break}case p.TextFile:{e.fs_writeFile(l.data.path,l.data.data);break}case p.BinaryFile:{e.fs_writeFile(l.data.path,l.data.data);break}case p.Image:{let g=l.data,u=D(e,g.data,a,0),s=D(e,g.direction,a,1),I=typeof g.metadata?.entries<"u"?Array.from(g.metadata.entries()):[],B={imageType:g.imageType,name:g.name,origin:g.origin,spacing:g.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:g.size,data:`data:application/vnd.itk.address,0:${u}`,metadata:I};v(e,B,a);break}case p.Mesh:{let g=l.data,u=D(e,g.points,a,0),s=D(e,g.cells,a,1),I=D(e,g.pointData,a,2),B=D(e,g.cellData,a,3),d={meshType:g.meshType,name:g.name,numberOfPoints:g.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,numberOfCells:g.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:g.cellBufferSize,numberOfPointPixels:g.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${I}`,numberOfCellPixels:g.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${B}`};v(e,d,a);break}case p.PointSet:{let g=l.data,u=D(e,g.points,a,0),s=D(e,g.pointData,a,1),I={pointSetType:g.pointSetType,name:g.name,numberOfPoints:g.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:g.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};v(e,I,a);break}case p.TransformList:{let g=l.data,u=[];g.forEach((s,I)=>{let d=`data:application/vnd.itk.address,0:${D(e,s.fixedParameters,a,I*2)}`,U=`data:application/vnd.itk.address,0:${D(e,s.parameters,a,I*2+1)}`,R={transformType:s.transformType,numberOfFixedParameters:s.numberOfFixedParameters,numberOfParameters:s.numberOfParameters,name:s.name,inputSpaceName:s.inputSpaceName,outputSpaceName:s.outputSpaceName,parameters:U,fixedParameters:d};u.push(R)}),v(e,u,a);break}case p.PolyData:{let g=l.data,u=D(e,g.points,a,0),s=D(e,g.vertices,a,1),I=D(e,g.lines,a,2),B=D(e,g.polygons,a,3),d=D(e,g.triangleStrips,a,4),k=D(e,g.pointData,a,5),U=D(e,g.pointData,a,6),R={polyDataType:g.polyDataType,name:g.name,numberOfPoints:g.numberOfPoints,points:`data:application/vnd.itk.address,0:${u}`,verticesBufferSize:g.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:g.linesBufferSize,lines:`data:application/vnd.itk.address,0:${I}`,polygonsBufferSize:g.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${B}`,triangleStripsBufferSize:g.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${d}`,numberOfPointPixels:g.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${k}`,numberOfCellPixels:g.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${U}`};v(e,R,a);break}default:throw Error("Unsupported input InterfaceType")}}),e.resetModuleStdout(),e.resetModuleStderr();let o=e.stackSave(),i=0;try{i=e.callMain(t.slice())}catch(l){throw typeof l=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",e.getModuleStdout()),console.error("stderr:",e.getModuleStderr()),typeof e.getExceptionMessage<"u"?console.error("exception:",e.getExceptionMessage(l)):console.error("Build module in Debug mode for exception message information.")),l}finally{e.stackRestore(o)}let n=e.getModuleStdout(),m=e.getModuleStderr(),f=[];return A!=null&&A.length>0&&i===0&&A.forEach(function(l,a){let g=null;switch(l.type){case p.TextStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),I=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),B=new Uint8Array(e.HEAPU8.buffer,s,I);g={data:Dr.decode(B)};break}case p.JsonCompatible:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),I=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),B=new Uint8Array(e.HEAPU8.buffer,s,I);g=JSON.parse(Dr.decode(B));break}case p.BinaryStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),I=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);g={data:Fr(e,s,I)};break}case p.TextFile:{g={path:l.data.path,data:e.fs_readFile(l.data.path,{encoding:"utf8"})};break}case p.BinaryFile:{g={path:l.data.path,data:Wo(e,l.data.path)};break}case p.Image:{let s=Ee(e,a);s.data=S(e,a,0,s.imageType.componentType),s.direction=S(e,a,1,N.Float64),s.metadata=new Map(s.metadata),g=s;break}case p.Mesh:{let s=Ee(e,a);s.numberOfPoints>0?s.points=S(e,a,0,s.meshType.pointComponentType):s.points=O(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=S(e,a,1,s.meshType.cellComponentType):s.cells=O(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=S(e,a,2,s.meshType.pointPixelComponentType):s.pointData=O(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=S(e,a,3,s.meshType.cellPixelComponentType):s.cellData=O(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),g=s;break}case p.PointSet:{let s=Ee(e,a);s.numberOfPoints>0?s.points=S(e,a,0,s.pointSetType.pointComponentType):s.points=O(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=S(e,a,1,s.pointSetType.pointPixelComponentType):s.pointData=O(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),g=s;break}case p.TransformList:{let s=Ee(e,a);s.forEach((I,B)=>{I.numberOfFixedParameters>0&&(s[B].fixedParameters=S(e,a,B*2,I.transformType.parametersValueType)),I.numberOfFixedParameters>0&&(s[B].parameters=S(e,a,B*2+1,I.transformType.parametersValueType))}),g=s;break}case p.PolyData:{let s=Ee(e,a);s.numberOfPoints>0?s.points=S(e,a,0,N.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=S(e,a,1,w.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=S(e,a,2,w.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=S(e,a,3,w.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=S(e,a,4,w.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=S(e,a,5,s.polyDataType.pointPixelComponentType):s.pointData=O(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=S(e,a,6,s.polyDataType.cellPixelComponentType):s.cellData=O(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),g=s;break}default:throw Error("Unsupported output InterfaceType")}let u={type:l.type,data:g};f.push(u)}),{returnValue:i,stdout:n,stderr:m,outputs:f}}var Ur=Fo;var Uo=typeof globalThis.SharedArrayBuffer<"u";function So(e,t){if(e==null)return[];let A=[];for(let r=0;r<e.length;r++){let o=No(e[r],t);o!==null&&A.push(o)}return A}function No(e,t){if(e==null)return null;let A=null;return e.buffer!==void 0?A=e.buffer:e.byteLength!==void 0&&(A=e),Uo&&A instanceof SharedArrayBuffer?null:t?A:A.slice(0)}var Sr=So;function Oo(e){return[e.data,e.direction]}var Nr=Oo;function Po(e){return[e.points,e.pointData,e.cells,e.cellData]}var Or=Po;function xo(e){return[e.points,e.vertices,e.lines,e.polygons,e.triangleStrips,e.pointData,e.cellData]}var Pr=xo;var To;function Ye(){return To}var Go;function xr(){return Go}var Lo;function Ke(){return Lo}var Ut=new Map;function Jo(){let e=Ke();return typeof e>"u"&&(e=null),e}function Tr(){let e=Ye();return typeof e>"u"&&(e=new URL("/pipelines",document.location.origin).href),e}function ve(){let e=xr();return typeof e>"u"&&(e={}),e}async function Mo(e,t,A){let r=e,o=e;if(typeof e!="string"&&(r=new URL(e.href),o=r.href),Ut.has(o))return Ut.get(o);{let i=await Rr(e,t?.toString()??Tr(),A??ve());return Ut.set(o,i),i}}async function Ho(e,t,A,r,o){if(!await kr()){let d="WebAssembly SIMD support is required -- please update your browser.";throw alert(d),new Error(d)}let i=o?.webWorker??null;if(i===!1){let d=await Mo(e.toString(),o?.pipelineBaseUrl,o?.pipelineQueryParams??ve());return Ur(d,t,A,r)}let n=i,m=o?.pipelineWorkerUrl??Jo(),f=typeof m!="string"&&typeof m?.href<"u"?m.href:m,{workerProxy:l,worker:a}=await wr(n,f,o?.pipelineQueryParams??ve());n=a;let g=[];r!=null&&r.length>0&&r.forEach(function(d){if(d.type===p.BinaryStream){let k=d.data.data;g.push(k)}else if(d.type===p.BinaryFile){let k=d.data.data;g.push(k)}else if(d.type===p.Image){let k=d.data;k.data!==null&&g.push(...Nr(k))}else if(d.type===p.Mesh){let k=d.data;g.push(...Or(k))}else if(d.type===p.PolyData){let k=d.data;g.push(...Pr(k))}});let u=o?.pipelineBaseUrl??Tr(),s=typeof u!="string"&&typeof u?.href<"u"?u.href:u,I=r!=null?it(r,Sr(g,o?.noCopy)):null,B=await l.runPipeline(e.toString(),s,t,A,I,o?.pipelineQueryParams??ve());return{returnValue:B.returnValue,stdout:B.stdout,stderr:B.stderr,outputs:B.outputs,webWorker:n}}var E=Ho;var qo=null;function Gr(){return qo}var Yo="1.5.0",Lr=Yo;var St,Ko=`https://cdn.jsdelivr.net/npm/@itk-wasm/image-io@${Lr}/dist/pipelines`;function _I(e){St=e}function y(){if(typeof St<"u")return St;let e=Ye();return typeof e<"u"?e:Ko}var Nt,vo=null;function Jr(e){Nt=e}function C(){if(typeof Nt<"u")return Nt;let e=Ke();return typeof e<"u"?e:vo}var oe=null;async function Mr(){let e=C(),t=typeof e!="string"&&typeof e?.href<"u"?e.href:e;oe=await Ce(t)}function tp(e){oe=e}async function Q(){if(oe!==null)return oe.terminated&&await Mr(),oe;let e=Gr();return e!==null?e:(await Mr(),oe)}async function jo(e){let A=(await H.get(`${e}/index.json`,{responseType:"json"})).data,r=await H.get(`${e}/data/data.raw`,{responseType:"arraybuffer"});A.data=O(A.imageType.componentType,r.data);let o=await H.get(`${e}/data/direction.raw`,{responseType:"arraybuffer"});return A.direction=O(N.Float64,o.data),A}var _o=jo;var zo=new Map([["image/jpeg","jpeg"],["image/png","png"],["image/tiff","tiff"],["image/x-ms-bmp","bmp"],["image/x-bmp","bmp"],["image/bmp","bmp"],["application/dicom","gdcm"]]),ae=zo;async function Vo(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="png-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Ot=Vo;async function Zo(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="png-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var Pt=Zo;async function Xo(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="meta-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var xt=Xo;async function $o(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="meta-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var Tt=$o;async function ea(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="tiff-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Gt=ea;async function ta(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="tiff-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var Lt=ta;async function Aa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="nifti-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Jt=Aa;async function ra(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="nifti-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var Mt=ra;async function ia(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="jpeg-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Ht=ia;async function oa(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="jpeg-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var qt=oa;async function aa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="nrrd-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Yt=aa;async function na(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="nrrd-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var Kt=na;async function sa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="vtk-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var vt=sa;async function ga(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="vtk-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var jt=ga;async function la(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="bmp-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var _t=la;async function Ia(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="bmp-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var zt=Ia;async function pa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="hdf5-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Vt=pa;async function ma(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="hdf5-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var Zt=ma;async function ua(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="minc-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var Xt=ua;async function fa(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="minc-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var $t=fa;async function ca(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="mrc-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var eA=ca;async function da(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="mrc-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var tA=da;async function Ba(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="lsm-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var AA=Ba;async function Ca(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="lsm-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var rA=Ca;async function Ea(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="mgh-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var iA=Ea;async function ya(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="mgh-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var oA=ya;async function Qa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="bio-rad-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var aA=Qa;async function ha(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="bio-rad-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var nA=ha;async function wa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="gipl-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var sA=wa;async function Ra(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="gipl-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var gA=Ra;async function ka(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="ge-adw-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var lA=ka;async function ba(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="ge-adw-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var IA=ba;async function Da(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="ge4-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var pA=Da;async function Wa(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="ge4-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var mA=Wa;async function Fa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="ge5-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var uA=Fa;async function Ua(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="ge5-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var fA=Ua;async function Sa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="gdcm-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var cA=Sa;async function Na(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="gdcm-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var dA=Na;async function Oa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="scanco-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var BA=Oa;async function Pa(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="scanco-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var CA=Pa;async function xa(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="fdf-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var EA=xa;async function Ta(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="wasm-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var yA=Ta;async function Ga(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="wasm-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var QA=Ga;async function La(e,t={}){let A=[{type:p.JsonCompatible},{type:p.Image}],r=e;if(e instanceof File){let d=await e.arrayBuffer();r={path:e.name,data:new Uint8Array(d)}}let o=[{type:p.BinaryFile,data:r}],i=[],n=r.path;i.push(n),i.push("0"),i.push("1"),i.push("--memory-io"),t.informationOnly&&t.informationOnly&&i.push("--information-only");let l="wasm-zstd-read-image",a=t?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,A,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:t?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldRead:I[0]?.data,image:I[1]?.data}}var hA=La;async function Ja(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="wasm-zstd-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var wA=Ja;var Ma=new Map([["png",[Ot,Pt]],["meta",[xt,Tt]],["tiff",[Gt,Lt]],["nifti",[Jt,Mt]],["jpeg",[Ht,qt]],["nrrd",[Yt,Kt]],["vtk",[vt,jt]],["bmp",[_t,zt]],["hdf5",[Vt,Zt]],["mnc",[Xt,$t]],["mrc",[eA,tA]],["lsm",[AA,rA]],["mgh",[iA,oA]],["bioRad",[aA,nA]],["gipl",[sA,gA]],["geAdw",[lA,IA]],["ge4",[pA,mA]],["ge5",[uA,fA]],["gdcm",[cA,dA]],["scanco",[BA,CA]],["fdf",[EA,null]],["wasm",[yA,QA]],["wasmZstd",[hA,wA]]]),ne=Ma;async function Ha(e,t={}){let A=e.type??"",r=e.name??e.path??"fileName",o=se(r).toLowerCase(),i=t?.webWorker,n=e;if(e instanceof Blob){let s=await e.arrayBuffer();n={path:e.name,data:new Uint8Array(s)}}let m=null;if(A&&ae.has(A))m=ae.get(A);else if(_.has(o))m=_.get(o);else for(let s of ne.values())if(s[0]!==null){let{webWorker:I,couldRead:B,image:d}=await s[0]({path:n.path,data:n.data.slice()},{webWorker:i,informationOnly:t?.informationOnly,noCopy:t?.noCopy});if(i=I,B)return typeof t<"u"&&(d=q(d,t)),{webWorker:i,image:d}}if(!m)throw Error("Could not find IO for: "+r);let l=ne.get(m)[0],{webWorker:a,couldRead:g,image:u}=await l(n,{webWorker:i,informationOnly:t?.informationOnly,noCopy:t?.noCopy});if(i=a,!g)throw Error("Could not read: "+r);return typeof t<"u"&&(u=q(u,t)),{webWorker:i,image:u}}var RA=Ha;var qa=typeof globalThis.navigator?.hardwareConcurrency=="number"?globalThis.navigator.hardwareConcurrency:6,Hr=new $e(qa,RA);async function Ya(e,t={}){let A=1,r=0,o=!1;typeof t=="object"&&(typeof t.zSpacing<"u"&&(A=t.zSpacing),typeof t.zOrigin<"u"&&(r=t.zOrigin),typeof t.sortedSeries<"u"&&(o=t.sortedSeries));let i=Array.from(e,async function(g){if(g instanceof File){let u=await g.arrayBuffer();return{path:g.name,data:new Uint8Array(u)}}return g}),n=await Promise.all(i);o||n.sort((g,u)=>g.path<u.path?-1:g.path>u.path?1:0);let m=[];for(let g=0;g<n.length;g++)m.push([n[g],{}]);let l=(await Hr.runTasks(m).promise).map(g=>{let u=g.image;return u.imageType.dimension=3,u.size.push(1),u.spacing.push(A),u.origin.push(r),u.direction=new Float64Array(9),u.direction.fill(0),u.direction[0]=1,u.direction[4]=1,u.direction[8]=1,u}),a=Ze(l);return typeof t=="object"&&(typeof t.componentType<"u"||typeof t.pixelType<"u")&&(a=q(a,t)),{image:a,webWorkerPool:Hr}}var Ka=Ya;async function va(e,t,A={}){let r=e;(typeof A.componentType<"u"||typeof A.pixelType<"u")&&(r=q(e,A));let o=A.mimeType,i=se(t).toLowerCase(),n=A.webWorker,m=null;if(typeof o<"u"&&ae.has(o))m=ae.get(o);else if(_.has(i))m=_.get(i);else for(let I of ne.values())if(I[1]!==null){let{webWorker:B,couldWrite:d,serializedImage:k}=await I[1](Ve(r),t,A);if(n=B,d)return{webWorker:n,serializedImage:k}}if(!m)throw Error("Could not find IO for: "+t);let l=ne.get(m)[1],{webWorker:a,couldWrite:g,serializedImage:u}=await l(r,t,A);if(n=a,!g)throw Error("Could not write: "+t);return{webWorker:n,serializedImage:u}}var ja=va;async function _a(e,t,A={}){let r=[{type:p.JsonCompatible},{type:p.BinaryFile,data:{path:t,data:new Uint8Array}}],o=[{type:p.Image,data:e}],i=[];i.push("0"),i.push("0");let f=t;i.push(f),i.push("--memory-io"),A.informationOnly&&A.informationOnly&&i.push("--information-only"),A.useCompression&&A.useCompression&&i.push("--use-compression");let l="fdf-write-image",a=A?.webWorker;a===void 0&&(a=await Q());let{webWorker:g,returnValue:u,stderr:s,outputs:I}=await E(l,i,r,o,{pipelineBaseUrl:y(),pipelineWorkerUrl:C(),webWorker:a,noCopy:A?.noCopy});if(u!==0&&s!=="")throw new Error(s);return{webWorker:g,couldWrite:I[0]?.data,serializedImage:I[1]?.data}}var za=_a;var qr='data:text/javascript;charset=utf-8,var me=Object.defineProperty;var we=(A,t)=>{for(var e in t)me(A,e,{get:t[e],enumerable:!0})};var ft=Symbol("Comlink.proxy"),pe=Symbol("Comlink.endpoint"),Se=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),aA=Symbol("Comlink.thrown"),lt=A=>typeof A=="object"&&A!==null||typeof A=="function",Fe={canHandle:A=>lt(A)&&A[ft],serialize(A){let{port1:t,port2:e}=new MessageChannel;return fA(A,t),[e,[e]]},deserialize(A){return A.start(),Ge(A)}},Re={canHandle:A=>lt(A)&&aA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},ut=new Map([["proxy",Fe],["throw",Re]]);function Ne(A,t){for(let e of A)if(t===e||e==="*"||e instanceof RegExp&&e.test(t))return!0;return!1}function fA(A,t=globalThis,e=["*"]){t.addEventListener("message",function I(r){if(!r||!r.data)return;if(!Ne(e,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:o,type:g,path:C}=Object.assign({path:[]},r.data),Q=(r.data.argumentList||[]).map(O),a;try{let n=C.slice(0,-1).reduce((f,B)=>f[B],A),s=C.reduce((f,B)=>f[B],A);switch(g){case"GET":a=s;break;case"SET":n[C.slice(-1)[0]]=O(r.data.value),a=!0;break;case"APPLY":a=s.apply(n,Q);break;case"CONSTRUCT":{let f=new s(...Q);a=be(f)}break;case"ENDPOINT":{let{port1:f,port2:B}=new MessageChannel;fA(A,B),a=MA(f,[f])}break;case"RELEASE":a=void 0;break;default:return}}catch(n){a={value:n,[aA]:0}}Promise.resolve(a).catch(n=>({value:n,[aA]:0})).then(n=>{let[s,f]=cA(n);t.postMessage(Object.assign(Object.assign({},s),{id:o}),f),g==="RELEASE"&&(t.removeEventListener("message",I),Dt(t),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(n=>{let[s,f]=cA({value:new TypeError("Unserializable return value"),[aA]:0});t.postMessage(Object.assign(Object.assign({},s),{id:o}),f)})}),t.start&&t.start()}function Ue(A){return A.constructor.name==="MessagePort"}function Dt(A){Ue(A)&&A.close()}function Ge(A,t){return qA(A,[],t)}function BA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ht(A){return P(A,{type:"RELEASE"}).then(()=>{Dt(A)})}var QA=new WeakMap,EA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(QA.get(A)||0)-1;QA.set(A,t),t===0&&ht(A)});function ke(A,t){let e=(QA.get(t)||0)+1;QA.set(t,e),EA&&EA.register(A,t,A)}function Le(A){EA&&EA.unregister(A)}function qA(A,t=[],e=function(){}){let I=!1,r=new Proxy(e,{get(o,g){if(BA(I),g===Se)return()=>{Le(r),ht(A),I=!0};if(g==="then"){if(t.length===0)return{then:()=>r};let C=P(A,{type:"GET",path:t.map(Q=>Q.toString())}).then(O);return C.then.bind(C)}return qA(A,[...t,g])},set(o,g,C){BA(I);let[Q,a]=cA(C);return P(A,{type:"SET",path:[...t,g].map(n=>n.toString()),value:Q},a).then(O)},apply(o,g,C){BA(I);let Q=t[t.length-1];if(Q===pe)return P(A,{type:"ENDPOINT"}).then(O);if(Q==="bind")return qA(A,t.slice(0,-1));let[a,n]=ct(C);return P(A,{type:"APPLY",path:t.map(s=>s.toString()),argumentList:a},n).then(O)},construct(o,g){BA(I);let[C,Q]=ct(g);return P(A,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:C},Q).then(O)}});return ke(r,A),r}function Je(A){return Array.prototype.concat.apply([],A)}function ct(A){let t=A.map(cA);return[t.map(e=>e[0]),Je(t.map(e=>e[1]))]}var dt=new WeakMap;function MA(A,t){return dt.set(A,t),A}function be(A){return Object.assign(A,{[ft]:!0})}function cA(A){for(let[t,e]of ut)if(e.canHandle(A)){let[I,r]=e.serialize(A);return[{type:"HANDLER",name:t,value:I},r]}return[{type:"RAW",value:A},dt.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return ut.get(A.name).deserialize(A.value);case"RAW":return A.value}}function P(A,t,e){return new Promise(I=>{let r=He();A.addEventListener("message",function o(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",o),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},t),e)})}function He(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function v(A,t){return function(){return A.apply(t,arguments)}}var{toString:Ye}=Object.prototype,{getPrototypeOf:OA}=Object,uA=(A=>t=>{let e=Ye.call(t);return A[e]||(A[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),t=>uA(t)===A),DA=A=>t=>typeof t===A,{isArray:j}=Array,$=DA("undefined");function qe(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&N(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var pt=G("ArrayBuffer");function Me(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&pt(A.buffer),t}var Te=DA("string"),N=DA("function"),St=DA("number"),hA=A=>A!==null&&typeof A=="object",Ke=A=>A===!0||A===!1,lA=A=>{if(uA(A)!=="object")return!1;let t=OA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Oe=G("Date"),xe=G("File"),Pe=G("Blob"),je=G("FileList"),We=A=>hA(A)&&N(A.pipe),Ze=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||N(A.append)&&((t=uA(A))==="formdata"||t==="object"&&N(A.toString)&&A.toString()==="[object FormData]"))},Ve=G("URLSearchParams"),[_e,Xe,ze,ve]=["ReadableStream","Request","Response","Headers"].map(G),$e=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function AA(A,t,{allOwnKeys:e=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),j(A))for(I=0,r=A.length;I<r;I++)t.call(null,A[I],I,A);else{let o=e?Object.getOwnPropertyNames(A):Object.keys(A),g=o.length,C;for(I=0;I<g;I++)C=o[I],t.call(null,A[C],C,A)}}function Ft(A,t){t=t.toLowerCase();let e=Object.keys(A),I=e.length,r;for(;I-- >0;)if(r=e[I],t===r.toLowerCase())return r;return null}var x=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Rt=A=>!$(A)&&A!==x;function KA(){let{caseless:A}=Rt(this)&&this||{},t={},e=(I,r)=>{let o=A&&Ft(t,r)||r;lA(t[o])&&lA(I)?t[o]=KA(t[o],I):lA(I)?t[o]=KA({},I):j(I)?t[o]=I.slice():t[o]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&AA(arguments[I],e);return t}var AI=(A,t,e,{allOwnKeys:I}={})=>(AA(t,(r,o)=>{e&&N(r)?A[o]=v(r,e):A[o]=r},{allOwnKeys:I}),A),tI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),eI=(A,t,e,I)=>{A.prototype=Object.create(t.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),e&&Object.assign(A.prototype,e)},II=(A,t,e,I)=>{let r,o,g,C={};if(t=t||{},A==null)return t;do{for(r=Object.getOwnPropertyNames(A),o=r.length;o-- >0;)g=r[o],(!I||I(g,A,t))&&!C[g]&&(t[g]=A[g],C[g]=!0);A=e!==!1&&OA(A)}while(A&&(!e||e(A,t))&&A!==Object.prototype);return t},rI=(A,t,e)=>{A=String(A),(e===void 0||e>A.length)&&(e=A.length),e-=t.length;let I=A.indexOf(t,e);return I!==-1&&I===e},oI=A=>{if(!A)return null;if(j(A))return A;let t=A.length;if(!St(t))return null;let e=new Array(t);for(;t-- >0;)e[t]=A[t];return e},gI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&OA(Uint8Array)),iI=(A,t)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let o=r.value;t.call(A,o[0],o[1])}},nI=(A,t)=>{let e,I=[];for(;(e=A.exec(t))!==null;)I.push(e);return I},sI=G("HTMLFormElement"),CI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(e,I,r){return I.toUpperCase()+r}),mt=(({hasOwnProperty:A})=>(t,e)=>A.call(t,e))(Object.prototype),BI=G("RegExp"),Nt=(A,t)=>{let e=Object.getOwnPropertyDescriptors(A),I={};AA(e,(r,o)=>{let g;(g=t(r,o,A))!==!1&&(I[o]=g||r)}),Object.defineProperties(A,I)},aI=A=>{Nt(A,(t,e)=>{if(N(A)&&["arguments","caller","callee"].indexOf(e)!==-1)return!1;let I=A[e];if(N(I)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+e+"\'")})}})},QI=(A,t)=>{let e={},I=r=>{r.forEach(o=>{e[o]=!0})};return j(A)?I(A):I(String(A).split(t)),e},EI=()=>{},cI=(A,t)=>A!=null&&Number.isFinite(A=+A)?A:t,TA="abcdefghijklmnopqrstuvwxyz",wt="0123456789",Ut={DIGIT:wt,ALPHA:TA,ALPHA_DIGIT:TA+TA.toUpperCase()+wt},fI=(A=16,t=Ut.ALPHA_DIGIT)=>{let e="",{length:I}=t;for(;A--;)e+=t[Math.random()*I|0];return e};function lI(A){return!!(A&&N(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var uI=A=>{let t=new Array(10),e=(I,r)=>{if(hA(I)){if(t.indexOf(I)>=0)return;if(!("toJSON"in I)){t[r]=I;let o=j(I)?[]:{};return AA(I,(g,C)=>{let Q=e(g,r+1);!$(Q)&&(o[C]=Q)}),t[r]=void 0,o}}return I};return e(A,0)},DI=G("AsyncFunction"),hI=A=>A&&(hA(A)||N(A))&&N(A.then)&&N(A.catch),Gt=((A,t)=>A?setImmediate:t?((e,I)=>(x.addEventListener("message",({source:r,data:o})=>{r===x&&o===e&&I.length&&I.shift()()},!1),r=>{I.push(r),x.postMessage(e,"*")}))(`axios@${Math.random()}`,[]):e=>setTimeout(e))(typeof setImmediate=="function",N(x.postMessage)),dI=typeof queueMicrotask<"u"?queueMicrotask.bind(x):typeof process<"u"&&process.nextTick||Gt,i={isArray:j,isArrayBuffer:pt,isBuffer:qe,isFormData:Ze,isArrayBufferView:Me,isString:Te,isNumber:St,isBoolean:Ke,isObject:hA,isPlainObject:lA,isReadableStream:_e,isRequest:Xe,isResponse:ze,isHeaders:ve,isUndefined:$,isDate:Oe,isFile:xe,isBlob:Pe,isRegExp:BI,isFunction:N,isStream:We,isURLSearchParams:Ve,isTypedArray:gI,isFileList:je,forEach:AA,merge:KA,extend:AI,trim:$e,stripBOM:tI,inherits:eI,toFlatObject:II,kindOf:uA,kindOfTest:G,endsWith:rI,toArray:oI,forEachEntry:iI,matchAll:nI,isHTMLForm:sI,hasOwnProperty:mt,hasOwnProp:mt,reduceDescriptors:Nt,freezeMethods:aI,toObjectSet:QI,toCamelCase:CI,noop:EI,toFiniteNumber:cI,findKey:Ft,global:x,isContextDefined:Rt,ALPHABET:Ut,generateString:fI,isSpecCompliantForm:lI,toJSONObject:uI,isAsyncFn:DI,isThenable:hI,setImmediate:Gt,asap:dI};function W(A,t,e,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),I&&(this.request=I),r&&(this.response=r)}i.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:i.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var kt=W.prototype,Lt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Lt[A]={value:A}});Object.defineProperties(W,Lt);Object.defineProperty(kt,"isAxiosError",{value:!0});W.from=(A,t,e,I,r,o)=>{let g=Object.create(kt);return i.toFlatObject(A,g,function(Q){return Q!==Error.prototype},C=>C!=="isAxiosError"),W.call(g,A.message,t,e,I,r),g.cause=A,g.name=A.name,o&&Object.assign(g,o),g};var u=W;var dA=null;function xA(A){return i.isPlainObject(A)||i.isArray(A)}function bt(A){return i.endsWith(A,"[]")?A.slice(0,-2):A}function Jt(A,t,e){return A?A.concat(t).map(function(r,o){return r=bt(r),!e&&o?"["+r+"]":r}).join(e?".":""):t}function yI(A){return i.isArray(A)&&!A.some(xA)}var mI=i.toFlatObject(i,{},null,function(t){return/^is[A-Z]/.test(t)});function wI(A,t,e){if(!i.isObject(A))throw new TypeError("target must be an object");t=t||new(dA||FormData),e=i.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(l,c){return!i.isUndefined(c[l])});let I=e.metaTokens,r=e.visitor||n,o=e.dots,g=e.indexes,Q=(e.Blob||typeof Blob<"u"&&Blob)&&i.isSpecCompliantForm(t);if(!i.isFunction(r))throw new TypeError("visitor must be a function");function a(E){if(E===null)return"";if(i.isDate(E))return E.toISOString();if(!Q&&i.isBlob(E))throw new u("Blob is not supported. Use a Buffer instead.");return i.isArrayBuffer(E)||i.isTypedArray(E)?Q&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function n(E,l,c){let p=E;if(E&&!c&&typeof E=="object"){if(i.endsWith(l,"{}"))l=I?l:l.slice(0,-2),E=JSON.stringify(E);else if(i.isArray(E)&&yI(E)||(i.isFileList(E)||i.endsWith(l,"[]"))&&(p=i.toArray(E)))return l=bt(l),p.forEach(function(D,U){!(i.isUndefined(D)||D===null)&&t.append(g===!0?Jt([l],U,o):g===null?l:l+"[]",a(D))}),!1}return xA(E)?!0:(t.append(Jt(c,l,o),a(E)),!1)}let s=[],f=Object.assign(mI,{defaultVisitor:n,convertValue:a,isVisitable:xA});function B(E,l){if(!i.isUndefined(E)){if(s.indexOf(E)!==-1)throw Error("Circular reference detected in "+l.join("."));s.push(E),i.forEach(E,function(p,S){(!(i.isUndefined(p)||p===null)&&r.call(t,p,i.isString(S)?S.trim():S,l,f))===!0&&B(p,l?l.concat(S):[S])}),s.pop()}}if(!i.isObject(A))throw new TypeError("data must be an object");return B(A),t}var q=wI;function Ht(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return t[I]})}function Yt(A,t){this._pairs=[],A&&q(A,this,t)}var qt=Yt.prototype;qt.append=function(t,e){this._pairs.push([t,e])};qt.toString=function(t){let e=t?function(I){return t.call(this,I,Ht)}:Ht;return this._pairs.map(function(r){return e(r[0])+"="+e(r[1])},"").join("&")};var yA=Yt;function pI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function tA(A,t,e){if(!t)return A;let I=e&&e.encode||pI,r=e&&e.serialize,o;if(r?o=r(t,e):o=i.isURLSearchParams(t)?t.toString():new yA(t,e).toString(I),o){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+o}return A}var PA=class{constructor(){this.handlers=[]}use(t,e,I){return this.handlers.push({fulfilled:t,rejected:e,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){i.forEach(this.handlers,function(I){I!==null&&t(I)})}},jA=PA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Mt=typeof URLSearchParams<"u"?URLSearchParams:yA;var Tt=typeof FormData<"u"?FormData:null;var Kt=typeof Blob<"u"?Blob:null;var Ot={isBrowser:!0,classes:{URLSearchParams:Mt,FormData:Tt,Blob:Kt},protocols:["http","https","file","blob","url","data"]};var ZA={};we(ZA,{hasBrowserEnv:()=>WA,hasStandardBrowserEnv:()=>SI,hasStandardBrowserWebWorkerEnv:()=>FI,origin:()=>RI});var WA=typeof window<"u"&&typeof document<"u",SI=(A=>WA&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),FI=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",RI=WA&&window.location.href||"http://localhost";var w={...ZA,...Ot};function VA(A,t){return q(A,new w.classes.URLSearchParams,Object.assign({visitor:function(e,I,r,o){return w.isNode&&i.isBuffer(e)?(this.append(I,e.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},t))}function NI(A){return i.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function UI(A){let t={},e=Object.keys(A),I,r=e.length,o;for(I=0;I<r;I++)o=e[I],t[o]=A[o];return t}function GI(A){function t(e,I,r,o){let g=e[o++];if(g==="__proto__")return!0;let C=Number.isFinite(+g),Q=o>=e.length;return g=!g&&i.isArray(r)?r.length:g,Q?(i.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!C):((!r[g]||!i.isObject(r[g]))&&(r[g]=[]),t(e,I,r[g],o)&&i.isArray(r[g])&&(r[g]=UI(r[g])),!C)}if(i.isFormData(A)&&i.isFunction(A.entries)){let e={};return i.forEachEntry(A,(I,r)=>{t(NI(I),r,e,0)}),e}return null}var wA=GI;function kI(A,t,e){if(i.isString(A))try{return(t||JSON.parse)(A),i.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(e||JSON.stringify)(A)}var _A={transitional:mA,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){let I=e.getContentType()||"",r=I.indexOf("application/json")>-1,o=i.isObject(t);if(o&&i.isHTMLForm(t)&&(t=new FormData(t)),i.isFormData(t))return r?JSON.stringify(wA(t)):t;if(i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)||i.isReadableStream(t))return t;if(i.isArrayBufferView(t))return t.buffer;if(i.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let C;if(o){if(I.indexOf("application/x-www-form-urlencoded")>-1)return VA(t,this.formSerializer).toString();if((C=i.isFileList(t))||I.indexOf("multipart/form-data")>-1){let Q=this.env&&this.env.FormData;return q(C?{"files[]":t}:t,Q&&new Q,this.formSerializer)}}return o||r?(e.setContentType("application/json",!1),kI(t)):t}],transformResponse:[function(t){let e=this.transitional||_A.transitional,I=e&&e.forcedJSONParsing,r=this.responseType==="json";if(i.isResponse(t)||i.isReadableStream(t))return t;if(t&&i.isString(t)&&(I&&!this.responseType||r)){let g=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(C){if(g)throw C.name==="SyntaxError"?u.from(C,u.ERR_BAD_RESPONSE,this,null,this.response):C}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};i.forEach(["delete","get","head","post","put","patch"],A=>{_A.headers[A]={}});var Z=_A;var LI=i.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),xt=A=>{let t={},e,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),e=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!e||t[e]&&LI[e])&&(e==="set-cookie"?t[e]?t[e].push(I):t[e]=[I]:t[e]=t[e]?t[e]+", "+I:I)}),t};var Pt=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function pA(A){return A===!1||A==null?A:i.isArray(A)?A.map(pA):String(A)}function JI(A){let t=Object.create(null),e=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=e.exec(A);)t[I[1]]=I[2];return t}var bI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function XA(A,t,e,I,r){if(i.isFunction(I))return I.call(this,t,e);if(r&&(t=e),!!i.isString(t)){if(i.isString(I))return t.indexOf(I)!==-1;if(i.isRegExp(I))return I.test(t)}}function HI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,e,I)=>e.toUpperCase()+I)}function YI(A,t){let e=i.toCamelCase(" "+t);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+e,{value:function(r,o,g){return this[I].call(this,t,r,o,g)},configurable:!0})})}var V=class{constructor(t){t&&this.set(t)}set(t,e,I){let r=this;function o(C,Q,a){let n=eA(Q);if(!n)throw new Error("header name must be a non-empty string");let s=i.findKey(r,n);(!s||r[s]===void 0||a===!0||a===void 0&&r[s]!==!1)&&(r[s||Q]=pA(C))}let g=(C,Q)=>i.forEach(C,(a,n)=>o(a,n,Q));if(i.isPlainObject(t)||t instanceof this.constructor)g(t,e);else if(i.isString(t)&&(t=t.trim())&&!bI(t))g(xt(t),e);else if(i.isHeaders(t))for(let[C,Q]of t.entries())o(Q,C,I);else t!=null&&o(e,t,I);return this}get(t,e){if(t=eA(t),t){let I=i.findKey(this,t);if(I){let r=this[I];if(!e)return r;if(e===!0)return JI(r);if(i.isFunction(e))return e.call(this,r,I);if(i.isRegExp(e))return e.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=eA(t),t){let I=i.findKey(this,t);return!!(I&&this[I]!==void 0&&(!e||XA(this,this[I],I,e)))}return!1}delete(t,e){let I=this,r=!1;function o(g){if(g=eA(g),g){let C=i.findKey(I,g);C&&(!e||XA(I,I[C],C,e))&&(delete I[C],r=!0)}}return i.isArray(t)?t.forEach(o):o(t),r}clear(t){let e=Object.keys(this),I=e.length,r=!1;for(;I--;){let o=e[I];(!t||XA(this,this[o],o,t,!0))&&(delete this[o],r=!0)}return r}normalize(t){let e=this,I={};return i.forEach(this,(r,o)=>{let g=i.findKey(I,o);if(g){e[g]=pA(r),delete e[o];return}let C=t?HI(o):String(o).trim();C!==o&&delete e[o],e[C]=pA(r),I[C]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let e=Object.create(null);return i.forEach(this,(I,r)=>{I!=null&&I!==!1&&(e[r]=t&&i.isArray(I)?I.join(", "):I)}),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,e])=>t+": "+e).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){let I=new this(t);return e.forEach(r=>I.set(r)),I}static accessor(t){let I=(this[Pt]=this[Pt]={accessors:{}}).accessors,r=this.prototype;function o(g){let C=eA(g);I[C]||(YI(r,g),I[C]=!0)}return i.isArray(t)?t.forEach(o):o(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);i.reduceDescriptors(V.prototype,({value:A},t)=>{let e=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(I){this[e]=I}}});i.freezeMethods(V);var m=V;function IA(A,t){let e=this||Z,I=t||e,r=m.from(I.headers),o=I.data;return i.forEach(A,function(C){o=C.call(e,o,r.normalize(),t?t.status:void 0)}),r.normalize(),o}function rA(A){return!!(A&&A.__CANCEL__)}function jt(A,t,e){u.call(this,A??"canceled",u.ERR_CANCELED,t,e),this.name="CanceledError"}i.inherits(jt,u,{__CANCEL__:!0});var b=jt;function oA(A,t,e){let I=e.config.validateStatus;!e.status||!I||I(e.status)?A(e):t(new u("Request failed with status code "+e.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}function zA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function qI(A,t){A=A||10;let e=new Array(A),I=new Array(A),r=0,o=0,g;return t=t!==void 0?t:1e3,function(Q){let a=Date.now(),n=I[o];g||(g=a),e[r]=Q,I[r]=a;let s=o,f=0;for(;s!==r;)f+=e[s++],s=s%A;if(r=(r+1)%A,r===o&&(o=(o+1)%A),a-g<t)return;let B=n&&a-n;return B?Math.round(f*1e3/B):void 0}}var Wt=qI;function MI(A,t){let e=0,I=1e3/t,r,o,g=(a,n=Date.now())=>{e=n,r=null,o&&(clearTimeout(o),o=null),A.apply(null,a)};return[(...a)=>{let n=Date.now(),s=n-e;s>=I?g(a,n):(r=a,o||(o=setTimeout(()=>{o=null,g(r)},I-s)))},()=>r&&g(r)]}var Zt=MI;var _=(A,t,e=3)=>{let I=0,r=Wt(50,250);return Zt(o=>{let g=o.loaded,C=o.lengthComputable?o.total:void 0,Q=g-I,a=r(Q),n=g<=C;I=g;let s={loaded:g,total:C,progress:C?g/C:void 0,bytes:Q,rate:a||void 0,estimated:a&&C&&n?(C-g)/a:void 0,event:o,lengthComputable:C!=null,[t?"download":"upload"]:!0};A(s)},e)},vA=(A,t)=>{let e=A!=null;return[I=>t[0]({lengthComputable:e,total:A,loaded:I}),t[1]]},$A=A=>(...t)=>i.asap(()=>A(...t));var Vt=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a"),I;function r(o){let g=o;return t&&(e.setAttribute("href",g),g=e.href),e.setAttribute("href",g),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\\?/,""):"",hash:e.hash?e.hash.replace(/^%23/,""):"",hostname:e.hostname,port:e.port,pathname:e.pathname.charAt(0)==="/"?e.pathname:"/"+e.pathname}}return I=r(window.location.href),function(g){let C=i.isString(g)?r(g):g;return C.protocol===I.protocol&&C.host===I.host}}():function(){return function(){return!0}}();var _t=w.hasStandardBrowserEnv?{write(A,t,e,I,r,o){let g=[A+"="+encodeURIComponent(t)];i.isNumber(e)&&g.push("expires="+new Date(e).toGMTString()),i.isString(I)&&g.push("path="+I),i.isString(r)&&g.push("domain="+r),o===!0&&g.push("secure"),document.cookie=g.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function At(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function tt(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function gA(A,t){return A&&!At(t)?tt(A,t):t}var Xt=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let e={};function I(a,n,s){return i.isPlainObject(a)&&i.isPlainObject(n)?i.merge.call({caseless:s},a,n):i.isPlainObject(n)?i.merge({},n):i.isArray(n)?n.slice():n}function r(a,n,s){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a,s)}else return I(a,n,s)}function o(a,n){if(!i.isUndefined(n))return I(void 0,n)}function g(a,n){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a)}else return I(void 0,n)}function C(a,n,s){if(s in t)return I(a,n);if(s in A)return I(void 0,a)}let Q={url:o,method:o,data:o,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,withXSRFToken:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:C,headers:(a,n)=>r(Xt(a),Xt(n),!0)};return i.forEach(Object.keys(Object.assign({},A,t)),function(n){let s=Q[n]||r,f=s(A[n],t[n],n);i.isUndefined(f)&&s!==C||(e[n]=f)}),e}var SA=A=>{let t=k({},A),{data:e,withXSRFToken:I,xsrfHeaderName:r,xsrfCookieName:o,headers:g,auth:C}=t;t.headers=g=m.from(g),t.url=tA(gA(t.baseURL,t.url),A.params,A.paramsSerializer),C&&g.set("Authorization","Basic "+btoa((C.username||"")+":"+(C.password?unescape(encodeURIComponent(C.password)):"")));let Q;if(i.isFormData(e)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)g.setContentType(void 0);else if((Q=g.getContentType())!==!1){let[a,...n]=Q?Q.split(";").map(s=>s.trim()).filter(Boolean):[];g.setContentType([a||"multipart/form-data",...n].join("; "))}}if(w.hasStandardBrowserEnv&&(I&&i.isFunction(I)&&(I=I(t)),I||I!==!1&&Vt(t.url))){let a=r&&o&&_t.read(o);a&&g.set(r,a)}return t};var TI=typeof XMLHttpRequest<"u",zt=TI&&function(A){return new Promise(function(e,I){let r=SA(A),o=r.data,g=m.from(r.headers).normalize(),{responseType:C,onUploadProgress:Q,onDownloadProgress:a}=r,n,s,f,B,E;function l(){B&&B(),E&&E(),r.cancelToken&&r.cancelToken.unsubscribe(n),r.signal&&r.signal.removeEventListener("abort",n)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function p(){if(!c)return;let D=m.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),K={data:!C||C==="text"||C==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:D,config:A,request:c};oA(function(J){e(J),l()},function(J){I(J),l()},K),c=null}"onloadend"in c?c.onloadend=p:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(p)},c.onabort=function(){c&&(I(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){I(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let U=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",K=r.transitional||mA;r.timeoutErrorMessage&&(U=r.timeoutErrorMessage),I(new u(U,K.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},o===void 0&&g.setContentType(null),"setRequestHeader"in c&&i.forEach(g.toJSON(),function(U,K){c.setRequestHeader(K,U)}),i.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),C&&C!=="json"&&(c.responseType=r.responseType),a&&([f,E]=_(a,!0),c.addEventListener("progress",f)),Q&&c.upload&&([s,B]=_(Q),c.upload.addEventListener("progress",s),c.upload.addEventListener("loadend",B)),(r.cancelToken||r.signal)&&(n=D=>{c&&(I(!D||D.type?new b(null,A,c):D),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(n),r.signal&&(r.signal.aborted?n():r.signal.addEventListener("abort",n)));let S=zA(r.url);if(S&&w.protocols.indexOf(S)===-1){I(new u("Unsupported protocol "+S+":",u.ERR_BAD_REQUEST,A));return}c.send(o||null)})};var KI=(A,t)=>{let e=new AbortController,I,r=function(Q){if(!I){I=!0,g();let a=Q instanceof Error?Q:this.reason;e.abort(a instanceof u?a:new b(a instanceof Error?a.message:a))}},o=t&&setTimeout(()=>{r(new u(`timeout ${t} of ms exceeded`,u.ETIMEDOUT))},t),g=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(Q=>{Q&&(Q.removeEventListener?Q.removeEventListener("abort",r):Q.unsubscribe(r))}),A=null)};A.forEach(Q=>Q&&Q.addEventListener&&Q.addEventListener("abort",r));let{signal:C}=e;return C.unsubscribe=g,[C,()=>{o&&clearTimeout(o),o=null}]},vt=KI;var OI=function*(A,t){let e=A.byteLength;if(!t||e<t){yield A;return}let I=0,r;for(;I<e;)r=I+t,yield A.slice(I,r),I=r},xI=async function*(A,t,e){for await(let I of A)yield*OI(ArrayBuffer.isView(I)?I:await e(String(I)),t)},et=(A,t,e,I,r)=>{let o=xI(A,t,r),g=0,C,Q=a=>{C||(C=!0,I&&I(a))};return new ReadableStream({async pull(a){try{let{done:n,value:s}=await o.next();if(n){Q(),a.close();return}let f=s.byteLength;if(e){let B=g+=f;e(B)}a.enqueue(new Uint8Array(s))}catch(n){throw Q(n),n}},cancel(a){return Q(a),o.return()}},{highWaterMark:2})};var RA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Ae=RA&&typeof ReadableStream=="function",It=RA&&(typeof TextEncoder=="function"?(A=>t=>A.encode(t))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),te=(A,...t)=>{try{return!!A(...t)}catch{return!1}},PI=Ae&&te(()=>{let A=!1,t=new Request(w.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!t}),$t=64*1024,rt=Ae&&te(()=>i.isReadableStream(new Response("").body)),FA={stream:rt&&(A=>A.body)};RA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!FA[t]&&(FA[t]=i.isFunction(A[t])?e=>e[t]():(e,I)=>{throw new u(`Response type \'${t}\' is not supported`,u.ERR_NOT_SUPPORT,I)})})})(new Response);var jI=async A=>{if(A==null)return 0;if(i.isBlob(A))return A.size;if(i.isSpecCompliantForm(A))return(await new Request(A).arrayBuffer()).byteLength;if(i.isArrayBufferView(A)||i.isArrayBuffer(A))return A.byteLength;if(i.isURLSearchParams(A)&&(A=A+""),i.isString(A))return(await It(A)).byteLength},WI=async(A,t)=>{let e=i.toFiniteNumber(A.getContentLength());return e??jI(t)},ee=RA&&(async A=>{let{url:t,method:e,data:I,signal:r,cancelToken:o,timeout:g,onDownloadProgress:C,onUploadProgress:Q,responseType:a,headers:n,withCredentials:s="same-origin",fetchOptions:f}=SA(A);a=a?(a+"").toLowerCase():"text";let[B,E]=r||o||g?vt([r,o],g):[],l,c,p=()=>{!l&&setTimeout(()=>{B&&B.unsubscribe()}),l=!0},S;try{if(Q&&PI&&e!=="get"&&e!=="head"&&(S=await WI(n,I))!==0){let L=new Request(t,{method:"POST",body:I,duplex:"half"}),J;if(i.isFormData(I)&&(J=L.headers.get("content-type"))&&n.setContentType(J),L.body){let[HA,CA]=vA(S,_($A(Q)));I=et(L.body,$t,HA,CA,It)}}i.isString(s)||(s=s?"include":"omit"),c=new Request(t,{...f,signal:B,method:e.toUpperCase(),headers:n.normalize().toJSON(),body:I,duplex:"half",credentials:s});let D=await fetch(c),U=rt&&(a==="stream"||a==="response");if(rt&&(C||U)){let L={};["status","statusText","headers"].forEach(Et=>{L[Et]=D[Et]});let J=i.toFiniteNumber(D.headers.get("content-length")),[HA,CA]=C&&vA(J,_($A(C),!0))||[];D=new Response(et(D.body,$t,HA,()=>{CA&&CA(),U&&p()},It),L)}a=a||"text";let K=await FA[i.findKey(FA,a)||"text"](D,A);return!U&&p(),E&&E(),await new Promise((L,J)=>{oA(L,J,{data:K,headers:m.from(D.headers),status:D.status,statusText:D.statusText,config:A,request:c})})}catch(D){throw p(),D&&D.name==="TypeError"&&/fetch/i.test(D.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,c),{cause:D.cause||D}):u.from(D,D&&D.code,A,c)}});var ot={http:dA,xhr:zt,fetch:ee};i.forEach(ot,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Ie=A=>`- ${A}`,ZI=A=>i.isFunction(A)||A===null||A===!1,NA={getAdapter:A=>{A=i.isArray(A)?A:[A];let{length:t}=A,e,I,r={};for(let o=0;o<t;o++){e=A[o];let g;if(I=e,!ZI(e)&&(I=ot[(g=String(e)).toLowerCase()],I===void 0))throw new u(`Unknown adapter \'${g}\'`);if(I)break;r[g||"%23"+o]=I}if(!I){let o=Object.entries(r).map(([C,Q])=>`adapter ${C} `+(Q===!1?"is not supported by the environment":"is not available in the build")),g=t?o.length>1?`since :%0A`+o.map(Ie).join(`%0A`):" "+Ie(o[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+g,"ERR_NOT_SUPPORT")}return I},adapters:ot};function gt(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new b(null,A)}function UA(A){return gt(A),A.headers=m.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),NA.getAdapter(A.adapter||Z.adapter)(A).then(function(I){return gt(A),I.data=IA.call(A,A.transformResponse,I),I.headers=m.from(I.headers),I},function(I){return rA(I)||(gt(A),I&&I.response&&(I.response.data=IA.call(A,A.transformResponse,I.response),I.response.headers=m.from(I.response.headers))),Promise.reject(I)})}var GA="1.7.4";var it={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{it[A]=function(I){return typeof I===A||"a"+(t<1?"n ":" ")+A}});var re={};it.transitional=function(t,e,I){function r(o,g){return"[Axios v"+GA+"] Transitional option \'"+o+"\'"+g+(I?". "+I:"")}return(o,g,C)=>{if(t===!1)throw new u(r(g," has been removed"+(e?" in "+e:"")),u.ERR_DEPRECATED);return e&&!re[g]&&(re[g]=!0,console.warn(r(g," has been deprecated since v"+e+" and will be removed in the near future"))),t?t(o,g,C):!0}};function VI(A,t,e){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let o=I[r],g=t[o];if(g){let C=A[o],Q=C===void 0||g(C,o,A);if(Q!==!0)throw new u("option "+o+" must be "+Q,u.ERR_BAD_OPTION_VALUE);continue}if(e!==!0)throw new u("Unknown option "+o,u.ERR_BAD_OPTION)}}var kA={assertOptions:VI,validators:it};var M=kA.validators,X=class{constructor(t){this.defaults=t,this.interceptors={request:new jA,response:new jA}}async request(t,e){try{return await this._request(t,e)}catch(I){if(I instanceof Error){let r;Error.captureStackTrace?Error.captureStackTrace(r={}):r=new Error;let o=r.stack?r.stack.replace(/^.+\\n/,""):"";try{I.stack?o&&!String(I.stack).endsWith(o.replace(/^.+\\n.+\\n/,""))&&(I.stack+=`%0A`+o):I.stack=o}catch{}}throw I}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=k(this.defaults,e);let{transitional:I,paramsSerializer:r,headers:o}=e;I!==void 0&&kA.assertOptions(I,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),r!=null&&(i.isFunction(r)?e.paramsSerializer={serialize:r}:kA.assertOptions(r,{encode:M.function,serialize:M.function},!0)),e.method=(e.method||this.defaults.method||"get").toLowerCase();let g=o&&i.merge(o.common,o[e.method]);o&&i.forEach(["delete","get","head","post","put","patch","common"],E=>{delete o[E]}),e.headers=m.concat(g,o);let C=[],Q=!0;this.interceptors.request.forEach(function(l){typeof l.runWhen=="function"&&l.runWhen(e)===!1||(Q=Q&&l.synchronous,C.unshift(l.fulfilled,l.rejected))});let a=[];this.interceptors.response.forEach(function(l){a.push(l.fulfilled,l.rejected)});let n,s=0,f;if(!Q){let E=[UA.bind(this),void 0];for(E.unshift.apply(E,C),E.push.apply(E,a),f=E.length,n=Promise.resolve(e);s<f;)n=n.then(E[s++],E[s++]);return n}f=C.length;let B=e;for(s=0;s<f;){let E=C[s++],l=C[s++];try{B=E(B)}catch(c){l.call(this,c);break}}try{n=UA.call(this,B)}catch(E){return Promise.reject(E)}for(s=0,f=a.length;s<f;)n=n.then(a[s++],a[s++]);return n}getUri(t){t=k(this.defaults,t);let e=gA(t.baseURL,t.url);return tA(e,t.params,t.paramsSerializer)}};i.forEach(["delete","get","head","options"],function(t){X.prototype[t]=function(e,I){return this.request(k(I||{},{method:t,url:e,data:(I||{}).data}))}});i.forEach(["post","put","patch"],function(t){function e(I){return function(o,g,C){return this.request(k(C||{},{method:t,headers:I?{"Content-Type":"multipart/form-data"}:{},url:o,data:g}))}}X.prototype[t]=e(),X.prototype[t+"Form"]=e(!0)});var iA=X;var nt=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let e;this.promise=new Promise(function(o){e=o});let I=this;this.promise.then(r=>{if(!I._listeners)return;let o=I._listeners.length;for(;o-- >0;)I._listeners[o](r);I._listeners=null}),this.promise.then=r=>{let o,g=new Promise(C=>{I.subscribe(C),o=C}).then(r);return g.cancel=function(){I.unsubscribe(o)},g},t(function(o,g,C){I.reason||(I.reason=new b(o,g,C),e(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let e=this._listeners.indexOf(t);e!==-1&&this._listeners.splice(e,1)}static source(){let t;return{token:new A(function(r){t=r}),cancel:t}}},oe=nt;function st(A){return function(e){return A.apply(null,e)}}function Ct(A){return i.isObject(A)&&A.isAxiosError===!0}var Bt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Bt).forEach(([A,t])=>{Bt[t]=A});var ge=Bt;function ie(A){let t=new iA(A),e=v(iA.prototype.request,t);return i.extend(e,iA.prototype,t,{allOwnKeys:!0}),i.extend(e,t,null,{allOwnKeys:!0}),e.create=function(r){return ie(k(A,r))},e}var d=ie(Z);d.Axios=iA;d.CanceledError=b;d.CancelToken=oe;d.isCancel=rA;d.VERSION=GA;d.toFormData=q;d.AxiosError=u;d.Cancel=d.CanceledError;d.all=function(t){return Promise.all(t)};d.spread=st;d.isAxiosError=Ct;d.mergeConfig=k;d.AxiosHeaders=m;d.formToJSON=A=>wA(i.isHTMLForm(A)?new FormData(A):A);d.getAdapter=NA.getAdapter;d.HttpStatusCode=ge;d.default=d;var LA=d;var{Axios:Ei,AxiosError:ci,CanceledError:fi,isCancel:li,CancelToken:ui,VERSION:Di,all:hi,Cancel:di,isAxiosError:yi,spread:mi,toFormData:wi,AxiosHeaders:pi,HttpStatusCode:Si,formToJSON:Fi,getAdapter:Ri,mergeConfig:Ni}=LA;var nA,Y,Qt,at={env:{emscripten_notify_memory_growth:function(A){Qt=new Uint8Array(Y.exports.memory.buffer)}}},JA=class{init(){return nA||(typeof fetch<"u"?nA=fetch("data:application/wasm;base64,"+ne).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,at)).then(this._init):nA=WebAssembly.instantiate(Buffer.from(ne,"base64"),at).then(this._init),nA)}_init(t){Y=t.instance,at.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=t.byteLength,r=Y.exports.malloc(I);Qt.set(t,r),e=e||Number(Y.exports.ZSTD_findDecompressedSize(r,I));let o=Y.exports.malloc(e),g=Y.exports.ZSTD_decompress(o,e,r,I),C=Qt.slice(o,o+g);return Y.exports.free(r),Y.exports.free(o),C}},ne="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var se=new JA,Ce=!1;async function _I(A,t,e){let I=null;typeof A!="string"?I=A.href:A.startsWith("http")?I=A:I=`${t}/${A}`,I.endsWith(".js")&&(I=I.substring(0,I.length-3)),I.endsWith(".wasm")&&(I=I.substring(0,I.length-5));let r=`${I}.wasm`,o=await LA.get(`${r}.zst`,{responseType:"arraybuffer",params:e});Ce||(await se.init(),Ce=!0);let C=se.decode(new Uint8Array(o.data)).buffer;return(await import(`${I}.js`)).default({wasmBinary:C})}var Be=_I;var bA=new Map;async function XI(A,t,e){let I=A,r=A,o=null;return typeof A!="string"&&(I=new URL(A.href),r=I.href),bA.has(r)?o=await bA.get(r):(bA.set(r,Be(I,t,e)),o=await bA.get(r)),o}var ae=XI;var zI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},h=zI;var vI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},R=vI;var $I={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},z=$I;function Ar(A,t){let e=null;switch(A){case R.UInt8:{e=new Uint8Array(t);break}case R.Int8:{e=new Int8Array(t);break}case R.UInt16:{e=new Uint16Array(t);break}case R.Int16:{e=new Int16Array(t);break}case R.UInt32:{e=new Uint32Array(t);break}case R.Int32:{e=new Int32Array(t);break}case R.UInt64:{typeof globalThis.BigUint64Array=="function"?e=new BigUint64Array(t):e=new Uint8Array(t);break}case R.Int64:{typeof globalThis.BigInt64Array=="function"?e=new BigInt64Array(t):e=new Uint8Array(t);break}case z.Float32:{e=new Float32Array(t);break}case z.Float64:{e=new Float64Array(t);break}case"null":{e=null;break}case null:{e=null;break}default:throw new Error("Type is not supported as a TypedArray")}return e}var H=Ar;var ce=typeof globalThis.SharedArrayBuffer=="function",Qe=new TextEncoder,Ee=new TextDecoder("utf-8");function tr(A,t){let e={flags:"r",encoding:"binary"},I=A.fs_open(t,e.flags),o=A.fs_stat(t).size,g=null;ce?g=new SharedArrayBuffer(o):g=new ArrayBuffer(o);let C=new Uint8Array(g);return A.fs_read(I,C,0,o,0),A.fs_close(I),C}function fe(A,t,e){let I=null;ce?I=new SharedArrayBuffer(e):I=new ArrayBuffer(e);let r=new Uint8Array(I),o=new Uint8Array(A.HEAPU8.buffer,t,e);return r.set(o),r}function y(A,t,e,I){let r=0;return t!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,e,I,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),r)),r}function T(A,t,e){let I=JSON.stringify(t),r=A.lengthBytesUTF8(I)+1,o=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,e,r]);A.stringToUTF8(I,o,r)}function F(A,t,e,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,e]),o=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,e]),g=fe(A,r,o);return H(I,g.buffer)}function sA(A,t){let e=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),I=A.UTF8ToString(e);return JSON.parse(I)}function er(A,t,e,I){I!=null&&I.length>0&&I.forEach(function(a,n){switch(a.type){case h.TextStream:{let s=Qe.encode(a.data.data),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.JsonCompatible:{let s=Qe.encode(JSON.stringify(a.data)),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.BinaryStream:{let s=a.data.data,f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.TextFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.BinaryFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.Image:{let s=a.data,f=y(A,s.data,n,0),B=y(A,s.direction,n,1),E=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],l={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${B}`,size:s.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};T(A,l,n);break}case h.Mesh:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.cells,n,1),E=y(A,s.pointData,n,2),l=y(A,s.cellData,n,3),c={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${B}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${l}`};T(A,c,n);break}case h.PointSet:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.pointData,n,1),E={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`};T(A,E,n);break}case h.TransformList:{let s=a.data,f=[];s.forEach((B,E)=>{let c=`data:application/vnd.itk.address,0:${y(A,B.fixedParameters,n,E*2)}`,S=`data:application/vnd.itk.address,0:${y(A,B.parameters,n,E*2+1)}`,D={transformType:B.transformType,numberOfFixedParameters:B.numberOfFixedParameters,numberOfParameters:B.numberOfParameters,name:B.name,inputSpaceName:B.inputSpaceName,outputSpaceName:B.outputSpaceName,parameters:S,fixedParameters:c};f.push(D)}),T(A,f,n);break}case h.PolyData:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.vertices,n,1),E=y(A,s.lines,n,2),l=y(A,s.polygons,n,3),c=y(A,s.triangleStrips,n,4),p=y(A,s.pointData,n,5),S=y(A,s.pointData,n,6),D={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${B}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${l}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${S}`};T(A,D,n);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),o=0;try{o=A.callMain(t.slice())}catch(a){throw typeof a=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(a)):console.error("Build module in Debug mode for exception message information.")),a}finally{A.stackRestore(r)}let g=A.getModuleStdout(),C=A.getModuleStderr(),Q=[];return e!=null&&e.length>0&&o===0&&e.forEach(function(a,n){let s=null;switch(a.type){case h.TextStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s={data:Ee.decode(l)};break}case h.JsonCompatible:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s=JSON.parse(Ee.decode(l));break}case h.BinaryStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);s={data:fe(A,B,E)};break}case h.TextFile:{s={path:a.data.path,data:A.fs_readFile(a.data.path,{encoding:"utf8"})};break}case h.BinaryFile:{s={path:a.data.path,data:tr(A,a.data.path)};break}case h.Image:{let B=sA(A,n);B.data=F(A,n,0,B.imageType.componentType),B.direction=F(A,n,1,z.Float64),B.metadata=new Map(B.metadata),s=B;break}case h.Mesh:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.meshType.pointComponentType):B.points=H(B.meshType.pointComponentType,new ArrayBuffer(0)),B.numberOfCells>0?B.cells=F(A,n,1,B.meshType.cellComponentType):B.cells=H(B.meshType.cellComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,2,B.meshType.pointPixelComponentType):B.pointData=H(B.meshType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,3,B.meshType.cellPixelComponentType):B.cellData=H(B.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.PointSet:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.pointSetType.pointComponentType):B.points=H(B.pointSetType.pointComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,1,B.pointSetType.pointPixelComponentType):B.pointData=H(B.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.TransformList:{let B=sA(A,n);B.forEach((E,l)=>{E.numberOfFixedParameters>0&&(B[l].fixedParameters=F(A,n,l*2,E.transformType.parametersValueType)),E.numberOfFixedParameters>0&&(B[l].parameters=F(A,n,l*2+1,E.transformType.parametersValueType))}),s=B;break}case h.PolyData:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,z.Float32):B.points=new Float32Array,B.verticesBufferSize>0?B.vertices=F(A,n,1,R.UInt32):B.vertices=new Uint32Array,B.linesBufferSize>0?B.lines=F(A,n,2,R.UInt32):B.lines=new Uint32Array,B.polygonsBufferSize>0?B.polygons=F(A,n,3,R.UInt32):B.polygons=new Uint32Array,B.triangleStripsBufferSize>0?B.triangleStrips=F(A,n,4,R.UInt32):B.triangleStrips=new Uint32Array,B.numberOfPointPixels>0?B.pointData=F(A,n,5,B.polyDataType.pointPixelComponentType):B.pointData=H(B.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,6,B.polyDataType.cellPixelComponentType):B.cellData=H(B.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}default:throw Error("Unsupported output InterfaceType")}let f={type:a.type,data:s};Q.push(f)}),{returnValue:o,stdout:g,stderr:C,outputs:Q}}var le=er;var Ir=typeof globalThis.SharedArrayBuffer<"u";function rr(A,t){if(A==null)return[];let e=[];for(let I=0;I<A.length;I++){let r=or(A[I],t);r!==null&&e.push(r)}return e}function or(A,t){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Ir&&e instanceof SharedArrayBuffer?null:t?e:e.slice(0)}var ue=rr;function gr(A){return[A.data,A.direction]}var De=gr;function ir(A){return[A.points,A.pointData,A.cells,A.cellData]}var he=ir;function nr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var de=nr;async function sr(A,t,e,I){let r=le(A,t,e,I),o=[];return r.outputs.forEach(function(g){if(g.type===h.BinaryStream||g.type===h.BinaryFile){let C=g.data;o.push(C)}else if(g.type===h.Image){let C=g.data;o.push(...De(C))}else if(g.type===h.Mesh){let C=g.data;o.push(...he(C))}else if(g.type===h.PolyData){let C=g.data;o.push(...de(C))}}),MA(r,ue(o,!0))}var ye=sr;var Cr={runPipeline:async function(A,t,e,I,r,o){let g=await ae(A,t,o);return await ye(g,e,I,r)}};fA(Cr);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';Jr(qr);export{aA as bioRadReadImage,nA as bioRadWriteImage,_t as bmpReadImage,zt as bmpWriteImage,_ as extensionToImageIo,EA as fdfReadImage,za as fdfWriteImage,cA as gdcmReadImage,dA as gdcmWriteImage,pA as ge4ReadImage,mA as ge4WriteImage,uA as ge5ReadImage,fA as ge5WriteImage,lA as geAdwReadImage,IA as geAdwWriteImage,Q as getDefaultWebWorker,C as getPipelineWorkerUrl,y as getPipelinesBaseUrl,sA as giplReadImage,gA as giplWriteImage,Vt as hdf5ReadImage,Zt as hdf5WriteImage,Ht as jpegReadImage,qt as jpegWriteImage,AA as lsmReadImage,rA as lsmWriteImage,xt as metaReadImage,Tt as metaWriteImage,iA as mghReadImage,oA as mghWriteImage,Xt as mincReadImage,$t as mincWriteImage,eA as mrcReadImage,tA as mrcWriteImage,Jt as niftiReadImage,Mt as niftiWriteImage,Yt as nrrdReadImage,Kt as nrrdWriteImage,Ot as pngReadImage,Pt as pngWriteImage,RA as readImage,Ka as readImageFileSeries,_o as readImageHttp,BA as scancoReadImage,CA as scancoWriteImage,tp as setDefaultWebWorker,Jr as setPipelineWorkerUrl,_I as setPipelinesBaseUrl,Gt as tiffReadImage,Lt as tiffWriteImage,vt as vtkReadImage,jt as vtkWriteImage,yA as wasmReadImage,QA as wasmWriteImage,hA as wasmZstdReadImage,wA as wasmZstdWriteImage,ja as writeImage};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
