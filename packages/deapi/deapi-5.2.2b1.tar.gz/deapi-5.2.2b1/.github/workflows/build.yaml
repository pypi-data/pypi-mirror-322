name: build

on:
  push:
  pull_request:
    branches: main

env:
  MPLBACKEND: agg

jobs:
  build-with-pip:
    name: ${{ matrix.os }}-py${{ matrix.python-version }}${{ matrix.LABEL }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            python-version: 3.10

            DEPENDENCIES: protobuf==5.26.0
            LABEL: -oldest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and package
        shell: bash
        run: |
          pip install -U -e .'[tests]'

      - name: Install oldest supported versions
        if: contains(matrix.LABEL, 'oldest')
        run: |
          pip install ${{ matrix.DEPENDENCIES }}

      - name: Display Python, pip and package versions
        run: |
          python -V
          pip -V
          pip list

      - name: Run docstring tests
        continue-on-error: true
        run: |
          pytest --doctest-modules --doctest-continue-on-failure --ignore-glob=deapi/tests deapi

      - name: Run tests
        run: |
          pytest --cov=. --cov-report=xml

      - name: Generate line coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          coverage report --show-missing

      - name: Upload coverage to Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
