[project]
name = "httpx-curl-cffi"
version = "0.1.2"
description = "httpx transport for curl_cffi (python bindings for curl-impersonate)"
authors = [
    { name = "Victor Gavro", email = "vgavro@gmail.com" },
]
license = "BSD-3-Clause"
license-files = [
    "LICENSE",
]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "curl-cffi>=0.7.0",
    "httpx>=0.21.0",
]
requires-python = ">=3.10"

[project.urls]
Homepage = "https://github.com/vgavro/httpx-curl-cffi"
Repository = "https://github.com/vgavro/httpx-curl-cffi"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "ruff>=0.9.2",
    "pre-commit>=3.6.0",
    "pytest>=7.4.4",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.3",
    "ipdb>=0.13.13",
    "pytest-httpserver>=1.1.0",
    "trustme>=1.2.1",
]

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "TRY003",
    "EM101",
    "D",
    "TD",
    "FIX002",
    "S101",
    "ERA001",
]

[tool.pytest.ini_options]
addopts = "--asyncio-mode=auto"
asyncio_default_fixture_loop_scope = "session"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
]

[tool.mypy]
plugins = []
check_untyped_defs = true

[tool.pdm.build]
excludes = [
    "tests/",
]

[tool.pdm.scripts.test]
shell = "pytest"
