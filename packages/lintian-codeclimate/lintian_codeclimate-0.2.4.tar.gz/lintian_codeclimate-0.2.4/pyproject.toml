[build-system]
requires = [
  "setuptools >=61.0.0",
  "setuptools-scm[toml] >=3.4.3",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "lintian-codeclimate"
description = "Codeclimate parser for lintian"
readme = "README.md"
authors = [
  { name = "Duncan Macleod", email = "macleoddm@cardiff.ac.uk" },
]
license = { text = "MIT" }
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Quality Assurance",
]
requires-python = ">=3.8"

dependencies = [
]
dynamic = [
  "version",
]

[project.optional-dependencies]
test = [
  "pytest",
]

[project.urls]
"Homepage" = "https://gitlab.com/duncanmmacleod/lintian-codeclimate/"
"Bug Tracker" = "https://gitlab.com/duncanmmacleod/lintian-codeclimate/-/issues/"

# -- tools -------

[tool.coverage.paths]
source = [
  "lintian_codeclimate/",
  "*/*-packages/lintian_codeclimate/",
]

[tool.coverage.report]
omit = [
  "*/lintian_codeclimate/_version.py",
]
precision = 1

[tool.ruff.lint]
select = [
  # mccabe
  "C90",
  # pycodestyle errors
  "E",
  # flake8-executable
  "EXE",
  # pyflakes
  "F",
  # isort
  "I",
  # pep8-naming
  "N",
  # pyupgrade
  "UP",
  # pycodestyle warnings
  "W",
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401",  # unused-import
]

[tool.setuptools]
license-files = [ "LICENSE" ]

[tool.setuptools.packages.find]
include = [
  "lintian_codeclimate",
]

[tool.setuptools_scm]
write_to = "lintian_codeclimate/_version.py"
