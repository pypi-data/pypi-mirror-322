# File Explanation:

#   This GitHub Actions workflow is designed to automate the process of publishing Python packages to PyPI and TestPyPI, triggered by tags, and executed only when pushing code with version tags. Here's the purpose of each step in the workflow:

#   1. **Check Tag**: Verifies if the pushed tag complies with the PEP 440 versioning specification to determine whether it should be published to PyPI or TestPyPI. If the tag complies with the specification, it outputs the results indicating compliance.

#   2. **Build distribution**: Builds binary wheels and source code tarballs of Python packages on an Ubuntu environment and stores the built distribution packages in the `dist/` directory.

#   3. **Publish to PyPI**: If the tag represents a final version according to the PEP 440 specification, the built distribution packages are published to PyPI. This step downloads the distribution packages and publishes them to PyPI. This step requires `PEP_0440_final_match` to be `true`.

#   4. **Sign the Python distribution with Sigstore and upload them to GitHub Release**: Signs the Python distribution packages with Sigstore and uploads them to GitHub Release. This step requires successful execution of the previous step to publish to PyPI and needs GitHub permissions for content writing. The signed distribution packages and certificates are uploaded as part of the release.

#   5. **Publish to TestPyPI**: If the tag complies with the PEP 440 specification but is not a final version, such as containing development versions or pre-release versions, the built distribution packages are published to TestPyPI. This step downloads the distribution packages and publishes them to TestPyPI. This step requires `PEP_0440_match` to be `true`.

#   Before using this action, ensure to configure trusted-publishing for PyPI and TestPyPI
#   as described in the [Packaging Python Projects documentation](https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#configuring-trusted-publishing).
#   and modify the PYPI_PROJECT_NAME environment variable accordingly.

# https://docs.github.com/zh/actions/using-workflows/workflow-syntax-for-github-actions

name: Publish Python üêç distribution üì¶ to PyPI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.*'

env:
  PYPI_PROJECT_NAME: omni_pathlib

jobs:
  test:
    uses: ./.github/workflows/test.yml

  check-tag:
    # https://stackoverflow.com/a/58869470/14140458
    # https://packaging.python.org/en/latest/specifications/version-specifiers/#appendix-parsing-version-strings-with-regular-expressions
    name: Check Tag
    if: github.ref_type == 'tag' # only publish to PyPI on tag pushes
    runs-on: ubuntu-latest
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "PEP_0440_final_match=true" >> $GITHUB_OUTPUT
          fi
          if [[ ${{ github.event.ref }} =~ ^refs\/tags\/v([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?$ ]]; then
              echo "PEP_0440_match=true" >> $GITHUB_OUTPUT
          fi
    outputs:
      PEP_0440_final_match: ${{ steps.check-tag.outputs.PEP_0440_final_match }}
      PEP_0440_match: ${{ steps.check-tag.outputs.PEP_0440_match }}
    needs: [test]

  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    if: needs.check-tag.outputs.PEP_0440_final_match == 'true'
    needs:
      - check-tag
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PYPI_PROJECT_NAME }}
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    if: needs.check-tag.outputs.PEP_0440_match == 'true'
    needs:
      - check-tag
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ env.PYPI_PROJECT_NAME }}

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
