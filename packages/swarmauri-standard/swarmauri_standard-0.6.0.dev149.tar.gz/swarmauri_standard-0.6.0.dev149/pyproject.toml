[tool.poetry]
name = "swarmauri-standard"
version = "0.6.0.dev149"
description = "This repository includes standard components within the Swarmauri framework."
authors = ["Jacob Stewart <jacob@swarmauri.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "http://github.com/swarmauri/swarmauri-sdk"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

# Swarmauri
swarmauri_core = { version = "^0.6.0.dev149" }
swarmauri_base = { version = "^0.6.0.dev149" }

# Dependencies
toml = "^0.10.2"
httpx = "^0.27.0"
joblib = "^1.4.0"
numpy = "*"
pandas = "*"
pydantic = "^2.9.2"
typing_extensions = "*"

# We should remove and only rely on httpx
requests = "^2.32.3"

# This should be set to optional also
Pillow = ">=8.0,<11.0"

# Optional dependencies with versions specified
aiofiles = { version = "24.1.0", optional = true }
#aiohttp = { version = "^3.10.10", optional = true }
#cohere = { version = "^5.11.0", optional = true }
#mistralai = { version = "^1.2.1", optional = true }
#fal-client = { version = ">=0.5.0", optional = true }
#google-generativeai = { version = "^0.8.3", optional = true }
#openai = { version = "^1.52.0", optional = true }
#nltk = { version = "^3.9.1", optional = true }
#textblob = { version = "^0.18.0", optional = true }
#yake = { version = "==0.4.8", optional = true }
#beautifulsoup4 = { version = "04.12.3", optional = true }
#gensim = { version = "==4.3.3", optional = true }
#scipy = { version = ">=1.7.0,<1.14.0", optional = true }
#scikit-learn = { version = "^1.4.2", optional = true }
#spacy = { version = ">=3.0.0,<=3.8.2", optional = true }
#transformers = { version = "^4.45.0", optional = true }
#torch = { version = "^2.5.0", optional = true }
#keras = { version = ">=3.2.0", optional = true }
#tf-keras = { version = ">=2.16.0", optional = true }
#matplotlib = { version = ">=3.9.2", optional = true }

[tool.poetry.extras]
# Extras without versioning, grouped for specific use cases
io = [
    "aiofiles",
    #"aiohttp"
]
#llms = ["cohere", "mistralai", "fal-client", "google-generativeai", "openai"]
nlp = [
    #"nltk", 
    #"textblob", 
    #"yake"
]
#nlp_tools = ["beautifulsoup4"]
#ml_toolkits = ["gensim", "scipy", "scikit-learn"]
#ml_toolkits = ["scikit-learn"]
#spacy = ["spacy"]
#transformers = ["transformers"]
#torch = ["torch"]
#tensorflow = ["keras", "tf-keras"]
#visualization = ["matplotlib"]

# Full option to install all extras
full = [
    "aiofiles", 
    #"aiohttp",
    #"cohere", "mistralai", "fal-client", "google-generativeai", "openai",
    #"nltk", "textblob", 
    #"yake",
    #"beautifulsoup4",
    ##"scikit-learn",
    #"gensim", "scipy", "scikit-learn",
    #"spacy",
    #"transformers",
    #"torch",
    #"keras", "tf-keras",
    #"matplotlib"
]

[tool.poetry.group.dev.dependencies]
flake8 = "^7.0"
pytest = "^8.0"
pytest-asyncio = ">=0.24.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.6.1"
pytest-json-report = "^1.5.0"
python-dotenv = "^1.0.0"
jsonschema = "^4.18.5"
ipython = "^8.28.0"
requests = "^2.32.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = ["combined", "scripts"]
asyncio_mode = "auto"

markers = [
    "test: standard test",
    "unit: Unit tests",
    "integration: Integration tests",
    "acceptance: Acceptance tests",
    "experimental: Experimental tests",
    "timeout: mark test to timeout after X seconds",
]

log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

asyncio_default_fixture_loop_scope = "function"
