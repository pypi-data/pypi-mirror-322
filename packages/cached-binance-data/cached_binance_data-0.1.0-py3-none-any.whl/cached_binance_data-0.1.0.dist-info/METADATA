Metadata-Version: 2.2
Name: cached-binance-data
Version: 0.1.0
Summary: A Python module for downloading Binance futures market data with caching support
Home-page: https://github.com/kunthet/cached-binance-data
Author: Kunthet
Author-email: dev@kunthet.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: pandas>=1.5.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: requests>=2.26.0
Requires-Dist: python-dateutil>=2.8.2
Provides-Extra: test
Requires-Dist: pytest>=7.0.0; extra == "test"
Requires-Dist: pytest-cov>=2.0.0; extra == "test"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Cached Binance Futures Data Downloader

A Python module for downloading Binance futures market data with efficient caching support.

## Features

- Download Binance futures data for different timeframes
- Support for custom start and end periods
- Efficient caching mechanism
- Handles Binance API rate limits automatically
- Supports various timeframes (1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M)

## Installation

```bash
pip install cached-binance-data
```

## Quick Start

```python
from cached_binance_data import BinanceDataDownloader

# Initialize downloader
downloader = BinanceDataDownloader()

# Download XRPUSDT data for a specific period
data = downloader.download(
    symbol="XRPUSDT",
    timeframe="1m",
    start_time="2024-01-01",
    end_time="2024-01-31"
)

# Data is automatically cached in hlocv_cache folder
print(data.head())
```

## Cache Structure

Data is cached in the `hlocv_cache` folder with the following format:
```
SYMBOL_TIMEFRAME_STARTDATE_STARTTIME_ENDDATE_ENDTIME.npy
Example: XRPUSDT_1M_20240101_000000_20240131_235959.npy
```

## Features

- Automatic data chunking for large date ranges
- Smart caching system
- Handles rate limits gracefully
- Supports all Binance futures trading pairs

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details. 
