# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lbir.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import qtensor_pb2 as qtensor__pb2
from scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nlbir.proto\x12\x04lbir\x1a\rqtensor.proto\x1a\x15scalapb/scalapb.proto\"S\n\x05Model\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1f\n\x06layers\x18\x02 \x03(\x0b\x32\x0f.lbir.LayerWrap\x12\x1b\n\x13input_channel_first\x18\x03 \x01(\x08\"\xf8\x01\n\tLayerWrap\x12\"\n\x05\x64\x65nse\x18\x01 \x01(\x0b\x32\x11.lbir.DenseConfigH\x00\x12$\n\x06\x63onv2d\x18\x02 \x01(\x0b\x32\x12.lbir.Conv2DConfigH\x00\x12*\n\tmaxpool2d\x18\x03 \x01(\x0b\x32\x15.lbir.MaxPool2DConfigH\x00\x12\x1e\n\x03\x66\x66t\x18\x04 \x01(\x0b\x32\x0f.lbir.FFTConfigH\x00\x12 \n\x04lmfe\x18\x05 \x01(\x0b\x32\x10.lbir.LMFEConfigH\x00:\x1a\xe2?\x17\x32\x15HasInputOutputQTensorB\x17\n\x15sealed_value_optional\"\xc2\x01\n\x0b\x44\x65nseConfig\x12\x1d\n\x06thresh\x18\x01 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06kernel\x18\x02 \x01(\x0b\x32\r.lbir.QTensor\x12\x1c\n\x05input\x18\x03 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06output\x18\x04 \x01(\x0b\x32\r.lbir.QTensor\x12$\n\nactivation\x18\x05 \x01(\x0e\x32\x10.lbir.Activation:\x12\xe2?\x0f\n\rIsActiveLayer\"\xf7\x01\n\x0c\x43onv2DConfig\x12\x1d\n\x06thresh\x18\x01 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06kernel\x18\x02 \x01(\x0b\x32\r.lbir.QTensor\x12\x1c\n\x05input\x18\x03 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06output\x18\x04 \x01(\x0b\x32\r.lbir.QTensor\x12$\n\nactivation\x18\x05 \x01(\x0e\x32\x10.lbir.Activation\x12\x11\n\tdepthwise\x18\x07 \x01(\x08\x12\x0e\n\x06stride\x18\x08 \x03(\r\x12\x0f\n\x07padding\x18\t \x03(\r:\x12\xe2?\x0f\n\rIsActiveLayer\"\x85\x01\n\x0fMaxPool2DConfig\x12\x1c\n\x05input\x18\x01 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06output\x18\x02 \x01(\x0b\x32\r.lbir.QTensor\x12\x14\n\x0ckernel_shape\x18\x03 \x03(\r\x12\x0e\n\x06stride\x18\x04 \x03(\r\x12\x0f\n\x07padding\x18\x05 \x03(\r\"~\n\tFFTConfig\x12\x10\n\x08\x66\x66t_size\x18\x01 \x01(\r\x12\x12\n\nnum_frames\x18\x02 \x01(\r\x12\x0e\n\x06win_fn\x18\x03 \x03(\x02\x12\x1c\n\x05input\x18\x04 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06output\x18\x05 \x01(\x0b\x32\r.lbir.QTensor\"\x96\x01\n\nLMFEConfig\x12\x10\n\x08\x66\x66t_size\x18\x01 \x01(\r\x12\x10\n\x08num_mels\x18\x02 \x01(\r\x12\x12\n\nnum_frames\x18\x03 \x01(\r\x12\x1c\n\x05input\x18\x04 \x01(\x0b\x32\r.lbir.QTensor\x12\x1d\n\x06output\x18\x05 \x01(\x0b\x32\r.lbir.QTensor\x12\x13\n\x0bmel_filters\x18\x06 \x03(\x02*:\n\nActivation\x12\x0f\n\x0b\x42INARY_SIGN\x10\x00\x12\x08\n\x04RELU\x10\x01\x12\x11\n\rNO_ACTIVATION\x10\x02\x42\xf2\x01\n\x04lbirP\x01\xe2?\xe6\x01\"$sealed trait HasInputOutputQTensor {\"\x14  def input: QTensor\"\x15  def output: QTensor\"\x01}\"\x01 \":sealed trait IsActiveLayer extends HasInputOutputQTensor {\"\x15  def kernel: QTensor\"\x15  def thresh: QTensor\"\x1c  def activation: Activation\"\x01}(\x01\x62\x06proto3')

_ACTIVATION = DESCRIPTOR.enum_types_by_name['Activation']
Activation = enum_type_wrapper.EnumTypeWrapper(_ACTIVATION)
BINARY_SIGN = 0
RELU = 1
NO_ACTIVATION = 2


_MODEL = DESCRIPTOR.message_types_by_name['Model']
_LAYERWRAP = DESCRIPTOR.message_types_by_name['LayerWrap']
_DENSECONFIG = DESCRIPTOR.message_types_by_name['DenseConfig']
_CONV2DCONFIG = DESCRIPTOR.message_types_by_name['Conv2DConfig']
_MAXPOOL2DCONFIG = DESCRIPTOR.message_types_by_name['MaxPool2DConfig']
_FFTCONFIG = DESCRIPTOR.message_types_by_name['FFTConfig']
_LMFECONFIG = DESCRIPTOR.message_types_by_name['LMFEConfig']
Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), {
  'DESCRIPTOR' : _MODEL,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.Model)
  })
_sym_db.RegisterMessage(Model)

LayerWrap = _reflection.GeneratedProtocolMessageType('LayerWrap', (_message.Message,), {
  'DESCRIPTOR' : _LAYERWRAP,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.LayerWrap)
  })
_sym_db.RegisterMessage(LayerWrap)

DenseConfig = _reflection.GeneratedProtocolMessageType('DenseConfig', (_message.Message,), {
  'DESCRIPTOR' : _DENSECONFIG,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.DenseConfig)
  })
_sym_db.RegisterMessage(DenseConfig)

Conv2DConfig = _reflection.GeneratedProtocolMessageType('Conv2DConfig', (_message.Message,), {
  'DESCRIPTOR' : _CONV2DCONFIG,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.Conv2DConfig)
  })
_sym_db.RegisterMessage(Conv2DConfig)

MaxPool2DConfig = _reflection.GeneratedProtocolMessageType('MaxPool2DConfig', (_message.Message,), {
  'DESCRIPTOR' : _MAXPOOL2DCONFIG,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.MaxPool2DConfig)
  })
_sym_db.RegisterMessage(MaxPool2DConfig)

FFTConfig = _reflection.GeneratedProtocolMessageType('FFTConfig', (_message.Message,), {
  'DESCRIPTOR' : _FFTCONFIG,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.FFTConfig)
  })
_sym_db.RegisterMessage(FFTConfig)

LMFEConfig = _reflection.GeneratedProtocolMessageType('LMFEConfig', (_message.Message,), {
  'DESCRIPTOR' : _LMFECONFIG,
  '__module__' : 'lbir_pb2'
  # @@protoc_insertion_point(class_scope:lbir.LMFEConfig)
  })
_sym_db.RegisterMessage(LMFEConfig)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\004lbirP\001\342?\346\001\"$sealed trait HasInputOutputQTensor {\"\024  def input: QTensor\"\025  def output: QTensor\"\001}\"\001 \":sealed trait IsActiveLayer extends HasInputOutputQTensor {\"\025  def kernel: QTensor\"\025  def thresh: QTensor\"\034  def activation: Activation\"\001}(\001'
  _LAYERWRAP._options = None
  _LAYERWRAP._serialized_options = b'\342?\0272\025HasInputOutputQTensor'
  _DENSECONFIG._options = None
  _DENSECONFIG._serialized_options = b'\342?\017\n\rIsActiveLayer'
  _CONV2DCONFIG._options = None
  _CONV2DCONFIG._serialized_options = b'\342?\017\n\rIsActiveLayer'
  _ACTIVATION._serialized_start=1258
  _ACTIVATION._serialized_end=1316
  _MODEL._serialized_start=58
  _MODEL._serialized_end=141
  _LAYERWRAP._serialized_start=144
  _LAYERWRAP._serialized_end=392
  _DENSECONFIG._serialized_start=395
  _DENSECONFIG._serialized_end=589
  _CONV2DCONFIG._serialized_start=592
  _CONV2DCONFIG._serialized_end=839
  _MAXPOOL2DCONFIG._serialized_start=842
  _MAXPOOL2DCONFIG._serialized_end=975
  _FFTCONFIG._serialized_start=977
  _FFTCONFIG._serialized_end=1103
  _LMFECONFIG._serialized_start=1106
  _LMFECONFIG._serialized_end=1256
# @@protoc_insertion_point(module_scope)
