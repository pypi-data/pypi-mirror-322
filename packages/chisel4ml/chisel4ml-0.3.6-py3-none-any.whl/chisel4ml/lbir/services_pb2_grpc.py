# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services_pb2 as services__pb2


class Chisel4mlServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/services.Chisel4mlService/GetVersion',
                request_serializer=services__pb2.GetVersionParams.SerializeToString,
                response_deserializer=services__pb2.GetVersionReturn.FromString,
                )
        self.GenerateCircuit = channel.unary_unary(
                '/services.Chisel4mlService/GenerateCircuit',
                request_serializer=services__pb2.GenerateCircuitParams.SerializeToString,
                response_deserializer=services__pb2.GenerateCircuitReturn.FromString,
                )
        self.RunSimulation = channel.unary_unary(
                '/services.Chisel4mlService/RunSimulation',
                request_serializer=services__pb2.RunSimulationParams.SerializeToString,
                response_deserializer=services__pb2.RunSimulationReturn.FromString,
                )
        self.DeleteCircuit = channel.unary_unary(
                '/services.Chisel4mlService/DeleteCircuit',
                request_serializer=services__pb2.DeleteCircuitParams.SerializeToString,
                response_deserializer=services__pb2.DeleteCircuitReturn.FromString,
                )


class Chisel4mlServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateCircuit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunSimulation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCircuit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Chisel4mlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=services__pb2.GetVersionParams.FromString,
                    response_serializer=services__pb2.GetVersionReturn.SerializeToString,
            ),
            'GenerateCircuit': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateCircuit,
                    request_deserializer=services__pb2.GenerateCircuitParams.FromString,
                    response_serializer=services__pb2.GenerateCircuitReturn.SerializeToString,
            ),
            'RunSimulation': grpc.unary_unary_rpc_method_handler(
                    servicer.RunSimulation,
                    request_deserializer=services__pb2.RunSimulationParams.FromString,
                    response_serializer=services__pb2.RunSimulationReturn.SerializeToString,
            ),
            'DeleteCircuit': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCircuit,
                    request_deserializer=services__pb2.DeleteCircuitParams.FromString,
                    response_serializer=services__pb2.DeleteCircuitReturn.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'services.Chisel4mlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chisel4mlService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.Chisel4mlService/GetVersion',
            services__pb2.GetVersionParams.SerializeToString,
            services__pb2.GetVersionReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateCircuit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.Chisel4mlService/GenerateCircuit',
            services__pb2.GenerateCircuitParams.SerializeToString,
            services__pb2.GenerateCircuitReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunSimulation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.Chisel4mlService/RunSimulation',
            services__pb2.RunSimulationParams.SerializeToString,
            services__pb2.RunSimulationReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCircuit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.Chisel4mlService/DeleteCircuit',
            services__pb2.DeleteCircuitParams.SerializeToString,
            services__pb2.DeleteCircuitReturn.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
