# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .callback_step import CallbackStep
from .create_workflow_block_dto import CreateWorkflowBlockDto
from .create_workflow_dto import CreateWorkflowDto
from .handoff_step import HandoffStep
import typing
from .call import Call
from .pagination_meta import PaginationMeta
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class CallPaginatedResponse(UniversalBaseModel):
    results: typing.List[Call]
    metadata: PaginationMeta

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(CallbackStep, CallPaginatedResponse=CallPaginatedResponse)
update_forward_refs(CreateWorkflowBlockDto, CallPaginatedResponse=CallPaginatedResponse)
update_forward_refs(CreateWorkflowDto, CallPaginatedResponse=CallPaginatedResponse)
update_forward_refs(HandoffStep, CallPaginatedResponse=CallPaginatedResponse)
