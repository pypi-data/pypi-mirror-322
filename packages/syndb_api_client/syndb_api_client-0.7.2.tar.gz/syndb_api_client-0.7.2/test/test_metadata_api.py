# coding: utf-8

"""
    Synapse DB

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.7.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from syndb_api_client.api.metadata_api import MetadataApi


class TestMetadataApi(unittest.TestCase):
    """MetadataApi unit test stubs"""

    def setUp(self) -> None:
        self.api = MetadataApi()

    def tearDown(self) -> None:
        pass

    def test_all_datasets_neurodata_metadata_dataset_get_all_get(self) -> None:
        """Test case for all_datasets_neurodata_metadata_dataset_get_all_get

        All Datasets
        """
        pass

    def test_create_animal_neurodata_metadata_tag_animal_create_post(self) -> None:
        """Test case for create_animal_neurodata_metadata_tag_animal_create_post

        Create Animal
        """
        pass

    def test_create_brain_region_neurodata_metadata_tag_brain_region_create_post(self) -> None:
        """Test case for create_brain_region_neurodata_metadata_tag_brain_region_create_post

        Create Brain Region
        """
        pass

    def test_create_microscopy_neurodata_metadata_tag_microscopy_create_post(self) -> None:
        """Test case for create_microscopy_neurodata_metadata_tag_microscopy_create_post

        Create Microscopy
        """
        pass

    def test_create_mutation_neurodata_metadata_tag_mutation_create_post(self) -> None:
        """Test case for create_mutation_neurodata_metadata_tag_mutation_create_post

        Create Mutation
        """
        pass

    def test_create_publication_neurodata_metadata_tag_publication_create_post(self) -> None:
        """Test case for create_publication_neurodata_metadata_tag_publication_create_post

        Create Publication
        """
        pass

    def test_dataset_info_neurodata_metadata_dataset_dataset_id_info_get(self) -> None:
        """Test case for dataset_info_neurodata_metadata_dataset_dataset_id_info_get

        Dataset Info
        """
        pass

    def test_dataset_tag_search_neurodata_metadata_dataset_search_post(self) -> None:
        """Test case for dataset_tag_search_neurodata_metadata_dataset_search_post

        Dataset Tag Search
        """
        pass

    def test_incomplete_datasets_neurodata_metadata_dataset_get_incomplete_get(self) -> None:
        """Test case for incomplete_datasets_neurodata_metadata_dataset_get_incomplete_get

        Incomplete Datasets
        """
        pass

    def test_modifiable_datasets_neurodata_metadata_dataset_get_modifiable_get(self) -> None:
        """Test case for modifiable_datasets_neurodata_metadata_dataset_get_modifiable_get

        Modifiable Datasets
        """
        pass

    def test_new_dataset_collection_neurodata_metadata_dataset_collection_new_simple_post(self) -> None:
        """Test case for new_dataset_collection_neurodata_metadata_dataset_collection_new_simple_post

        New Dataset Collection
        """
        pass

    def test_new_multi_region_dataset_collection_neurodata_metadata_dataset_collection_new_multi_brain_region_post(
        self,
    ) -> None:
        """Test case for new_multi_region_dataset_collection_neurodata_metadata_dataset_collection_new_multi_brain_region_post

        New Multi Region Dataset Collection
        """
        pass

    def test_register_new_dataset_neurodata_metadata_dataset_new_post(self) -> None:
        """Test case for register_new_dataset_neurodata_metadata_dataset_new_post

        Register New Dataset
        """
        pass

    def test_universal_metadata_neurodata_metadata_get_universal_get(self) -> None:
        """Test case for universal_metadata_neurodata_metadata_get_universal_get

        Universal Metadata
        """
        pass

    def test_user_metadata_neurodata_metadata_get_user_get(self) -> None:
        """Test case for user_metadata_neurodata_metadata_get_user_get

        User Metadata
        """
        pass


if __name__ == "__main__":
    unittest.main()
