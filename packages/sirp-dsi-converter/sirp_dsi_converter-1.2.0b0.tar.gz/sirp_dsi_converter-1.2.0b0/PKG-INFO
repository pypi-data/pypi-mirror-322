Metadata-Version: 2.2
Name: sirp_dsi_converter
Version: 1.2.0b0
Summary: A converter between D-SI and SI Reference Point unit formats
Author: Diego Nahuel Coppa, Daniel Hutzschenreuter, Maximilian Gruber
Maintainer-email: Maximilian Gruber <maximilian.gruber@ptb.de>
License: MIT License
        
        Copyright (c) 2024 Diego Nahuel Coppa (INTI), Daniel Hutzschenreuter (PTB), Maximilian Gruber (PTB)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/PTB-M4D/SIRP-D-SI-Converter-Service/
Project-URL: Bug Reports, https://github.com/PTB-M4D/SIRP-D-SI-Converter-Service/issues
Project-URL: Source, https://github.com/PTB-M4D/SIRP-D-SI-Converter-Service/
Keywords: metrology,unit conversion
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: rdflib

# SIRP-D-SI Converter Service

This software ensures the reliability of the <a href="https://gitlab1.ptb.de/d-ptb/d-si/xsd-d-si/-/blob/master/wiki/doc/UnitSystem.md">D-SI Syntax</a> by testing its internal syntax consistencies and by providing metadata within the <a href="https://si-digital-framework.org/SI/unitExpr?lang=en">SI Reference Point</a> (SIRP), which relates to prefixes, units, and exponents.

The software accepts Base or Compound Units in D-SI unit syntax and provides several pieces of information about the input:

* Its consistency according to the D-SI Syntax.

* Its transformation into Prefixes, Units and Exponents SIRP Syntax. 

* Its representation as a Permanent Identifier according to SIRP.

* Its representation as an RDF structure according to SIRP. 

* Its Metadata from the SIRP framework.

## Code Files

Several D-SI Compound Units are being shown as examples to demonstrate the functionality of the software.

### transformation.py: 

This file handles the validation and transformation logic.

### app.py:

This file serves as the flask interface.

### test.py:

This file serves as an example of how the classes from the transformation.py can be used inside any other software

### Classes

There are four main classes that can be accessed externally:

* class verboseDsiCompoundUnitValidation
  
The function messageResponse(compoundunit) within the class provides detailed information regarding the validation of the D-SI Compound Unit. If the input Compound Unit is valid, the information detailed above. If it is invalid, the class returns different messages depending on whether the Compound Unit is a valid D-SI unit or not. Additionally, it offers suggestions for correcting the input Compound Unit.

* class jsonDsiCompoundUnitValidation

The function messageResponse([string]) within the class provides detailed information regarding the validation of the D-SI Compound Unit. If the input Compound Unit is valid, the information detailed above. If it is invalid, the class returns different messages depending on whether the Compound Unit is a valid D-SI unit or not. Additionally, it offers suggestions for correcting the input Compound Unit.

* class compoundUnitValidation

The funtion validation([string]) within the class performs the validation and stores the results in variables that can be accessed externally.

* class dsiValidator

This is used to interact from the power shell.

## Example Usage 

### Prerequisites for everything except the web server:

This is an example of how to list things you need to use the software and how to install them.
* python
  ```
  pip install rdflib
  pip install re
  pip install sys
  pip install pprint
  ```
### dsiValidator
* python
 ```
 python trasformation.py -h
 #shows the help
 ```
* python
 ```
 python trasformation.py -json \metre
 #inputs the DSI unit after the '-json' and returns information about the unit in json format
 ```
* python
 ```
 python trasformation.py -v \metre
 #inputs the DSI unit after the '-v' and returns information about the unit in a verbose way
 ```

### test.py

 ```
 #input:
 info=compoundUnitValidation('\\metre')
 info.validation()
 #variables that can be accessed:
 print(f"The {info.input_compound_unit} validation is: {info.valid_dsi_unit}")
 print(f"The unit has an SIRP correspondance: {info.output_sirp_correspondance}")
 print(f"The system has a message: {info.output_human_message}")
 print(f"The SIRP PID Unit is: {info.output_pid}")
 print(f"The SIRP Unit is: {info.output_compound_unit}")
 ```
        
## Terminology

* D-SI Prefix: (e.g. \milli, \kilo, etc.)

* D-SI Unit: (e.g. \gram, \candela, \metre, etc.)

* D-SI Exponent: (e.g. \tothe{5}, etc.)

* SIRP Prefix: (e.g. milli, kilo, etc.)

* SIRP Unit: (e.g. gram, candela, metre, etc.)

* SIRP Symbol: (e.g. m, s, kg)

* SIRP Exponent: (e.g. -1, 2, 5, etc.)

* SIRP Compound Unit Symbol: (e.g. m-1, mÂ·s-2, kg)

* SIRP Compound Unit PID: (e.g. https://si-digital-framework.org/SI/units/millisecond-1)
