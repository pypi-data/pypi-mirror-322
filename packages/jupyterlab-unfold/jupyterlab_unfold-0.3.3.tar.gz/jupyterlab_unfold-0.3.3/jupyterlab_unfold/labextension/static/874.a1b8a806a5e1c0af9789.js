"use strict";(self.webpackChunkjupyterlab_unfold=self.webpackChunkjupyterlab_unfold||[]).push([[874],{874:(t,e,s)=>{s.r(e),s.d(e,{DirTreeListing:()=>y,FileTreeBrowser:()=>w,FileTreeRenderer:()=>f,FilterFileTreeBrowserModel:()=>_,default:()=>C,folderOpenIcon:()=>v});var i=s(138),o=s(565),n=s(157),r=s(629),a=s(292),l=s(523),h=s(697),c=s(593),d=s(930),p=s(95),m=s(486);const u="jp-mod-dropTarget",g="application/x-jupyter-icontents",v=new m.LabIcon({name:"ui-components:folder-open",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" width="16" viewBox="0 0 576 512"><path class="jp-icon3 jp-icon-selectable" fill="#616161" d="M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z"></path></svg>\n'});class f extends i.DirListing.Renderer{constructor(t){super(),this.model=t}createNode(){const t=document.createElement("div"),e=document.createElement("ul");return e.className="jp-DirListing-content",t.appendChild(e),t.tabIndex=1,t}populateHeaderNode(t,e,s){}handleHeaderClick(t,e){return null}updateItemNode(t,e,s,i,o,r){if(super.updateItemNode(t,e,s,i,o,r),"directory"===e.type&&this.model.isOpen(e.path)){const e=n.DOMUtils.findElement(t,"jp-DirListing-itemIcon");v.element({container:e,className:"jp-DirListing-itemIcon",stylesheet:"listing"})}for(;null!==t.firstChild&&t.firstChild.classList.contains("jp-DirListing-vbar");)t.removeChild(t.firstChild);for(let s=0;s<e.path.split("/").length-1;s++){const e=document.createElement("div");e.classList.add("jp-DirListing-vbar"),t.insertBefore(e,t.firstChild)}}}class y extends i.DirListing{constructor(t){super({...t,renderer:new f(t.model)}),this._singleClickToUnfold=!0}set singleClickToUnfold(t){this._singleClickToUnfold=t}get headerNode(){return document.createElement("div")}sort(t){this._sortedItems=(0,h.toArray)(this.model.items()),this._sortState=t,this.update()}get model(){return this._model}async _eventDblClick(t){const e=this.modelForClick(t);"directory"===(null==e?void 0:e.type)?this._singleClickToUnfold||this.model.toggle(e.path):super.handleEvent(t)}_onPathChanged(){}_eventDragEnter(t){if(t.mimeData.hasData(g)){const e=this._hitTestNodes(this._items,t);let s;s=-1!==e?this._items[e]:t.target,s.classList.add(u),t.preventDefault(),t.stopPropagation()}}_eventDragOver(t){t.preventDefault(),t.stopPropagation(),t.dropAction=t.proposedAction;const e=n.DOMUtils.findElement(this.node,u);e&&e.classList.remove(u);const s=this._hitTestNodes(this._items,t);let i;i=-1!==s?this._items[s]:t.target,i.classList.add(u)}_eventDrop(t){if(t.preventDefault(),t.stopPropagation(),clearTimeout(this._selectTimer),"none"===t.proposedAction)return void(t.dropAction="none");if(!t.mimeData.hasData(g))return;let e=t.target;for(;e&&e.parentElement;){if(e.classList.contains(u)){e.classList.remove(u);break}e=e.parentElement}const s=h.ArrayExt.firstIndexOf(this._items,e);let i;if(-1!==s){const t=(0,h.toArray)(this.model.items())[s];i="directory"===t.type?t.path:p.PathExt.dirname(t.path)}else i="";const r=this._manager,a=[],l=t.mimeData.getData(g);t.ctrlKey&&"move"===t.proposedAction?t.dropAction="copy":t.dropAction=t.proposedAction;for(const e of l){const s=r.services.contents.localPath(e),n=p.PathExt.basename(s),l=p.PathExt.join(i,n);l!==e&&("copy"===t.dropAction?a.push(r.copy(e,i)):a.push((0,o.renameFile)(r,e,l)))}Promise.all(a).catch((t=>{(0,n.showErrorMessage)(this._trans._p("showErrorMessage","Error while copying/moving files"),t)}))}_eventMouseDown(t){const e=this.modelForClick(t);e?"directory"===e.type?(this.model.path="/"+e.path,this._singleClickToUnfold&&0===t.button&&this.model.toggle(e.path)):this.model.path="/"+p.PathExt.dirname(e.path):(this.clearSelectedItems(),this.update(),this.model.path=this.model.rootPath)}_hitTestNodes(t,e){return h.ArrayExt.findFirstIndex(t,(t=>c.ElementExt.hitTest(t,e.clientX,e.clientY)||e.target===t))}handleEvent(t){switch(t.type){case"dblclick":this._eventDblClick(t);break;case"lm-dragenter":this._eventDragEnter(t);break;case"lm-dragover":this._eventDragOver(t);break;case"lm-drop":this._eventDrop(t);break;case"mousedown":super.handleEvent(t),this._eventMouseDown(t);break;default:super.handleEvent(t)}}}class _ extends i.FilterFileBrowserModel{constructor(t){super(t),this._isRestored=new d.PromiseDelegate,this._savedState=null,this._stateKey=null,this.openState={},this.contentManager=this.manager.services.contents,this._savedState=t.state||null,this._path=this.rootPath}get path(){return this._path}set path(t){let e=!1;this._path!==t&&(e=!0),this._path=t,e&&this.pathChanged.emit({name:"path",oldValue:this._path,newValue:p.PathExt.dirname(this._path)})}async cd(t=this.rootPath){const e=await this.fetchContent(this.rootPath,t);this.handleContents({name:this.rootPath,path:this.rootPath,type:"directory",content:e}),this._savedState&&this._stateKey&&this._savedState.save(this._stateKey,{openState:this.openState}),this.onRunningChanged(this.manager.services.sessions,this.manager.services.sessions.running())}get restored(){return this._isRestored.promise}async restore(t,e=!0){const{manager:s}=this,i=`file-browser-${t}:openState`,o=this._savedState;if(!this._stateKey)if(this._stateKey=i,e&&o){await s.services.ready;try{const t=await o.fetch(i);if(!t)return await this.cd(this.rootPath),void this._isRestored.resolve(void 0);this.openState=t.openState,await this.cd(this.rootPath)}catch(t){await this.cd(this.rootPath),await o.remove(i)}this._isRestored.resolve(void 0)}else this._isRestored.resolve(void 0)}async toggle(t=this.rootPath){this.openState[t]=!this.openState[t],this.cd(this.rootPath)}isOpen(t){return!!this.openState[t]}async fetchContent(t,e){const s=await this.contentManager.get(t);if(!s.content)return[];let i=[];const o=this.sortContents(s.content);this.openState[t]=!0;for(const t of o)if(i.push(t),"directory"===t.type)if(e&&e.startsWith("/"+t.path)||this.isOpen(t.path)){const s=await this.fetchContent(t.path,e);i=i.concat(s)}else this.openState[t.path]=!1;return i}sortContents(t){const e=t.filter((t=>"directory"===t.type)),s=t.filter((t=>"directory"!==t.type)),i=e.sort(((t,e)=>t.name.localeCompare(e.name))),o=s.sort(((t,e)=>t.name.localeCompare(e.name)));return i.concat(o)}onFileChanged(t,e){this.refresh()}}class w extends i.FileBrowser{constructor(t){var e;super(t),null===(e=this.mainPanel.layout)||void 0===e||e.removeWidget(this.crumbs),this.showLastModifiedColumn=!1,this.showFileCheckboxes=!1}get showFileCheckboxes(){return!1}set showFileCheckboxes(t){this.listing.setColumnVisibility&&(this.listing.setColumnVisibility("is_selected",!1),this._showFileCheckboxes=!1)}get showLastModifiedColumn(){return!1}set showLastModifiedColumn(t){this.listing.setColumnVisibility&&this.listing.setColumnVisibility("last_modified",!1)}createDirListing(t){return new y({model:this.model,translator:this.translator})}set useFuzzyFilter(t){}}const C={id:"jupyterlab-unfold:FileBrowserFactory",provides:i.IFileBrowserFactory,requires:[o.IDocumentManager,a.ITranslator,r.ISettingRegistry],optional:[l.IStateDB],activate:async(t,e,s,i,o)=>{const r=await i.load("jupyterlab-unfold:jupyterlab-unfold-settings"),a=new n.WidgetTracker({namespace:"filebrowser"});return{createFileBrowser:(i,n={})=>{var l;const h=new _({translator:s,auto:null===(l=n.auto)||void 0===l||l,manager:e,driveName:n.driveName||"",refreshInterval:n.refreshInterval,state:null===n.state?void 0:n.state||o||void 0}),c=new w({id:i,model:h,restore:!0,translator:s,app:t});return c.listing.singleClickToUnfold=r.get("singleClickToUnfold").composite,r.changed.connect((()=>{c.listing.singleClickToUnfold=r.get("singleClickToUnfold").composite})),t.restored.then((async()=>{const s=window.location.pathname,i=s.indexOf("/tree/");let o=s.substring(i+6);o=decodeURIComponent(o),"directory"!==(await t.serviceManager.contents.get(o)).type&&e.open(o)})),a.add(c),c},tracker:a}}}}}]);