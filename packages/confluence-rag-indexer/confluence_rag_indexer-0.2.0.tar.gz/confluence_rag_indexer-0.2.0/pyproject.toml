[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "confluence-rag-indexer"
version = "0.2.0"
description = "A tool to index Confluence content for RAG"
license = { file = "LICENSE" }
authors = [{ name = "Gavin M. Roy", email = "gavinmroy@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "httpx",
    "markdownify",
    "pgvector-rag>=0.4.0"
]

[project.optional-dependencies]
dev = [
    "build",
    "coverage",
    "ruff"
]

[project.scripts]
confluence-rag-indexer = "confluence_rag_indexer.indexer:main"

[tool.hatch.build.targets.wheel]
include = ["confluence_rag_indexer"]

[project.urls]
Repository = "https://github.com/gmr/confluence-rag-indexer.git"

[tool.ruff]
line-length = 79
target-version = "py312"

[tool.ruff.lint]
select = [
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",
    "W",     # pycodestyle
    "F",     # pyflakes
    "G",     # flake8-logging-format
    "I",     # isort
    "S",     # flake8-bandit
    "T20",   # flake8-print
    "UP",    # pyupgrade
]
exclude = []

[tool.coverage.xml]
output = "build/coverage.xml"

[tool.coverage.run]
branch = true
source = ["confluence_rag_indexer"]
command_line = "-m unittest discover tests --buffer --verbose"

[tool.pyright]
reportOptionalMemberAccess = false
reportUnknownMemberType = false
