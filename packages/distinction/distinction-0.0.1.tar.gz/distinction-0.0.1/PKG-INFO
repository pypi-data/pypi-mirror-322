Metadata-Version: 2.4
Name: distinction
Version: 0.0.1
Summary: A fast binary classifier using feature selection of sentence transformer embeddings.
Project-URL: Homepage, https://github.com/er1kb/distinction
Project-URL: Bug Tracker, https://github.com/er1kb/distinction/issues
Author-email: Erik Broman <mikroberna@gmail.com>
License-Expression: MIT
License-File: LICENSE
Keywords: binary classification,cosine similarity,embeddings,feature selection,sentence transformer
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Other Audience
Classifier: Natural Language :: English
Classifier: Natural Language :: Swedish
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.9
Requires-Dist: numpy>=1.25.0
Requires-Dist: sentence-transformers>=3.0.1
Provides-Extra: plot
Requires-Dist: plotext>=5.3.2; extra == 'plot'
Description-Content-Type: text/markdown

# Dependencies
Tested with:  
* [Numpy](https://www.python.org/) >= 1.25.0
* [SentenceTransformers](https://sbert.net/) >= 3.0.1

# Installation

## From Github
```
pip3 install git+https://github.com/er1kb/distinction
```
or clone and install locally:
```
git clone https://github.com/er1kb/distinction.git && cd distinction && pip3 install .
```

## From PyPI
```
python3 -m pip install distinction
```


# English

## What is it
## Examples
### Split records
### Combine records
### Classifier from training\_data - raw text
### Classifier from training\_data - pre-encoded
### Tune similarity
### Tune selection
### Tune with plots
### Use optimized criteria from tune()
### Prediction pipeline


# Swedish

## TODO

```
import distinction as ds
C = ds.Classifier(**kwargs)
[*C.train(training_data = ...)]
predictions = [*C.predict(...)]
```


