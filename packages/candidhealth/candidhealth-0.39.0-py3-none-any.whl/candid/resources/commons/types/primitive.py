# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Primitive(str, enum.Enum):
    """
    The BOOLEAN and STRING primitives respectively map to the `boolean` and `string` JSON data types.
    The DOUBLE and INTEGER primitives must be written as a JSON `number` type.
    """

    BOOLEAN = "BOOLEAN"
    DOUBLE = "DOUBLE"
    INTEGER = "INTEGER"
    STRING = "STRING"

    def visit(
        self,
        boolean: typing.Callable[[], T_Result],
        double: typing.Callable[[], T_Result],
        integer: typing.Callable[[], T_Result],
        string: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Primitive.BOOLEAN:
            return boolean()
        if self is Primitive.DOUBLE:
            return double()
        if self is Primitive.INTEGER:
            return integer()
        if self is Primitive.STRING:
            return string()
