# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic

from ......core.datetime_utils import serialize_datetime
from ......core.pydantic_utilities import deep_union_pydantic_dicts
from .....commons.types.claim_id import ClaimId
from .....commons.types.service_line_id import ServiceLineId


class InvoiceItemAttributionCreate_ServiceLineId(pydantic.BaseModel):
    value: ServiceLineId
    type: typing.Literal["service_line_id"] = "service_line_id"

    class Config:
        frozen = True
        smart_union = True


class InvoiceItemAttributionCreate_ClaimId(pydantic.BaseModel):
    value: ClaimId
    type: typing.Literal["claim_id"] = "claim_id"

    class Config:
        frozen = True
        smart_union = True


class InvoiceItemAttributionCreate_Unattributed(pydantic.BaseModel):
    """
    Points to the claim or service line that this invoice is attributed to
    """

    type: typing.Literal["unattributed"] = "unattributed"

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}


InvoiceItemAttributionCreate = typing.Union[
    InvoiceItemAttributionCreate_ServiceLineId,
    InvoiceItemAttributionCreate_ClaimId,
    InvoiceItemAttributionCreate_Unattributed,
]
