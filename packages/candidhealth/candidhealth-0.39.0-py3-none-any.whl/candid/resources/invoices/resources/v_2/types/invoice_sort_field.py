# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class InvoiceSortField(str, enum.Enum):
    CREATED_AT = "CREATED_AT"
    UPDATED_AT = "UPDATED_AT"
    PATIENT_EXTERNAL_ID = "PATIENT_EXTERNAL_ID"
    NOTE = "NOTE"
    DUE_DATE = "DUE_DATE"
    STATUS = "STATUS"

    def visit(
        self,
        created_at: typing.Callable[[], T_Result],
        updated_at: typing.Callable[[], T_Result],
        patient_external_id: typing.Callable[[], T_Result],
        note: typing.Callable[[], T_Result],
        due_date: typing.Callable[[], T_Result],
        status: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is InvoiceSortField.CREATED_AT:
            return created_at()
        if self is InvoiceSortField.UPDATED_AT:
            return updated_at()
        if self is InvoiceSortField.PATIENT_EXTERNAL_ID:
            return patient_external_id()
        if self is InvoiceSortField.NOTE:
            return note()
        if self is InvoiceSortField.DUE_DATE:
            return due_date()
        if self is InvoiceSortField.STATUS:
            return status()
