# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AppointmentStatus(str, enum.Enum):
    PENDING = "PENDING"
    NOT_READY = "NOT_READY"
    READY = "READY"
    CHECKED_IN = "CHECKED_IN"

    def visit(
        self,
        pending: typing.Callable[[], T_Result],
        not_ready: typing.Callable[[], T_Result],
        ready: typing.Callable[[], T_Result],
        checked_in: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AppointmentStatus.PENDING:
            return pending()
        if self is AppointmentStatus.NOT_READY:
            return not_ready()
        if self is AppointmentStatus.READY:
            return ready()
        if self is AppointmentStatus.CHECKED_IN:
            return checked_in()
