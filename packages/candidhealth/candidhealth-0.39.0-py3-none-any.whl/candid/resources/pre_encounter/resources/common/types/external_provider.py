# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ......core.datetime_utils import serialize_datetime
from ......core.pydantic_utilities import deep_union_pydantic_dicts
from .address import Address
from .canonical_provider_id import CanonicalProviderId
from .contact_point import ContactPoint
from .external_provider_type import ExternalProviderType
from .human_name import HumanName
from .period import Period


class ExternalProvider(pydantic.BaseModel):
    name: HumanName
    type: typing.Optional[ExternalProviderType] = pydantic.Field(default=None)
    """
    Defaults to ATTENDING.
    """

    npi: typing.Optional[str] = None
    telecoms: typing.List[ContactPoint]
    addresses: typing.Optional[typing.List[Address]] = None
    period: typing.Optional[Period] = None
    canonical_id: typing.Optional[CanonicalProviderId] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
