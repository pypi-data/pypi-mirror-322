# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class UniversalServiceIdentifier(str, enum.Enum):
    MD_VISIT = "MD_Visit"
    TREATMENT = "Treatment"
    TESTS = "Tests"
    ACTIVITY = "Activity"

    def visit(
        self,
        md_visit: typing.Callable[[], T_Result],
        treatment: typing.Callable[[], T_Result],
        tests: typing.Callable[[], T_Result],
        activity: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is UniversalServiceIdentifier.MD_VISIT:
            return md_visit()
        if self is UniversalServiceIdentifier.TREATMENT:
            return treatment()
        if self is UniversalServiceIdentifier.TESTS:
            return tests()
        if self is UniversalServiceIdentifier.ACTIVITY:
            return activity()
