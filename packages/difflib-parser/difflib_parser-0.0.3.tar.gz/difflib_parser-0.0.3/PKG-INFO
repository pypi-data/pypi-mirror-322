Metadata-Version: 2.1
Name: difflib-parser
Version: 0.0.3
Summary: Lightweight Python package for parsing Python difflib's diff results
Project-URL: Homepage, https://github.com/git-mastery/difflib-parser
Project-URL: Issues, https://github.com/git-mastery/difflib-parser/issues
Author-email: "Jiahao, Woo" <woojiahao1234@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Jiahao
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development
Requires-Python: >=3.13
Description-Content-Type: text/markdown

# difflib-parser

Parser for Python's `difflib`. Built on top of https://github.com/yebrahim/difflibparser/blob/master/difflibparser.py

Key changes made to the above library:

1. Using generator pattern instead of using iterator pattern when iterating over diffs
2. Using more `@dataclass` over generic dictionaries to enforce strict typing
3. Using type annotations for strict typing
