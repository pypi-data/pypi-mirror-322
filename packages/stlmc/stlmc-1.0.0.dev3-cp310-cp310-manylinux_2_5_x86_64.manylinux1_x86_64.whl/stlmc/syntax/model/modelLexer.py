# Generated from ./model/model.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,52,503,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,3,0,148,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,3,1,165,8,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,5,1,
        5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,3,7,185,8,7,1,8,1,8,1,9,1,9,1,9,1,
        10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,17,1,17,1,17,1,17,3,17,237,8,17,1,18,1,18,1,19,1,19,1,
        20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,
        24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,
        27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,
        29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,315,8,32,1,33,1,33,1,33,1,
        33,1,33,1,33,1,33,1,33,1,33,3,33,326,8,33,1,34,1,34,1,34,1,34,1,
        34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,3,34,340,8,34,1,35,1,35,1,
        35,1,35,1,35,1,35,3,35,348,8,35,1,36,1,36,1,36,1,36,3,36,354,8,36,
        1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,363,8,37,1,38,1,38,1,38,
        1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,42,1,42,1,43,
        1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,
        1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,
        1,55,1,56,1,56,1,56,1,57,3,57,412,8,57,1,57,4,57,415,8,57,11,57,
        12,57,416,1,57,1,57,4,57,421,8,57,11,57,12,57,422,3,57,425,8,57,
        1,57,1,57,3,57,429,8,57,1,57,4,57,432,8,57,11,57,12,57,433,3,57,
        436,8,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,4,61,446,8,61,11,
        61,12,61,447,1,61,1,61,1,61,5,61,453,8,61,10,61,12,61,456,9,61,1,
        62,1,62,4,62,460,8,62,11,62,12,62,461,1,63,1,63,1,63,1,63,1,63,1,
        64,1,64,1,64,1,65,4,65,473,8,65,11,65,12,65,474,1,65,3,65,478,8,
        65,1,65,1,65,1,66,1,66,5,66,484,8,66,10,66,12,66,487,9,66,1,66,1,
        66,1,66,1,66,1,66,5,66,494,8,66,10,66,12,66,497,9,66,1,66,1,66,1,
        66,3,66,502,8,66,1,495,0,67,1,1,3,2,5,3,7,0,9,0,11,0,13,0,15,4,17,
        5,19,6,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,7,37,8,39,9,41,10,43,
        11,45,12,47,13,49,14,51,15,53,16,55,17,57,18,59,19,61,20,63,21,65,
        22,67,23,69,24,71,25,73,26,75,27,77,28,79,29,81,30,83,31,85,32,87,
        33,89,34,91,35,93,36,95,37,97,38,99,39,101,40,103,41,105,42,107,
        43,109,44,111,0,113,45,115,46,117,0,119,0,121,47,123,48,125,49,127,
        50,129,51,131,52,133,0,1,0,8,1,0,48,57,2,0,69,69,101,101,2,0,43,
        43,45,45,1,0,97,122,1,0,65,90,4,0,45,45,65,90,95,95,97,122,3,0,9,
        10,13,13,32,32,2,0,10,10,13,13,529,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
        0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,
        0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,
        0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,
        0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,
        0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,
        0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,
        1,0,0,0,0,109,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,121,1,0,0,0,
        0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,
        0,0,0,1,147,1,0,0,0,3,164,1,0,0,0,5,166,1,0,0,0,7,170,1,0,0,0,9,
        172,1,0,0,0,11,175,1,0,0,0,13,177,1,0,0,0,15,184,1,0,0,0,17,186,
        1,0,0,0,19,188,1,0,0,0,21,191,1,0,0,0,23,195,1,0,0,0,25,199,1,0,
        0,0,27,203,1,0,0,0,29,210,1,0,0,0,31,217,1,0,0,0,33,224,1,0,0,0,
        35,236,1,0,0,0,37,238,1,0,0,0,39,240,1,0,0,0,41,242,1,0,0,0,43,244,
        1,0,0,0,45,247,1,0,0,0,47,249,1,0,0,0,49,254,1,0,0,0,51,258,1,0,
        0,0,53,263,1,0,0,0,55,268,1,0,0,0,57,274,1,0,0,0,59,279,1,0,0,0,
        61,284,1,0,0,0,63,296,1,0,0,0,65,314,1,0,0,0,67,325,1,0,0,0,69,339,
        1,0,0,0,71,347,1,0,0,0,73,353,1,0,0,0,75,362,1,0,0,0,77,364,1,0,
        0,0,79,367,1,0,0,0,81,372,1,0,0,0,83,375,1,0,0,0,85,377,1,0,0,0,
        87,379,1,0,0,0,89,382,1,0,0,0,91,385,1,0,0,0,93,387,1,0,0,0,95,389,
        1,0,0,0,97,391,1,0,0,0,99,393,1,0,0,0,101,395,1,0,0,0,103,397,1,
        0,0,0,105,399,1,0,0,0,107,401,1,0,0,0,109,403,1,0,0,0,111,405,1,
        0,0,0,113,407,1,0,0,0,115,411,1,0,0,0,117,437,1,0,0,0,119,439,1,
        0,0,0,121,441,1,0,0,0,123,445,1,0,0,0,125,459,1,0,0,0,127,463,1,
        0,0,0,129,468,1,0,0,0,131,477,1,0,0,0,133,501,1,0,0,0,135,136,5,
        116,0,0,136,137,5,114,0,0,137,138,5,117,0,0,138,148,5,101,0,0,139,
        140,5,84,0,0,140,141,5,114,0,0,141,142,5,117,0,0,142,148,5,101,0,
        0,143,144,5,84,0,0,144,145,5,82,0,0,145,146,5,85,0,0,146,148,5,69,
        0,0,147,135,1,0,0,0,147,139,1,0,0,0,147,143,1,0,0,0,148,2,1,0,0,
        0,149,150,5,102,0,0,150,151,5,97,0,0,151,152,5,108,0,0,152,153,5,
        115,0,0,153,165,5,101,0,0,154,155,5,70,0,0,155,156,5,97,0,0,156,
        157,5,108,0,0,157,158,5,115,0,0,158,165,5,101,0,0,159,160,5,70,0,
        0,160,161,5,65,0,0,161,162,5,76,0,0,162,163,5,83,0,0,163,165,5,69,
        0,0,164,149,1,0,0,0,164,154,1,0,0,0,164,159,1,0,0,0,165,4,1,0,0,
        0,166,167,5,105,0,0,167,168,5,110,0,0,168,169,5,102,0,0,169,6,1,
        0,0,0,170,171,5,62,0,0,171,8,1,0,0,0,172,173,5,62,0,0,173,174,5,
        61,0,0,174,10,1,0,0,0,175,176,5,60,0,0,176,12,1,0,0,0,177,178,5,
        60,0,0,178,179,5,61,0,0,179,14,1,0,0,0,180,185,3,7,3,0,181,185,3,
        9,4,0,182,185,3,11,5,0,183,185,3,13,6,0,184,180,1,0,0,0,184,181,
        1,0,0,0,184,182,1,0,0,0,184,183,1,0,0,0,185,16,1,0,0,0,186,187,5,
        61,0,0,187,18,1,0,0,0,188,189,5,33,0,0,189,190,5,61,0,0,190,20,1,
        0,0,0,191,192,5,115,0,0,192,193,5,105,0,0,193,194,5,110,0,0,194,
        22,1,0,0,0,195,196,5,99,0,0,196,197,5,111,0,0,197,198,5,115,0,0,
        198,24,1,0,0,0,199,200,5,116,0,0,200,201,5,97,0,0,201,202,5,110,
        0,0,202,26,1,0,0,0,203,204,5,97,0,0,204,205,5,114,0,0,205,206,5,
        99,0,0,206,207,5,115,0,0,207,208,5,105,0,0,208,209,5,110,0,0,209,
        28,1,0,0,0,210,211,5,97,0,0,211,212,5,114,0,0,212,213,5,99,0,0,213,
        214,5,99,0,0,214,215,5,111,0,0,215,216,5,115,0,0,216,30,1,0,0,0,
        217,218,5,97,0,0,218,219,5,114,0,0,219,220,5,99,0,0,220,221,5,116,
        0,0,221,222,5,97,0,0,222,223,5,110,0,0,223,32,1,0,0,0,224,225,5,
        115,0,0,225,226,5,113,0,0,226,227,5,114,0,0,227,228,5,116,0,0,228,
        34,1,0,0,0,229,237,3,21,10,0,230,237,3,23,11,0,231,237,3,25,12,0,
        232,237,3,27,13,0,233,237,3,29,14,0,234,237,3,31,15,0,235,237,3,
        33,16,0,236,229,1,0,0,0,236,230,1,0,0,0,236,231,1,0,0,0,236,232,
        1,0,0,0,236,233,1,0,0,0,236,234,1,0,0,0,236,235,1,0,0,0,237,36,1,
        0,0,0,238,239,5,43,0,0,239,38,1,0,0,0,240,241,5,45,0,0,241,40,1,
        0,0,0,242,243,5,42,0,0,243,42,1,0,0,0,244,245,5,42,0,0,245,246,5,
        42,0,0,246,44,1,0,0,0,247,248,5,47,0,0,248,46,1,0,0,0,249,250,5,
        109,0,0,250,251,5,111,0,0,251,252,5,100,0,0,252,253,5,101,0,0,253,
        48,1,0,0,0,254,255,5,105,0,0,255,256,5,110,0,0,256,257,5,118,0,0,
        257,50,1,0,0,0,258,259,5,102,0,0,259,260,5,108,0,0,260,261,5,111,
        0,0,261,262,5,119,0,0,262,52,1,0,0,0,263,264,5,106,0,0,264,265,5,
        117,0,0,265,266,5,109,0,0,266,267,5,112,0,0,267,54,1,0,0,0,268,269,
        5,114,0,0,269,270,5,101,0,0,270,271,5,97,0,0,271,272,5,99,0,0,272,
        273,5,104,0,0,273,56,1,0,0,0,274,275,5,103,0,0,275,276,5,111,0,0,
        276,277,5,97,0,0,277,278,5,108,0,0,278,58,1,0,0,0,279,280,5,105,
        0,0,280,281,5,110,0,0,281,282,5,105,0,0,282,283,5,116,0,0,283,60,
        1,0,0,0,284,285,5,112,0,0,285,286,5,114,0,0,286,287,5,111,0,0,287,
        288,5,112,0,0,288,289,5,111,0,0,289,290,5,115,0,0,290,291,5,105,
        0,0,291,292,5,116,0,0,292,293,5,105,0,0,293,294,5,111,0,0,294,295,
        5,110,0,0,295,62,1,0,0,0,296,297,5,99,0,0,297,298,5,111,0,0,298,
        299,5,110,0,0,299,300,5,115,0,0,300,301,5,116,0,0,301,64,1,0,0,0,
        302,303,5,98,0,0,303,304,5,111,0,0,304,305,5,111,0,0,305,315,5,108,
        0,0,306,307,5,66,0,0,307,308,5,111,0,0,308,309,5,111,0,0,309,315,
        5,108,0,0,310,311,5,66,0,0,311,312,5,79,0,0,312,313,5,79,0,0,313,
        315,5,76,0,0,314,302,1,0,0,0,314,306,1,0,0,0,314,310,1,0,0,0,315,
        66,1,0,0,0,316,317,5,105,0,0,317,318,5,110,0,0,318,326,5,116,0,0,
        319,320,5,73,0,0,320,321,5,110,0,0,321,326,5,116,0,0,322,323,5,73,
        0,0,323,324,5,78,0,0,324,326,5,84,0,0,325,316,1,0,0,0,325,319,1,
        0,0,0,325,322,1,0,0,0,326,68,1,0,0,0,327,328,5,114,0,0,328,329,5,
        101,0,0,329,330,5,97,0,0,330,340,5,108,0,0,331,332,5,82,0,0,332,
        333,5,101,0,0,333,334,5,97,0,0,334,340,5,108,0,0,335,336,5,82,0,
        0,336,337,5,69,0,0,337,338,5,65,0,0,338,340,5,76,0,0,339,327,1,0,
        0,0,339,331,1,0,0,0,339,335,1,0,0,0,340,70,1,0,0,0,341,342,5,97,
        0,0,342,343,5,110,0,0,343,348,5,100,0,0,344,345,5,65,0,0,345,346,
        5,110,0,0,346,348,5,100,0,0,347,341,1,0,0,0,347,344,1,0,0,0,348,
        72,1,0,0,0,349,350,5,111,0,0,350,354,5,114,0,0,351,352,5,79,0,0,
        352,354,5,114,0,0,353,349,1,0,0,0,353,351,1,0,0,0,354,74,1,0,0,0,
        355,356,5,110,0,0,356,357,5,111,0,0,357,363,5,116,0,0,358,359,5,
        78,0,0,359,360,5,111,0,0,360,363,5,116,0,0,361,363,5,126,0,0,362,
        355,1,0,0,0,362,358,1,0,0,0,362,361,1,0,0,0,363,76,1,0,0,0,364,365,
        5,61,0,0,365,366,5,62,0,0,366,78,1,0,0,0,367,368,5,100,0,0,368,369,
        5,47,0,0,369,370,5,100,0,0,370,371,5,116,0,0,371,80,1,0,0,0,372,
        373,5,45,0,0,373,374,5,62,0,0,374,82,1,0,0,0,375,376,5,85,0,0,376,
        84,1,0,0,0,377,378,5,82,0,0,378,86,1,0,0,0,379,380,5,91,0,0,380,
        381,5,93,0,0,381,88,1,0,0,0,382,383,5,60,0,0,383,384,5,62,0,0,384,
        90,1,0,0,0,385,386,5,123,0,0,386,92,1,0,0,0,387,388,5,125,0,0,388,
        94,1,0,0,0,389,390,5,58,0,0,390,96,1,0,0,0,391,392,5,59,0,0,392,
        98,1,0,0,0,393,394,5,40,0,0,394,100,1,0,0,0,395,396,5,41,0,0,396,
        102,1,0,0,0,397,398,5,91,0,0,398,104,1,0,0,0,399,400,5,93,0,0,400,
        106,1,0,0,0,401,402,5,44,0,0,402,108,1,0,0,0,403,404,5,64,0,0,404,
        110,1,0,0,0,405,406,7,0,0,0,406,112,1,0,0,0,407,408,3,39,19,0,408,
        409,3,5,2,0,409,114,1,0,0,0,410,412,3,39,19,0,411,410,1,0,0,0,411,
        412,1,0,0,0,412,414,1,0,0,0,413,415,3,111,55,0,414,413,1,0,0,0,415,
        416,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,424,1,0,0,0,418,
        420,5,46,0,0,419,421,3,111,55,0,420,419,1,0,0,0,421,422,1,0,0,0,
        422,420,1,0,0,0,422,423,1,0,0,0,423,425,1,0,0,0,424,418,1,0,0,0,
        424,425,1,0,0,0,425,435,1,0,0,0,426,428,7,1,0,0,427,429,7,2,0,0,
        428,427,1,0,0,0,428,429,1,0,0,0,429,431,1,0,0,0,430,432,3,111,55,
        0,431,430,1,0,0,0,432,433,1,0,0,0,433,431,1,0,0,0,433,434,1,0,0,
        0,434,436,1,0,0,0,435,426,1,0,0,0,435,436,1,0,0,0,436,116,1,0,0,
        0,437,438,7,3,0,0,438,118,1,0,0,0,439,440,7,4,0,0,440,120,1,0,0,
        0,441,442,5,116,0,0,442,122,1,0,0,0,443,446,3,117,58,0,444,446,3,
        119,59,0,445,443,1,0,0,0,445,444,1,0,0,0,446,447,1,0,0,0,447,445,
        1,0,0,0,447,448,1,0,0,0,448,454,1,0,0,0,449,453,3,117,58,0,450,453,
        3,119,59,0,451,453,3,111,55,0,452,449,1,0,0,0,452,450,1,0,0,0,452,
        451,1,0,0,0,453,456,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,0,455,
        124,1,0,0,0,456,454,1,0,0,0,457,460,7,5,0,0,458,460,3,111,55,0,459,
        457,1,0,0,0,459,458,1,0,0,0,460,461,1,0,0,0,461,459,1,0,0,0,461,
        462,1,0,0,0,462,126,1,0,0,0,463,464,3,123,61,0,464,465,5,40,0,0,
        465,466,5,48,0,0,466,467,5,41,0,0,467,128,1,0,0,0,468,469,3,123,
        61,0,469,470,5,39,0,0,470,130,1,0,0,0,471,473,7,6,0,0,472,471,1,
        0,0,0,473,474,1,0,0,0,474,472,1,0,0,0,474,475,1,0,0,0,475,478,1,
        0,0,0,476,478,3,133,66,0,477,472,1,0,0,0,477,476,1,0,0,0,478,479,
        1,0,0,0,479,480,6,65,0,0,480,132,1,0,0,0,481,485,5,35,0,0,482,484,
        8,7,0,0,483,482,1,0,0,0,484,487,1,0,0,0,485,483,1,0,0,0,485,486,
        1,0,0,0,486,502,1,0,0,0,487,485,1,0,0,0,488,489,5,39,0,0,489,490,
        5,39,0,0,490,491,5,39,0,0,491,495,1,0,0,0,492,494,9,0,0,0,493,492,
        1,0,0,0,494,497,1,0,0,0,495,496,1,0,0,0,495,493,1,0,0,0,496,498,
        1,0,0,0,497,495,1,0,0,0,498,499,5,39,0,0,499,500,5,39,0,0,500,502,
        5,39,0,0,501,481,1,0,0,0,501,488,1,0,0,0,502,134,1,0,0,0,29,0,147,
        164,184,236,314,325,339,347,353,362,411,416,422,424,428,433,435,
        445,447,452,454,459,461,474,477,485,495,501,1,6,0,0
    ]

class modelLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    TRUE = 1
    FALSE = 2
    INFTY = 3
    COMPARE_OP = 4
    EQUAL = 5
    NEQ = 6
    FUNC_OP = 7
    PLUS = 8
    MINUS = 9
    MULTIPLY = 10
    POWER = 11
    DIVIDE = 12
    MODE = 13
    INVT = 14
    FLOW = 15
    JUMP = 16
    REACH = 17
    GOAL = 18
    INIT = 19
    PROP = 20
    CONST = 21
    BOOL = 22
    INT = 23
    REAL = 24
    BOOL_AND = 25
    BOOL_OR = 26
    NOT = 27
    JUMP_ARROW = 28
    DIFF = 29
    IMP = 30
    UNTIL = 31
    RELEASE = 32
    GLOBAL = 33
    FINAL = 34
    LCURLY = 35
    RCURLY = 36
    COLON = 37
    SEMICOLON = 38
    LPAREN = 39
    RPAREN = 40
    LBRACK = 41
    RBRACK = 42
    COMMA = 43
    LABEL = 44
    NINFTY = 45
    VALUE = 46
    TIME = 47
    VARIABLE = 48
    ID = 49
    INITIALVAL = 50
    NEXT_VAR = 51
    WS = 52

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'inf'", "'='", "'!='", "'+'", "'-'", "'*'", "'**'", "'/'", 
            "'mode'", "'inv'", "'flow'", "'jump'", "'reach'", "'goal'", 
            "'init'", "'proposition'", "'const'", "'=>'", "'d/dt'", "'->'", 
            "'U'", "'R'", "'[]'", "'<>'", "'{'", "'}'", "':'", "';'", "'('", 
            "')'", "'['", "']'", "','", "'@'", "'t'" ]

    symbolicNames = [ "<INVALID>",
            "TRUE", "FALSE", "INFTY", "COMPARE_OP", "EQUAL", "NEQ", "FUNC_OP", 
            "PLUS", "MINUS", "MULTIPLY", "POWER", "DIVIDE", "MODE", "INVT", 
            "FLOW", "JUMP", "REACH", "GOAL", "INIT", "PROP", "CONST", "BOOL", 
            "INT", "REAL", "BOOL_AND", "BOOL_OR", "NOT", "JUMP_ARROW", "DIFF", 
            "IMP", "UNTIL", "RELEASE", "GLOBAL", "FINAL", "LCURLY", "RCURLY", 
            "COLON", "SEMICOLON", "LPAREN", "RPAREN", "LBRACK", "RBRACK", 
            "COMMA", "LABEL", "NINFTY", "VALUE", "TIME", "VARIABLE", "ID", 
            "INITIALVAL", "NEXT_VAR", "WS" ]

    ruleNames = [ "TRUE", "FALSE", "INFTY", "GT", "GTE", "LT", "LTE", "COMPARE_OP", 
                  "EQUAL", "NEQ", "OP_SIN", "OP_COS", "OP_TAN", "OP_ARCSIN", 
                  "OP_ARCCOS", "OP_ARCTAN", "OP_SQRT", "FUNC_OP", "PLUS", 
                  "MINUS", "MULTIPLY", "POWER", "DIVIDE", "MODE", "INVT", 
                  "FLOW", "JUMP", "REACH", "GOAL", "INIT", "PROP", "CONST", 
                  "BOOL", "INT", "REAL", "BOOL_AND", "BOOL_OR", "NOT", "JUMP_ARROW", 
                  "DIFF", "IMP", "UNTIL", "RELEASE", "GLOBAL", "FINAL", 
                  "LCURLY", "RCURLY", "COLON", "SEMICOLON", "LPAREN", "RPAREN", 
                  "LBRACK", "RBRACK", "COMMA", "LABEL", "DIGIT", "NINFTY", 
                  "VALUE", "LOWERCASE", "UPPERCASE", "TIME", "VARIABLE", 
                  "ID", "INITIALVAL", "NEXT_VAR", "WS", "COMMENT" ]

    grammarFileName = "model.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


