# Generated from ./config/config.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,158,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,
        1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,3,12,94,8,12,1,12,4,12,97,8,12,11,12,12,12,98,1,12,
        1,12,4,12,103,8,12,11,12,12,12,104,3,12,107,8,12,1,12,1,12,3,12,
        111,8,12,1,12,4,12,114,8,12,11,12,12,12,115,3,12,118,8,12,1,13,1,
        13,1,13,4,13,123,8,13,11,13,12,13,124,1,14,4,14,128,8,14,11,14,12,
        14,129,1,14,3,14,133,8,14,1,14,1,14,1,15,1,15,5,15,139,8,15,10,15,
        12,15,142,9,15,1,15,1,15,1,15,1,15,1,15,5,15,149,8,15,10,15,12,15,
        152,9,15,1,15,1,15,1,15,3,15,157,8,15,1,150,0,16,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,0,25,12,27,13,29,14,31,0,
        1,0,6,1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,4,0,45,45,65,90,
        95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,170,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,33,1,0,0,0,3,41,1,0,0,0,5,
        58,1,0,0,0,7,68,1,0,0,0,9,76,1,0,0,0,11,78,1,0,0,0,13,80,1,0,0,0,
        15,82,1,0,0,0,17,84,1,0,0,0,19,86,1,0,0,0,21,88,1,0,0,0,23,90,1,
        0,0,0,25,93,1,0,0,0,27,122,1,0,0,0,29,132,1,0,0,0,31,156,1,0,0,0,
        33,34,5,114,0,0,34,35,5,117,0,0,35,36,5,110,0,0,36,37,5,45,0,0,37,
        38,5,97,0,0,38,39,5,108,0,0,39,40,5,108,0,0,40,2,1,0,0,0,41,42,5,
        114,0,0,42,43,5,117,0,0,43,44,5,110,0,0,44,45,5,45,0,0,45,46,5,108,
        0,0,46,47,5,97,0,0,47,48,5,98,0,0,48,49,5,101,0,0,49,50,5,108,0,
        0,50,51,5,101,0,0,51,52,5,100,0,0,52,53,5,45,0,0,53,54,5,111,0,0,
        54,55,5,110,0,0,55,56,5,108,0,0,56,57,5,121,0,0,57,4,1,0,0,0,58,
        59,5,109,0,0,59,60,5,97,0,0,60,61,5,110,0,0,61,62,5,100,0,0,62,63,
        5,97,0,0,63,64,5,116,0,0,64,65,5,111,0,0,65,66,5,114,0,0,66,67,5,
        121,0,0,67,6,1,0,0,0,68,69,5,101,0,0,69,70,5,120,0,0,70,71,5,116,
        0,0,71,72,5,101,0,0,72,73,5,110,0,0,73,74,5,100,0,0,74,75,5,115,
        0,0,75,8,1,0,0,0,76,77,5,123,0,0,77,10,1,0,0,0,78,79,5,125,0,0,79,
        12,1,0,0,0,80,81,5,40,0,0,81,14,1,0,0,0,82,83,5,41,0,0,83,16,1,0,
        0,0,84,85,5,44,0,0,85,18,1,0,0,0,86,87,5,34,0,0,87,20,1,0,0,0,88,
        89,5,61,0,0,89,22,1,0,0,0,90,91,7,0,0,0,91,24,1,0,0,0,92,94,5,45,
        0,0,93,92,1,0,0,0,93,94,1,0,0,0,94,96,1,0,0,0,95,97,3,23,11,0,96,
        95,1,0,0,0,97,98,1,0,0,0,98,96,1,0,0,0,98,99,1,0,0,0,99,106,1,0,
        0,0,100,102,5,46,0,0,101,103,3,23,11,0,102,101,1,0,0,0,103,104,1,
        0,0,0,104,102,1,0,0,0,104,105,1,0,0,0,105,107,1,0,0,0,106,100,1,
        0,0,0,106,107,1,0,0,0,107,117,1,0,0,0,108,110,7,1,0,0,109,111,7,
        2,0,0,110,109,1,0,0,0,110,111,1,0,0,0,111,113,1,0,0,0,112,114,3,
        23,11,0,113,112,1,0,0,0,114,115,1,0,0,0,115,113,1,0,0,0,115,116,
        1,0,0,0,116,118,1,0,0,0,117,108,1,0,0,0,117,118,1,0,0,0,118,26,1,
        0,0,0,119,123,7,3,0,0,120,123,3,23,11,0,121,123,2,46,47,0,122,119,
        1,0,0,0,122,120,1,0,0,0,122,121,1,0,0,0,123,124,1,0,0,0,124,122,
        1,0,0,0,124,125,1,0,0,0,125,28,1,0,0,0,126,128,7,4,0,0,127,126,1,
        0,0,0,128,129,1,0,0,0,129,127,1,0,0,0,129,130,1,0,0,0,130,133,1,
        0,0,0,131,133,3,31,15,0,132,127,1,0,0,0,132,131,1,0,0,0,133,134,
        1,0,0,0,134,135,6,14,0,0,135,30,1,0,0,0,136,140,5,35,0,0,137,139,
        8,5,0,0,138,137,1,0,0,0,139,142,1,0,0,0,140,138,1,0,0,0,140,141,
        1,0,0,0,141,157,1,0,0,0,142,140,1,0,0,0,143,144,5,39,0,0,144,145,
        5,39,0,0,145,146,5,39,0,0,146,150,1,0,0,0,147,149,9,0,0,0,148,147,
        1,0,0,0,149,152,1,0,0,0,150,151,1,0,0,0,150,148,1,0,0,0,151,153,
        1,0,0,0,152,150,1,0,0,0,153,154,5,39,0,0,154,155,5,39,0,0,155,157,
        5,39,0,0,156,136,1,0,0,0,156,143,1,0,0,0,157,32,1,0,0,0,15,0,93,
        98,104,106,110,115,117,122,124,129,132,140,150,156,1,6,0,0
    ]

class configLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    RUNALL = 1
    RUNLABELED = 2
    MANDATORY = 3
    EXTENDS = 4
    LCURLY = 5
    RCURLY = 6
    LTUPLE = 7
    RTUPLE = 8
    COMMA = 9
    QUOTE = 10
    EQ = 11
    NUMBER = 12
    VALUE = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'run-all'", "'run-labeled-only'", "'mandatory'", "'extends'", 
            "'{'", "'}'", "'('", "')'", "','", "'\"'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "RUNALL", "RUNLABELED", "MANDATORY", "EXTENDS", "LCURLY", "RCURLY", 
            "LTUPLE", "RTUPLE", "COMMA", "QUOTE", "EQ", "NUMBER", "VALUE", 
            "WS" ]

    ruleNames = [ "RUNALL", "RUNLABELED", "MANDATORY", "EXTENDS", "LCURLY", 
                  "RCURLY", "LTUPLE", "RTUPLE", "COMMA", "QUOTE", "EQ", 
                  "DIGIT", "NUMBER", "VALUE", "WS", "COMMENT" ]

    grammarFileName = "config.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


