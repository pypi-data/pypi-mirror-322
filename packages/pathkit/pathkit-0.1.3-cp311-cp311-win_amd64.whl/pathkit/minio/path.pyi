import datetime
from minio import Minio
from pathkit.base import BasePath as BasePath, Local as Local, retry as retry
from pathkit.config import EnvConfig as EnvConfig
from typing import Any, Generator

class MinIOPath(BasePath):
    _section = ("minio",)
    _creator = Minio
    client: Minio
    @property
    def bucket_name(self) -> str: ...
    @property
    def bucket_exists(self) -> bool: ...
    def create_bucket(self) -> None: ...
    @property
    def exists(self) -> bool: ...
    def is_dir(self) -> bool: ...
    def read(self) -> bytes: ...
    def write(self, data: bytes) -> None: ...
    def upload(self, local_path: str) -> None: ...
    def delete(self, recursive: bool = True) -> None: ...
    def mkdir(self) -> None: ...
    def glob(self, pattern: str = '*') -> Generator['MinIOPath', Any, Any]: ...
    @property
    def mtime(self) -> datetime.datetime: ...
    def __str__(self) -> str: ...
    def __hash__(self) -> int: ...
