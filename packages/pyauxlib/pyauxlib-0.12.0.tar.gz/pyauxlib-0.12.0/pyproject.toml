[tool.poetry]
name = "pyauxlib"
version = "0.12.0"
description = "Python library designed to provide auxiliary functionalities that can enhance your Python project."
authors = ["Pablo Solís-Fernández <psolsfer@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/psolsfer/pyauxlib"
repository = "https://github.com/psolsfer/pyauxlib"
documentation = "https://pyauxlib.readthedocs.io"
keywords = ["pyauxlib"]
license = "BSD-3-Clause"
# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    'License :: OSI Approved :: BSD License',
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [
    { include = "pyauxlib", from = "src" },
#    { include = "tests", format = "sdist" },
]
include = [
#    "AUTHORS.md",
#    "CONTRIBUTING.md",
#    "HISTORY.md",
#    "LICENSE",
#    "py.typed",
#    "README.md",
#    "tests/**/*",
#    "docs/**/*.{md,py,jpg,png,gif}",
]
exclude = [
    "**/__pycache__",
    "**/*.py[co]",
]

[build-system]  # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]  # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump(release): v$current_version → v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.12.0"
version_files = [
    "pyproject.toml:version",
    "src/pyauxlib/__init__.py:__version__"
    ]

[tool.poetry.dependencies] # https://python-poetry.org/docs/dependency-specification/
chardet = { version = "^5", optional = true }
python = ">=3.10,<3.14"
pydantic = ">=2.4.0"
ruamel-yaml = "^0"
wrapt = ">=1.15"

[tool.poetry.extras] # https://python-poetry.org/docs/pyproject/#extras
chardet = ["chardet"]

[tool.poetry.group.dev.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
pip = ">=23"
invoke = ">=2.2"
wheel = ">=0.41.2"
watchdog = ">=3.0.0"
tox = ">=4.11"
tox-gh-actions = "^3"
mkdocs = ">=1.5.3"
mkdocstrings = { extras = ["python"], version = ">=0.23.0" }
mkdocs-material = ">=9.4.2"
mkdocs-material-extensions = ">=1.2"
mkdocs-include-markdown-plugin = ">=6.0"
mkdocs-awesome-pages-plugin = ">=2.9.2"
mypy = ">=1.6.0"
pytest = { extras = ["toml"], version = ">=7.4.2" }
pytest-cov = ">=4.1.0"
coverage = ">=7.3.1"
pre-commit = ">=3.3.1"
ruff = ">=0.1"
safety = ">=2.3.4, !=2.3.5"
typeguard = ">=4.1.5"
commitizen = ">=3.10"

[tool.poetry.group.test.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
commitizen = ">=3.10"
coverage = { extras = ["toml"], version = ">=7.3.1" }
mypy = ">=1.6.0"
pre-commit = ">=3.3.1"
pytest = ">=7.4.2"
pytest-cov = ">=4.1.0"
pytest-clarity = ">=1.0.1"
pytest-mock = ">=3.10.0"
pytest-xdist = ">=3.3.1"
ruff = ">=0.0.290"
safety = ">=2.3.4, !=2.3.5"
typeguard = ">=4.1.5"

[tool.poetry.group.docs]
# https://python-poetry.org/docs/managing-dependencies/#optional-groups
# https://docs.readthedocs.io/en/stable/build-customization.html#install-dependencies-with-poetry
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.5.3"
mkdocstrings = { extras = ["python"], version = ">=0.23.0" }
mkdocs-material = ">=9.4.2"
mkdocs-material-extensions = ">=1.2"
mkdocs-include-markdown-plugin = ">=6.0"
mkdocs-awesome-pages-plugin = ">=2.9.2"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
plugins = "pydantic.mypy"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pydantic-mypy]  # https://pydantic-docs.helpmanual.io/mypy_plugin/#configuring-the-plugin
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 0 # Set the desired threshold for the coverage report to fail
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src/pyauxlib"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=pyauxlib --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src/pyauxlib", "tests"]
xfail_strict = true

[tool.ruff]  # https://github.com/charliermarsh/ruff
fix = true
line-length = 100
target-version = "py310"

[tool.ruff.lint]
ignore = ["E501", "S307", "RET504", "S101", "PT001", "ISC001"]
select = ["A", "ASYNC", "B", "BLE", "C4", "C90", "D", "DTZ", "E", "EM", "ERA", "F", "FLY", "G", "I", "ICN", "INP", "ISC", "N", "NPY", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "S", "SIM", "SLF", "T10", "T20", "TCH", "TID", "TRY", "UP", "W", "YTT"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
line-ending = "auto"
