C:\Python310\python -m venv C:\VirtualEnvs\owslib
C:\VirtualEnvs\owslib\Scripts\activate.ps1
cd D:\GitHub\OWSLib
pip install -r requirements.txt
pip install -r requirements-dev.txt

pip install -e .
flake8 owslib

python -m pytest

# specific file

python -m pytest tests/test_wps_response6.py

python -m pytest tests/test_iso3_parsing.py::

python -m pytest -k "test_xmlfilter_wfs_110"

OR add a call to the function on the test page (in this case test_wfs_generic.py) and run from command line:

import logging
owslib_logger = logging.getLogger('owslib')
# Add formatting and handlers as needed
owslib_logger.setLevel(logging.DEBUG)
test_xmlfilter_wfs_110()

python D:\GitHub\OWSLib\tests\test_wfs_generic.py

## Release

C:\VirtualEnvs\owslib\Scripts\activate.ps1
cd D:\GitHub\OWSLib
# update version in owslib/__init__.py manually
# when switching back to dev we always go a point release higher
# so we may go from  '0.30.dev0' to '0.32.1'
git commit -m 'update release version' owslib/__init__.py
# push changes
git push origin master
git tag -a 0.32.1 -m 'tagging OWSLib release 0.32.1'
# push tag
git push --tags
# update on PyPI (must be a maintainer)

Remove-Item -Recurse -Force build
Remove-Item -Recurse -Force dist
Remove-Item -Force *.egg-info

python setup.py sdist bdist_wheel --universal
twine upload dist/*

# now switch back to dev
git commit -m 'back to dev' owslib/__init__.py
git push origin master



## Testing

pytest 