---
# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - formatting
  - build
  #  - test
  - deploy

# Make sure all C++ code is formatted
formatting:
  stage: formatting
  image: python:3.11
  script:
    - apt update
    - apt install -y clang-format
    - clang-format -Werror -n src/*.cpp includes/*.h
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# Try to build the Python module and docs
build-python:
  stage: build
  image: python:3.11
  script:
    - apt update
    - apt install -y pybind11-json-dev nox doxygen
    - doxygen
    - nox -rs docs-build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

build-python-manylinux:
  stage: build
  image: quay.io/pypa/manylinux_2_34_x86_64
  script:
    - /opt/python/cp310-cp310/bin/python3 -m build
    - /opt/python/cp311-cp311/bin/python3 -m build
    - /opt/python/cp312-cp312/bin/python3 -m build
    - /opt/python/cp313-cp313/bin/python3 -m build
    - auditwheel repair dist/*.whl
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  artifacts:
    paths:
      - dist/*.tar.gz
      - wheelhouse/

deploy-python-wheels:
  stage: deploy
  image: python:3.11
  needs: ["build-python-manylinux"]
  id_tokens:
    PYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: pypi
  script:
    # Taken from: https://docs.pypi.org/trusted-publishers/using-a-publisher/#gitlab-cicd
    # Install dependencies
    - apt-get update && apt-get install -y jq
    - python -m pip install -U twine id

    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(python -m id PYPI)
    # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    # Upload to PyPI authenticating via the newly-minted token
    # Add "--repository testpypi" if uploading to TestPyPI
    - twine upload -u __token__ -p "${api_token}" wheelhouse/*.whl dist/*.tar.gz
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

# Try to build the C++ library
build-cpp:
  stage: build
  image: python:3.11
  script:
    - apt update
    - apt install -y libopencv-dev meson nlohmann-json3-dev
    - meson setup build -Dpython=false
    - meson compile -C build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


docs:
  stage: deploy
  image: python:3.11
  script:
    - apt update
    - apt install -y doxygen nox pybind11-json-dev
    - doxygen
      # This also builds the Python module.
    - nox -rs docs-build
  artifacts:
    paths:
      - docs/_build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

pages:
  stage: deploy
  image: alpine
  needs: ["docs"]
  script:
    #pages requires the artifacts to be in 'public/'
    - mv docs/_build public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
