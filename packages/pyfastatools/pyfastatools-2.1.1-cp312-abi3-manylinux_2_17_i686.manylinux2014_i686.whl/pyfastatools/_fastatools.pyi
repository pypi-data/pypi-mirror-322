from typing import List

class Record:
    name: str
    desc: str
    seq: str
    def __init__(self, name: str, desc: str, seq: str) -> None: ...
    def empty(self) -> bool: ...
    def clear(self) -> None: ...
    def to_string(self) -> str: ...
    def header(self) -> str: ...
    def __eq__(self, other: Record) -> bool: ...
    def __ne__(self, other: Record) -> bool: ...

class Records(List[Record]): ...

class Parser:
    def __init__(self, filename: str) -> None: ...
    def __iter__(self) -> "Parser": ...
    def __next__(self) -> Record: ...
    def has_next(self) -> bool: ...
    def all(self) -> Records: ...
    def take(self, n: int) -> Records: ...
    def refresh(self) -> None: ...
    def next(self) -> Record: ...
    def py_next(self) -> Record: ...
