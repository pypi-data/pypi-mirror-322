[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "argumentative"
dynamic = ["version"]
description = 'opinionated, simple arg parsing'
readme = "README.md"
requires-python = ">=3.10"
license = "LicenseRef-Hippocratic-3.0-BDS-CL-Eco-Extr-Law-Mil-SV"
keywords = []
authors = [
  { name = "fizz~", email = "fizzarolli@riseup.net" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "msgspec",
  "libcst"
]

[project.urls]
Documentation = "https://github.com/allura-org/argumentative#readme"
Issues = "https://github.com/allura-org/argumentative/issues"
Source = "https://github.com/allura-org/argumentative"

[tool.hatch.version]
path = "src/argumentative/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/argumentative tests}"

[tool.coverage.run]
source_pkgs = ["argumentative", "tests"]
branch = true
parallel = true
omit = [
  "src/argumentative/__about__.py",
]

[tool.coverage.paths]
argumentative = ["src/argumentative", "*/argumentative/src/argumentative"]
tests = ["tests", "*/argumentative/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.build.targets.sdist]
include = [
  "/src",
  "/examples",
  "/tests"
]

[tool.hatch.build.targets.wheel]
packages = ["src/argumentative"]