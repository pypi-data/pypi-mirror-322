from _typeshed import Incomplete
from pandas import DataFrame as pdDataFrame
from ydata.dataset import Dataset as Dataset
from ydata.metadata import Metadata as Metadata
from ydata.report.reports.report_type import ReportType

class SyntheticDataMetrics:
    creation_date: Incomplete
    target: Incomplete
    data_types: Incomplete
    metadata: Incomplete
    anonymized_cols: Incomplete
    safe_mode: Incomplete
    stats_summary: Incomplete
    non_anonymized_cols: Incomplete
    entity_cols: Incomplete
    def __init__(self, real: Dataset, synth: Dataset, data_types: dict, anonymized_cols: list[str], safe_mode: bool = True, training_data: Dataset | None = None, target: str | None = None, report_type: ReportType | str = ..., metadata: Metadata = None) -> None: ...
    def get_utility_metrics(self, real: pdDataFrame, synth: pdDataFrame, training_data: pdDataFrame | None = None): ...
    def get_fidelity_metrics(self, real: pdDataFrame, synth: pdDataFrame, training_data: pdDataFrame | None = None): ...
    def get_privacy_metrics(self, real: pdDataFrame, synth: pdDataFrame, training_data: pdDataFrame | None = None): ...
    def get_info_metrics(self): ...
    def get_anonymized_metrics(self): ...
    def get_percentage_failed_metrics(self, privacy: dict, fidelity: dict, utility: dict): ...
    def get_percentage_failed(self, metrics: dict): ...
    def get_error_logs(self, metrics: dict): ...
    def evaluate(self): ...
