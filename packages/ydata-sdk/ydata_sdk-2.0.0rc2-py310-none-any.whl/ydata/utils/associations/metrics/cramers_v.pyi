from numpy import array as array, ndarray as ndarray
from pandas import Series as pdSeries

def crosstab_by_factorization(col1, col2, sparse: bool = False): ...
def compute_chi_squared_based_values(col1: pdSeries, col2: pdSeries) -> tuple[tuple[int, int], float, int]: ...
def compute_cramers_v(cross_t_shape: tuple[int, int], chi2: float, sample_size: int) -> float: ...
def compute_num_num_adjusted_cramers_v(cross_t_shape: tuple[int, int], chi2: float, sample_size: int) -> float: ...
def compute_adjusted_cramers_v(cross_t_shape: tuple[int, int], chi2: float, sample_size: int) -> float: ...
def corrected_values(phi2: float, r: int, c: int, sample_size: int) -> tuple[float, int, int]: ...
def calculate_contingency_table(col1: pdSeries, col2: pdSeries) -> ndarray: ...
def calculate_chi_squared(contingency_table: ndarray) -> float: ...
