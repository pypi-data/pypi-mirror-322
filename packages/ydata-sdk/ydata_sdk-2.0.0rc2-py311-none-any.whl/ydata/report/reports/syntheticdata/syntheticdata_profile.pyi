from _typeshed import Incomplete
from ydata.datascience.common import PrivacyLevel
from ydata.dataset import Dataset as Dataset
from ydata.metadata import Metadata
from ydata.metadata.column import Column
from ydata.report.reports.report_type import ReportType

class SyntheticDataProfile:
    MIN_ROWS: int
    LOW_ROWS: int
    METRIC_ERROR_VALUE: Incomplete
    SCORE_TO_LABEL: Incomplete
    report_type: Incomplete
    safe_mode: Incomplete
    anonymized_cols: Incomplete
    creation_date: Incomplete
    css: Incomplete
    def __init__(self, real: Dataset, synth: Dataset, metadata: Metadata, privacy_level: PrivacyLevel | int = ..., report_type: ReportType | str = ..., safe_mode: bool = True, data_types: dict | None = None, training_data: Dataset | None = None, target: str | Column | None = None, anonymized_cols: list[str] | None = None, synth_name: str | None = None) -> None: ...
    @property
    def report_status(self): ...
    def get_all_metrics(self): ...
    def get_summary(self): ...
    def get_fidelity_metrics(self): ...
    def get_utility_metrics(self): ...
    def get_privacy_metrics(self): ...
    def generate_report(self, output_path: str = './ydata-report.pdf') -> None: ...
    def display_notebook(self) -> None: ...
