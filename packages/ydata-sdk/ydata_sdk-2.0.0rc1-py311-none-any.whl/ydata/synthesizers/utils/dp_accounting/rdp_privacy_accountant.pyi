from _typeshed import Incomplete
from typing import Sequence

def compute_delta(orders: Sequence[float], rdp: Sequence[float], epsilon: float) -> tuple[float, int]: ...
def compute_epsilon(orders: Sequence[float], rdp: Sequence[float], delta: float) -> tuple[float, int]: ...

class RdpAccountant:
    DEFAULT_RDP_ORDERS: Incomplete
    def __init__(self, orders: Sequence[float] | None = None) -> None: ...
    def compose_gaussian_dp_event(self, noise_multiplier): ...
    def get_epsilon(self, target_delta: float) -> float: ...
    def get_delta(self, target_epsilon: float) -> float: ...
