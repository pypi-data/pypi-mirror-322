import numpy as np
from _typeshed import Incomplete

def rotation_factory(rotation: str, X: np.ndarray, random_state: int = 42, max_iter: Incomplete | None = None): ...

class ICARotation:
    name: str
    estimator: Incomplete
    def __init__(self, X: np.ndarray, random_state: int = 123, max_iter: int = 10, **kwargs) -> None: ...
    def forward(self, X): ...
    def inverse(self, Z): ...
    def gradient(self, X): ...

class PCARotation:
    name: str
    estimator: Incomplete
    def __init__(self, X: np.ndarray, **kwargs) -> None: ...
    def forward(self, X): ...
    def inverse(self, Z): ...
    def gradient(self, X): ...

class RandomRotation:
    name: str
    rand_ortho_matrix: Incomplete
    def __init__(self, X: np.ndarray, **kwargs) -> None: ...
    def forward(self, X): ...
    def inverse(self, Z): ...
    def gradient(self, X): ...
