from _typeshed import Incomplete
from dask.dataframe import DataFrame as DataFrame
from typing import Literal
from ydata.dataset import Dataset
from ydata.metadata import Metadata
from ydata.utils.random import RandomSeed as RandomSeed

def check_unique_index(dataset: DataFrame): ...

class Holdout:
    uuid: Incomplete
    def __init__(self, fraction: float = 0.2) -> None: ...
    def get_split(self, X: Dataset, metadata: Metadata | None = None, random_state: RandomSeed = None, strategy: Literal['random', 'stratified'] = 'random') -> tuple: ...
    @property
    def holdout_def(self): ...
    def save(self, path: str): ...
    @classmethod
    def load(cls, path: str): ...
    def __len__(self) -> int: ...
