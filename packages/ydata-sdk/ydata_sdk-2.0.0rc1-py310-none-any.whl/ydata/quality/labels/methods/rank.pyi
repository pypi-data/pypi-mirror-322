import numpy as np
from enum import Enum

def get_self_confidence_for_each_label(labels: np.ndarray, pred_probs: np.ndarray) -> np.ndarray: ...
def get_normalized_margin_for_each_label(labels: np.ndarray, pred_probs: np.ndarray) -> np.ndarray: ...
def get_confidence_weighted_entropy_for_each_label(labels: np.ndarray, pred_probs: np.ndarray) -> np.ndarray: ...

class RankedBy(Enum):
    DEFAULT = ('default', None)
    SELF_CONFIDENCE = ...
    NORMALIZED_MARGIN = ...
    CONFIDENCE_WEIGHTED_ENTROPY = ...
    @classmethod
    def from_value(cls, value): ...
    @property
    def function(self): ...

def get_label_quality_scores(labels: np.ndarray, pred_probs: np.ndarray, *, method: RankedBy = ..., adjust_pred_probs: bool = False) -> np.ndarray: ...
def order_label_issues(label_issues_mask: np.ndarray, labels: np.ndarray, pred_probs: np.ndarray, *, rank_by: RankedBy = ..., adjust_pred_probs: bool = False) -> np.ndarray: ...
