[project]
name = "peblar"
version = "0.4.0"
license = { text = "MIT License" }
description = "Asynchronous Python client for Peblar EV chargers."
authors = [{ name = "Franck Nijhof", email = "opensource@frenck.dev"}]
maintainers = [{ name = "Franck Nijhof", email = "opensource@frenck.dev"}]
readme = "README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
  "bluebuilt",
  "charger",
  "chargers",
  "ev",
  "hybrid",
  "ocpp",
  "peblar",
]
requires-python = ">=3.11"
dependencies = [
  "aiohttp>=3.0.0",
  "awesomeversion>=22.8.0",
  "backoff>=2.2.1",
  "mashumaro>=3.10",
  "orjson>=3.9.8",
  "yarl>=1.6.0",
]

[project.optional-dependencies]
cli = [
  "typer>=0.15.1",
  "zeroconf>=0.126.0",
]

[project.scripts]
peblar = "peblar.cli:cli"

[project.urls]
Changelog = "https://github.com/frenck/python-peblar/releases"
Issues = "https://github.com/frenck/python-peblar/issues"
Repository = "https://github.com/frenck/python-peblar"

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["peblar"]

[tool.coverage.report]
show_missing = true
fail_under = 50
omit = ["src/peblar/cli/*"]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pylint.MASTER]
extension-pkg-whitelist = [
  "orjson",
]
ignore = [
  "tests",
]

[tool.pylint.BASIC]
good-names = [
  "_",
  "ex",
  "fp",
  "i",
  "id",
  "j",
  "k",
  "on",
  "Run",
  "T",
]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "duplicate-code",
  "format",
  "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff.lint]
ignore = [
  "ANN401", # Opinioated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "D417", # False positives in some occasions
  "PLR2004", # Just annoying, not really useful

  # Conflicts with the Ruff formatter
  "COM812",
  "ISC001",
]
select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["peblar"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["mashumaro.mixins.orjson.DataClassORJSONMixin"]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.uv]
prerelease = "allow"
dev-dependencies = [
  "aresponses==3.0.0",
  "codespell==2.4.0",
  "covdefaults==2.3.0",
  "coverage[toml]==7.6.10",
  "mypy==1.14.1",
  "pre-commit==4.1.0",
  "pre-commit-hooks==5.0.0",
  "pylint==3.3.3",
  "pytest==8.3.4",
  "pytest-asyncio==0.25.2",
  "pytest-cov==6.0.0",
  "ruff==0.9.2",
  "syrupy==4.8.1",
  "yamllint==1.35.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
