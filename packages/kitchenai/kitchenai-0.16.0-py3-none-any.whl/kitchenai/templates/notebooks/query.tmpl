from kitchenai.contrib.kitchenai_sdk.schema import QuerySchema, QueryBaseResponseSchema
import asyncio

query_data = QuerySchema(
    query="Find documents related to AI in healthcare.",
    stream=False,
    metadata={"topic": "healthcare", "keyword": "AI"}
)

async def {{func_name}}(data: QuerySchema):
    """
    Query the vector database with a chat interface
    class QuerySchema(Schema):
        query: str
        stream: bool = False
        metadata: dict[str, str] | None = None
    Args:
        data: QuerySchema
    
    Response:
        QueryBaseResponseSchema:
            input: str | None = None
            output: str | None = None
            retrieval_context: list[str] | None = None
            metadata: dict[str, str] | None = None
    """
    # TODO: Implement the query logic

    return QueryBaseResponseSchema(output="Hello, how are you?", metadata={"topic": "healthcare", "keyword": "AI"})

async def run_query():
    response = await {{func_name}}(query_data)
    print("output:", response.output)
    print("metadata:", response.metadata)

asyncio.run(run_query())