import{b as c}from"./index.DGiyb8ll.js";const i=async(a="")=>{let o=null;const e=await fetch(`${c}/models/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return e},h=async(a="")=>{let o=null;const e=await fetch(`${c}/models/base`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return e},p=async(a,o)=>{let e=null;const t=await fetch(`${c}/models/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify(o)}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(e=r.detail,console.log(r),null));if(e)throw e;return t},d=async(a,o)=>{let e=null;const t=new URLSearchParams;t.append("id",o);const r=await fetch(`${c}/models/model?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return r},u=async(a,o)=>{let e=null;const t=new URLSearchParams;t.append("id",o);const r=await fetch(`${c}/models/model/toggle?${t.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return r},w=async(a,o,e)=>{let t=null;const r=new URLSearchParams;r.append("id",o);const n=await fetch(`${c}/models/model/update?${r.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify(e)}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).then(s=>s).catch(s=>(t=s,console.log(s),null));if(t)throw t;return n},j=async(a,o)=>{let e=null;const t=new URLSearchParams;t.append("id",o);const r=await fetch(`${c}/models/model/delete?${t.toString()}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n,console.log(n),null));if(e)throw e;return r},y=async a=>{let o=null;const e=await fetch(`${c}/models/delete/all`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return e};export{i as a,y as b,p as c,j as d,h as e,d as g,u as t,w as u};
//# sourceMappingURL=index.CBHyy2fp.js.map
