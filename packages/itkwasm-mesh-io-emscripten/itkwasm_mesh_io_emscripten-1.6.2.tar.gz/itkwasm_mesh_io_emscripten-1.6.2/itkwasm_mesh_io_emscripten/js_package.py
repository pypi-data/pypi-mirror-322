# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var hr=Object.defineProperty;var wr=(e,A)=>{for(var t in A)hr(e,t,{get:A[t],enumerable:!0})};var br=new Map([["vtk","vtk"],["byu","byu"],["fsa","free-surfer-ascii"],["fsb","free-surfer-binary"],["mz3","mz3"],["obj","obj"],["off","off"],["stl","stl"],["swc","swc"],["iwm","wasm"],["iwm.cbor","wasm"],["iwm.cbor.zst","wasm-zstd"]]),j=br;var Sr=new Map([["vtk","vtk"],["obj","obj"],["off","off"],["mz3","mz3"],["iwm","wasm"],["iwm.cbor","wasm"],["iwm.cbor.zst","wasm-zstd"]]),v=Sr;var Rr={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},W=Rr;var Dr={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},V=Dr;function kr(e,A){let t=null;switch(e){case W.UInt8:{t=new Uint8Array(A);break}case W.Int8:{t=new Int8Array(A);break}case W.UInt16:{t=new Uint16Array(A);break}case W.Int16:{t=new Int16Array(A);break}case W.UInt32:{t=new Uint32Array(A);break}case W.Int32:{t=new Int32Array(A);break}case W.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(A):t=new Uint8Array(A);break}case W.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(A):t=new Uint8Array(A);break}case V.Float32:{t=new Float32Array(A);break}case V.Float64:{t=new Float64Array(A);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var L=kr;function Fr(e){let A=e.slice((e.lastIndexOf(".")-1>>>0)+2);if(A.toLowerCase()==="gz"){let t=e.slice(0,-3).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="cbor"){let t=e.slice(0,-5).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zst"){let t=e.slice(0,-10).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}else if(A.toLowerCase()==="zip"){let t=e.slice(0,-4).lastIndexOf(".");A=e.slice((t-1>>>0)+2)}return A}var J=Fr;var Pr={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},g=Pr;var It=Symbol("Comlink.proxy"),Wr=Symbol("Comlink.endpoint"),Ve=Symbol("Comlink.releaseProxy"),ze=Symbol("Comlink.finalizer"),we=Symbol("Comlink.thrown"),pt=e=>typeof e=="object"&&e!==null||typeof e=="function",Ur={canHandle:e=>pt(e)&&e[It],serialize(e){let{port1:A,port2:t}=new MessageChannel;return gt(e,A),[t,[t]]},deserialize(e){return e.start(),Ze(e)}},Or={canHandle:e=>pt(e)&&we in e,serialize({value:e}){let A;return e instanceof Error?A={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:A={isError:!1,value:e},[A,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},ut=new Map([["proxy",Ur],["throw",Or]]);function Nr(e,A){for(let t of e)if(A===t||t==="*"||t instanceof RegExp&&t.test(A))return!0;return!1}function gt(e,A=globalThis,t=["*"]){A.addEventListener("message",function o(i){if(!i||!i.data)return;if(!Nr(t,i.origin)){console.warn(`Invalid origin '${i.origin}' for comlink proxy`);return}let{id:r,type:a,path:u}=Object.assign({path:[]},i.data),c=(i.data.argumentList||[]).map(z),I;try{let n=u.slice(0,-1).reduce((m,s)=>m[s],e),l=u.reduce((m,s)=>m[s],e);switch(a){case"GET":I=l;break;case"SET":n[u.slice(-1)[0]]=z(i.data.value),I=!0;break;case"APPLY":I=l.apply(n,c);break;case"CONSTRUCT":{let m=new l(...c);I=Gr(m)}break;case"ENDPOINT":{let{port1:m,port2:s}=new MessageChannel;gt(e,s),I=Xe(m,[m])}break;case"RELEASE":I=void 0;break;default:return}}catch(n){I={value:n,[we]:0}}Promise.resolve(I).catch(n=>({value:n,[we]:0})).then(n=>{let[l,m]=Re(n);A.postMessage(Object.assign(Object.assign({},l),{id:r}),m),a==="RELEASE"&&(A.removeEventListener("message",o),ft(A),ze in e&&typeof e[ze]=="function"&&e[ze]())}).catch(n=>{let[l,m]=Re({value:new TypeError("Unserializable return value"),[we]:0});A.postMessage(Object.assign(Object.assign({},l),{id:r}),m)})}),A.start&&A.start()}function Mr(e){return e.constructor.name==="MessagePort"}function ft(e){Mr(e)&&e.close()}function Ze(e,A){return _e(e,[],A)}function he(e){if(e)throw new Error("Proxy has been released and is not useable")}function ct(e){return Z(e,{type:"RELEASE"}).then(()=>{ft(e)})}var be=new WeakMap,Se="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let A=(be.get(e)||0)-1;be.set(e,A),A===0&&ct(e)});function xr(e,A){let t=(be.get(A)||0)+1;be.set(A,t),Se&&Se.register(e,A,e)}function Tr(e){Se&&Se.unregister(e)}function _e(e,A=[],t=function(){}){let o=!1,i=new Proxy(t,{get(r,a){if(he(o),a===Ve)return()=>{Tr(i),ct(e),o=!0};if(a==="then"){if(A.length===0)return{then:()=>i};let u=Z(e,{type:"GET",path:A.map(c=>c.toString())}).then(z);return u.then.bind(u)}return _e(e,[...A,a])},set(r,a,u){he(o);let[c,I]=Re(u);return Z(e,{type:"SET",path:[...A,a].map(n=>n.toString()),value:c},I).then(z)},apply(r,a,u){he(o);let c=A[A.length-1];if(c===Wr)return Z(e,{type:"ENDPOINT"}).then(z);if(c==="bind")return _e(e,A.slice(0,-1));let[I,n]=lt(u);return Z(e,{type:"APPLY",path:A.map(l=>l.toString()),argumentList:I},n).then(z)},construct(r,a){he(o);let[u,c]=lt(a);return Z(e,{type:"CONSTRUCT",path:A.map(I=>I.toString()),argumentList:u},c).then(z)}});return xr(i,e),i}function Lr(e){return Array.prototype.concat.apply([],e)}function lt(e){let A=e.map(Re);return[A.map(t=>t[0]),Lr(A.map(t=>t[1]))]}var mt=new WeakMap;function Xe(e,A){return mt.set(e,A),e}function Gr(e){return Object.assign(e,{[It]:!0})}function Re(e){for(let[A,t]of ut)if(t.canHandle(e)){let[o,i]=t.serialize(e);return[{type:"HANDLER",name:A,value:o},i]}return[{type:"RAW",value:e},mt.get(e)||[]]}function z(e){switch(e.type){case"HANDLER":return ut.get(e.name).deserialize(e.value);case"RAW":return e.value}}function Z(e,A,t){return new Promise(o=>{let i=Jr();e.addEventListener("message",function r(a){!a.data||!a.data.id||a.data.id!==i||(e.removeEventListener("message",r),o(a.data))}),e.start&&e.start(),e.postMessage(Object.assign({id:i},A),t)})}function Jr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function Ie(e,A){return function(){return e.apply(A,arguments)}}var{toString:Hr}=Object.prototype,{getPrototypeOf:AA}=Object,ke=(e=>A=>{let t=Hr.call(A);return e[t]||(e[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),N=e=>(e=e.toLowerCase(),A=>ke(A)===e),Fe=e=>A=>typeof A===e,{isArray:X}=Array,pe=Fe("undefined");function qr(e){return e!==null&&!pe(e)&&e.constructor!==null&&!pe(e.constructor)&&U(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}var Et=N("ArrayBuffer");function Yr(e){let A;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?A=ArrayBuffer.isView(e):A=e&&e.buffer&&Et(e.buffer),A}var Kr=Fe("string"),U=Fe("function"),yt=Fe("number"),Pe=e=>e!==null&&typeof e=="object",jr=e=>e===!0||e===!1,De=e=>{if(ke(e)!=="object")return!1;let A=AA(e);return(A===null||A===Object.prototype||Object.getPrototypeOf(A)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},vr=N("Date"),zr=N("File"),_r=N("Blob"),Vr=N("FileList"),Zr=e=>Pe(e)&&U(e.pipe),Xr=e=>{let A;return e&&(typeof FormData=="function"&&e instanceof FormData||U(e.append)&&((A=ke(e))==="formdata"||A==="object"&&U(e.toString)&&e.toString()==="[object FormData]"))},$r=N("URLSearchParams"),[eo,Ao,to,ro]=["ReadableStream","Request","Response","Headers"].map(N),oo=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function ue(e,A,{allOwnKeys:t=!1}={}){if(e===null||typeof e>"u")return;let o,i;if(typeof e!="object"&&(e=[e]),X(e))for(o=0,i=e.length;o<i;o++)A.call(null,e[o],o,e);else{let r=t?Object.getOwnPropertyNames(e):Object.keys(e),a=r.length,u;for(o=0;o<a;o++)u=r[o],A.call(null,e[u],u,e)}}function Qt(e,A){A=A.toLowerCase();let t=Object.keys(e),o=t.length,i;for(;o-- >0;)if(i=t[o],A===i.toLowerCase())return i;return null}var _=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,ht=e=>!pe(e)&&e!==_;function eA(){let{caseless:e}=ht(this)&&this||{},A={},t=(o,i)=>{let r=e&&Qt(A,i)||i;De(A[r])&&De(o)?A[r]=eA(A[r],o):De(o)?A[r]=eA({},o):X(o)?A[r]=o.slice():A[r]=o};for(let o=0,i=arguments.length;o<i;o++)arguments[o]&&ue(arguments[o],t);return A}var io=(e,A,t,{allOwnKeys:o}={})=>(ue(A,(i,r)=>{t&&U(i)?e[r]=Ie(i,t):e[r]=i},{allOwnKeys:o}),e),no=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),ao=(e,A,t,o)=>{e.prototype=Object.create(A.prototype,o),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:A.prototype}),t&&Object.assign(e.prototype,t)},so=(e,A,t,o)=>{let i,r,a,u={};if(A=A||{},e==null)return A;do{for(i=Object.getOwnPropertyNames(e),r=i.length;r-- >0;)a=i[r],(!o||o(a,e,A))&&!u[a]&&(A[a]=e[a],u[a]=!0);e=t!==!1&&AA(e)}while(e&&(!t||t(e,A))&&e!==Object.prototype);return A},lo=(e,A,t)=>{e=String(e),(t===void 0||t>e.length)&&(t=e.length),t-=A.length;let o=e.indexOf(A,t);return o!==-1&&o===t},Io=e=>{if(!e)return null;if(X(e))return e;let A=e.length;if(!yt(A))return null;let t=new Array(A);for(;A-- >0;)t[A]=e[A];return t},po=(e=>A=>e&&A instanceof e)(typeof Uint8Array<"u"&&AA(Uint8Array)),uo=(e,A)=>{let o=(e&&e[Symbol.iterator]).call(e),i;for(;(i=o.next())&&!i.done;){let r=i.value;A.call(e,r[0],r[1])}},go=(e,A)=>{let t,o=[];for(;(t=e.exec(A))!==null;)o.push(t);return o},fo=N("HTMLFormElement"),co=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,o,i){return o.toUpperCase()+i}),Ct=(({hasOwnProperty:e})=>(A,t)=>e.call(A,t))(Object.prototype),mo=N("RegExp"),wt=(e,A)=>{let t=Object.getOwnPropertyDescriptors(e),o={};ue(t,(i,r)=>{let a;(a=A(i,r,e))!==!1&&(o[r]=a||i)}),Object.defineProperties(e,o)},Bo=e=>{wt(e,(A,t)=>{if(U(e)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let o=e[t];if(U(o)){if(A.enumerable=!1,"writable"in A){A.writable=!1;return}A.set||(A.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},Co=(e,A)=>{let t={},o=i=>{i.forEach(r=>{t[r]=!0})};return X(e)?o(e):o(String(e).split(A)),t},Eo=()=>{},yo=(e,A)=>e!=null&&Number.isFinite(e=+e)?e:A,$e="abcdefghijklmnopqrstuvwxyz",dt="0123456789",bt={DIGIT:dt,ALPHA:$e,ALPHA_DIGIT:$e+$e.toUpperCase()+dt},Qo=(e=16,A=bt.ALPHA_DIGIT)=>{let t="",{length:o}=A;for(;e--;)t+=A[Math.random()*o|0];return t};function ho(e){return!!(e&&U(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}var wo=e=>{let A=new Array(10),t=(o,i)=>{if(Pe(o)){if(A.indexOf(o)>=0)return;if(!("toJSON"in o)){A[i]=o;let r=X(o)?[]:{};return ue(o,(a,u)=>{let c=t(a,i+1);!pe(c)&&(r[u]=c)}),A[i]=void 0,r}}return o};return t(e,0)},bo=N("AsyncFunction"),So=e=>e&&(Pe(e)||U(e))&&U(e.then)&&U(e.catch),St=((e,A)=>e?setImmediate:A?((t,o)=>(_.addEventListener("message",({source:i,data:r})=>{i===_&&r===t&&o.length&&o.shift()()},!1),i=>{o.push(i),_.postMessage(t,"*")}))(`axios@${Math.random()}`,[]):t=>setTimeout(t))(typeof setImmediate=="function",U(_.postMessage)),Ro=typeof queueMicrotask<"u"?queueMicrotask.bind(_):typeof process<"u"&&process.nextTick||St,f={isArray:X,isArrayBuffer:Et,isBuffer:qr,isFormData:Xr,isArrayBufferView:Yr,isString:Kr,isNumber:yt,isBoolean:jr,isObject:Pe,isPlainObject:De,isReadableStream:eo,isRequest:Ao,isResponse:to,isHeaders:ro,isUndefined:pe,isDate:vr,isFile:zr,isBlob:_r,isRegExp:mo,isFunction:U,isStream:Zr,isURLSearchParams:$r,isTypedArray:po,isFileList:Vr,forEach:ue,merge:eA,extend:io,trim:oo,stripBOM:no,inherits:ao,toFlatObject:so,kindOf:ke,kindOfTest:N,endsWith:lo,toArray:Io,forEachEntry:uo,matchAll:go,isHTMLForm:fo,hasOwnProperty:Ct,hasOwnProp:Ct,reduceDescriptors:wt,freezeMethods:Bo,toObjectSet:Co,toCamelCase:co,noop:Eo,toFiniteNumber:yo,findKey:Qt,global:_,isContextDefined:ht,ALPHABET:bt,generateString:Qo,isSpecCompliantForm:ho,toJSONObject:wo,isAsyncFn:bo,isThenable:So,setImmediate:St,asap:Ro};function $(e,A,t,o,i){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",A&&(this.code=A),t&&(this.config=t),o&&(this.request=o),i&&(this.response=i)}f.inherits($,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:f.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Rt=$.prototype,Dt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Dt[e]={value:e}});Object.defineProperties($,Dt);Object.defineProperty(Rt,"isAxiosError",{value:!0});$.from=(e,A,t,o,i,r)=>{let a=Object.create(Rt);return f.toFlatObject(e,a,function(c){return c!==Error.prototype},u=>u!=="isAxiosError"),$.call(a,e.message,A,t,o,i),a.cause=e,a.name=e.name,r&&Object.assign(a,r),a};var h=$;var We=null;function tA(e){return f.isPlainObject(e)||f.isArray(e)}function Ft(e){return f.endsWith(e,"[]")?e.slice(0,-2):e}function kt(e,A,t){return e?e.concat(A).map(function(i,r){return i=Ft(i),!t&&r?"["+i+"]":i}).join(t?".":""):A}function Do(e){return f.isArray(e)&&!e.some(tA)}var ko=f.toFlatObject(f,{},null,function(A){return/^is[A-Z]/.test(A)});function Fo(e,A,t){if(!f.isObject(e))throw new TypeError("target must be an object");A=A||new(We||FormData),t=f.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(C,B){return!f.isUndefined(B[C])});let o=t.metaTokens,i=t.visitor||n,r=t.dots,a=t.indexes,c=(t.Blob||typeof Blob<"u"&&Blob)&&f.isSpecCompliantForm(A);if(!f.isFunction(i))throw new TypeError("visitor must be a function");function I(p){if(p===null)return"";if(f.isDate(p))return p.toISOString();if(!c&&f.isBlob(p))throw new h("Blob is not supported. Use a Buffer instead.");return f.isArrayBuffer(p)||f.isTypedArray(p)?c&&typeof Blob=="function"?new Blob([p]):Buffer.from(p):p}function n(p,C,B){let b=p;if(p&&!B&&typeof p=="object"){if(f.endsWith(C,"{}"))C=o?C:C.slice(0,-2),p=JSON.stringify(p);else if(f.isArray(p)&&Do(p)||(f.isFileList(p)||f.endsWith(C,"[]"))&&(b=f.toArray(p)))return C=Ft(C),b.forEach(function(w,O){!(f.isUndefined(w)||w===null)&&A.append(a===!0?kt([C],O,r):a===null?C:C+"[]",I(w))}),!1}return tA(p)?!0:(A.append(kt(B,C,r),I(p)),!1)}let l=[],m=Object.assign(ko,{defaultVisitor:n,convertValue:I,isVisitable:tA});function s(p,C){if(!f.isUndefined(p)){if(l.indexOf(p)!==-1)throw Error("Circular reference detected in "+C.join("."));l.push(p),f.forEach(p,function(b,F){(!(f.isUndefined(b)||b===null)&&i.call(A,b,f.isString(F)?F.trim():F,C,m))===!0&&s(b,C?C.concat(F):[F])}),l.pop()}}if(!f.isObject(e))throw new TypeError("data must be an object");return s(e),A}var H=Fo;function Pt(e){let A={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(o){return A[o]})}function Wt(e,A){this._pairs=[],e&&H(e,this,A)}var Ut=Wt.prototype;Ut.append=function(A,t){this._pairs.push([A,t])};Ut.toString=function(A){let t=A?function(o){return A.call(this,o,Pt)}:Pt;return this._pairs.map(function(i){return t(i[0])+"="+t(i[1])},"").join("&")};var Ue=Wt;function Po(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ge(e,A,t){if(!A)return e;let o=t&&t.encode||Po,i=t&&t.serialize,r;if(i?r=i(A,t):r=f.isURLSearchParams(A)?A.toString():new Ue(A,t).toString(o),r){let a=e.indexOf("#");a!==-1&&(e=e.slice(0,a)),e+=(e.indexOf("?")===-1?"?":"&")+r}return e}var rA=class{constructor(){this.handlers=[]}use(A,t,o){return this.handlers.push({fulfilled:A,rejected:t,synchronous:o?o.synchronous:!1,runWhen:o?o.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){f.forEach(this.handlers,function(o){o!==null&&A(o)})}},oA=rA;var Oe={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Ot=typeof URLSearchParams<"u"?URLSearchParams:Ue;var Nt=typeof FormData<"u"?FormData:null;var Mt=typeof Blob<"u"?Blob:null;var xt={isBrowser:!0,classes:{URLSearchParams:Ot,FormData:Nt,Blob:Mt},protocols:["http","https","file","blob","url","data"]};var nA={};wr(nA,{hasBrowserEnv:()=>iA,hasStandardBrowserEnv:()=>Wo,hasStandardBrowserWebWorkerEnv:()=>Uo,origin:()=>Oo});var iA=typeof window<"u"&&typeof document<"u",Wo=(e=>iA&&["ReactNative","NativeScript","NS"].indexOf(e)<0)(typeof navigator<"u"&&navigator.product),Uo=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",Oo=iA&&window.location.href||"http://localhost";var k={...nA,...xt};function aA(e,A){return H(e,new k.classes.URLSearchParams,Object.assign({visitor:function(t,o,i,r){return k.isNode&&f.isBuffer(t)?(this.append(o,t.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},A))}function No(e){return f.matchAll(/\w+|\[(\w*)]/g,e).map(A=>A[0]==="[]"?"":A[1]||A[0])}function Mo(e){let A={},t=Object.keys(e),o,i=t.length,r;for(o=0;o<i;o++)r=t[o],A[r]=e[r];return A}function xo(e){function A(t,o,i,r){let a=t[r++];if(a==="__proto__")return!0;let u=Number.isFinite(+a),c=r>=t.length;return a=!a&&f.isArray(i)?i.length:a,c?(f.hasOwnProp(i,a)?i[a]=[i[a],o]:i[a]=o,!u):((!i[a]||!f.isObject(i[a]))&&(i[a]=[]),A(t,o,i[a],r)&&f.isArray(i[a])&&(i[a]=Mo(i[a])),!u)}if(f.isFormData(e)&&f.isFunction(e.entries)){let t={};return f.forEachEntry(e,(o,i)=>{A(No(o),i,t,0)}),t}return null}var Ne=xo;function To(e,A,t){if(f.isString(e))try{return(A||JSON.parse)(e),f.trim(e)}catch(o){if(o.name!=="SyntaxError")throw o}return(t||JSON.stringify)(e)}var sA={transitional:Oe,adapter:["xhr","http","fetch"],transformRequest:[function(A,t){let o=t.getContentType()||"",i=o.indexOf("application/json")>-1,r=f.isObject(A);if(r&&f.isHTMLForm(A)&&(A=new FormData(A)),f.isFormData(A))return i?JSON.stringify(Ne(A)):A;if(f.isArrayBuffer(A)||f.isBuffer(A)||f.isStream(A)||f.isFile(A)||f.isBlob(A)||f.isReadableStream(A))return A;if(f.isArrayBufferView(A))return A.buffer;if(f.isURLSearchParams(A))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let u;if(r){if(o.indexOf("application/x-www-form-urlencoded")>-1)return aA(A,this.formSerializer).toString();if((u=f.isFileList(A))||o.indexOf("multipart/form-data")>-1){let c=this.env&&this.env.FormData;return H(u?{"files[]":A}:A,c&&new c,this.formSerializer)}}return r||i?(t.setContentType("application/json",!1),To(A)):A}],transformResponse:[function(A){let t=this.transitional||sA.transitional,o=t&&t.forcedJSONParsing,i=this.responseType==="json";if(f.isResponse(A)||f.isReadableStream(A))return A;if(A&&f.isString(A)&&(o&&!this.responseType||i)){let a=!(t&&t.silentJSONParsing)&&i;try{return JSON.parse(A)}catch(u){if(a)throw u.name==="SyntaxError"?h.from(u,h.ERR_BAD_RESPONSE,this,null,this.response):u}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:k.classes.FormData,Blob:k.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};f.forEach(["delete","get","head","post","put","patch"],e=>{sA.headers[e]={}});var ee=sA;var Lo=f.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Tt=e=>{let A={},t,o,i;return e&&e.split(`
`).forEach(function(a){i=a.indexOf(":"),t=a.substring(0,i).trim().toLowerCase(),o=a.substring(i+1).trim(),!(!t||A[t]&&Lo[t])&&(t==="set-cookie"?A[t]?A[t].push(o):A[t]=[o]:A[t]=A[t]?A[t]+", "+o:o)}),A};var Lt=Symbol("internals");function fe(e){return e&&String(e).trim().toLowerCase()}function Me(e){return e===!1||e==null?e:f.isArray(e)?e.map(Me):String(e)}function Go(e){let A=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,o;for(;o=t.exec(e);)A[o[1]]=o[2];return A}var Jo=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function lA(e,A,t,o,i){if(f.isFunction(o))return o.call(this,A,t);if(i&&(A=t),!!f.isString(A)){if(f.isString(o))return A.indexOf(o)!==-1;if(f.isRegExp(o))return o.test(A)}}function Ho(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(A,t,o)=>t.toUpperCase()+o)}function qo(e,A){let t=f.toCamelCase(" "+A);["get","set","has"].forEach(o=>{Object.defineProperty(e,o+t,{value:function(i,r,a){return this[o].call(this,A,i,r,a)},configurable:!0})})}var Ae=class{constructor(A){A&&this.set(A)}set(A,t,o){let i=this;function r(u,c,I){let n=fe(c);if(!n)throw new Error("header name must be a non-empty string");let l=f.findKey(i,n);(!l||i[l]===void 0||I===!0||I===void 0&&i[l]!==!1)&&(i[l||c]=Me(u))}let a=(u,c)=>f.forEach(u,(I,n)=>r(I,n,c));if(f.isPlainObject(A)||A instanceof this.constructor)a(A,t);else if(f.isString(A)&&(A=A.trim())&&!Jo(A))a(Tt(A),t);else if(f.isHeaders(A))for(let[u,c]of A.entries())r(c,u,o);else A!=null&&r(t,A,o);return this}get(A,t){if(A=fe(A),A){let o=f.findKey(this,A);if(o){let i=this[o];if(!t)return i;if(t===!0)return Go(i);if(f.isFunction(t))return t.call(this,i,o);if(f.isRegExp(t))return t.exec(i);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,t){if(A=fe(A),A){let o=f.findKey(this,A);return!!(o&&this[o]!==void 0&&(!t||lA(this,this[o],o,t)))}return!1}delete(A,t){let o=this,i=!1;function r(a){if(a=fe(a),a){let u=f.findKey(o,a);u&&(!t||lA(o,o[u],u,t))&&(delete o[u],i=!0)}}return f.isArray(A)?A.forEach(r):r(A),i}clear(A){let t=Object.keys(this),o=t.length,i=!1;for(;o--;){let r=t[o];(!A||lA(this,this[r],r,A,!0))&&(delete this[r],i=!0)}return i}normalize(A){let t=this,o={};return f.forEach(this,(i,r)=>{let a=f.findKey(o,r);if(a){t[a]=Me(i),delete t[r];return}let u=A?Ho(r):String(r).trim();u!==r&&delete t[r],t[u]=Me(i),o[u]=!0}),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){let t=Object.create(null);return f.forEach(this,(o,i)=>{o!=null&&o!==!1&&(t[i]=A&&f.isArray(o)?o.join(", "):o)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([A,t])=>A+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...t){let o=new this(A);return t.forEach(i=>o.set(i)),o}static accessor(A){let o=(this[Lt]=this[Lt]={accessors:{}}).accessors,i=this.prototype;function r(a){let u=fe(a);o[u]||(qo(i,a),o[u]=!0)}return f.isArray(A)?A.forEach(r):r(A),this}};Ae.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);f.reduceDescriptors(Ae.prototype,({value:e},A)=>{let t=A[0].toUpperCase()+A.slice(1);return{get:()=>e,set(o){this[t]=o}}});f.freezeMethods(Ae);var D=Ae;function ce(e,A){let t=this||ee,o=A||t,i=D.from(o.headers),r=o.data;return f.forEach(e,function(u){r=u.call(t,r,i.normalize(),A?A.status:void 0)}),i.normalize(),r}function me(e){return!!(e&&e.__CANCEL__)}function Gt(e,A,t){h.call(this,e??"canceled",h.ERR_CANCELED,A,t),this.name="CanceledError"}f.inherits(Gt,h,{__CANCEL__:!0});var G=Gt;function Be(e,A,t){let o=t.config.validateStatus;!t.status||!o||o(t.status)?e(t):A(new h("Request failed with status code "+t.status,[h.ERR_BAD_REQUEST,h.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}function IA(e){let A=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return A&&A[1]||""}function Yo(e,A){e=e||10;let t=new Array(e),o=new Array(e),i=0,r=0,a;return A=A!==void 0?A:1e3,function(c){let I=Date.now(),n=o[r];a||(a=I),t[i]=c,o[i]=I;let l=r,m=0;for(;l!==i;)m+=t[l++],l=l%e;if(i=(i+1)%e,i===r&&(r=(r+1)%e),I-a<A)return;let s=n&&I-n;return s?Math.round(m*1e3/s):void 0}}var Jt=Yo;function Ko(e,A){let t=0,o=1e3/A,i,r,a=(I,n=Date.now())=>{t=n,i=null,r&&(clearTimeout(r),r=null),e.apply(null,I)};return[(...I)=>{let n=Date.now(),l=n-t;l>=o?a(I,n):(i=I,r||(r=setTimeout(()=>{r=null,a(i)},o-l)))},()=>i&&a(i)]}var Ht=Ko;var te=(e,A,t=3)=>{let o=0,i=Jt(50,250);return Ht(r=>{let a=r.loaded,u=r.lengthComputable?r.total:void 0,c=a-o,I=i(c),n=a<=u;o=a;let l={loaded:a,total:u,progress:u?a/u:void 0,bytes:c,rate:I||void 0,estimated:I&&u&&n?(u-a)/I:void 0,event:r,lengthComputable:u!=null,[A?"download":"upload"]:!0};e(l)},t)},pA=(e,A)=>{let t=e!=null;return[o=>A[0]({lengthComputable:t,total:e,loaded:o}),A[1]]},uA=e=>(...A)=>f.asap(()=>e(...A));var qt=k.hasStandardBrowserEnv?function(){let A=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),o;function i(r){let a=r;return A&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return o=i(window.location.href),function(a){let u=f.isString(a)?i(a):a;return u.protocol===o.protocol&&u.host===o.host}}():function(){return function(){return!0}}();var Yt=k.hasStandardBrowserEnv?{write(e,A,t,o,i,r){let a=[e+"="+encodeURIComponent(A)];f.isNumber(t)&&a.push("expires="+new Date(t).toGMTString()),f.isString(o)&&a.push("path="+o),f.isString(i)&&a.push("domain="+i),r===!0&&a.push("secure"),document.cookie=a.join("; ")},read(e){let A=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return A?decodeURIComponent(A[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function gA(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function fA(e,A){return A?e.replace(/\/?\/$/,"")+"/"+A.replace(/^\/+/,""):e}function Ce(e,A){return e&&!gA(A)?fA(e,A):A}var Kt=e=>e instanceof D?{...e}:e;function M(e,A){A=A||{};let t={};function o(I,n,l){return f.isPlainObject(I)&&f.isPlainObject(n)?f.merge.call({caseless:l},I,n):f.isPlainObject(n)?f.merge({},n):f.isArray(n)?n.slice():n}function i(I,n,l){if(f.isUndefined(n)){if(!f.isUndefined(I))return o(void 0,I,l)}else return o(I,n,l)}function r(I,n){if(!f.isUndefined(n))return o(void 0,n)}function a(I,n){if(f.isUndefined(n)){if(!f.isUndefined(I))return o(void 0,I)}else return o(void 0,n)}function u(I,n,l){if(l in A)return o(I,n);if(l in e)return o(void 0,I)}let c={url:r,method:r,data:r,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,withXSRFToken:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:u,headers:(I,n)=>i(Kt(I),Kt(n),!0)};return f.forEach(Object.keys(Object.assign({},e,A)),function(n){let l=c[n]||i,m=l(e[n],A[n],n);f.isUndefined(m)&&l!==u||(t[n]=m)}),t}var xe=e=>{let A=M({},e),{data:t,withXSRFToken:o,xsrfHeaderName:i,xsrfCookieName:r,headers:a,auth:u}=A;A.headers=a=D.from(a),A.url=ge(Ce(A.baseURL,A.url),e.params,e.paramsSerializer),u&&a.set("Authorization","Basic "+btoa((u.username||"")+":"+(u.password?unescape(encodeURIComponent(u.password)):"")));let c;if(f.isFormData(t)){if(k.hasStandardBrowserEnv||k.hasStandardBrowserWebWorkerEnv)a.setContentType(void 0);else if((c=a.getContentType())!==!1){let[I,...n]=c?c.split(";").map(l=>l.trim()).filter(Boolean):[];a.setContentType([I||"multipart/form-data",...n].join("; "))}}if(k.hasStandardBrowserEnv&&(o&&f.isFunction(o)&&(o=o(A)),o||o!==!1&&qt(A.url))){let I=i&&r&&Yt.read(r);I&&a.set(i,I)}return A};var jo=typeof XMLHttpRequest<"u",jt=jo&&function(e){return new Promise(function(t,o){let i=xe(e),r=i.data,a=D.from(i.headers).normalize(),{responseType:u,onUploadProgress:c,onDownloadProgress:I}=i,n,l,m,s,p;function C(){s&&s(),p&&p(),i.cancelToken&&i.cancelToken.unsubscribe(n),i.signal&&i.signal.removeEventListener("abort",n)}let B=new XMLHttpRequest;B.open(i.method.toUpperCase(),i.url,!0),B.timeout=i.timeout;function b(){if(!B)return;let w=D.from("getAllResponseHeaders"in B&&B.getAllResponseHeaders()),K={data:!u||u==="text"||u==="json"?B.responseText:B.response,status:B.status,statusText:B.statusText,headers:w,config:e,request:B};Be(function(T){t(T),C()},function(T){o(T),C()},K),B=null}"onloadend"in B?B.onloadend=b:B.onreadystatechange=function(){!B||B.readyState!==4||B.status===0&&!(B.responseURL&&B.responseURL.indexOf("file:")===0)||setTimeout(b)},B.onabort=function(){B&&(o(new h("Request aborted",h.ECONNABORTED,e,B)),B=null)},B.onerror=function(){o(new h("Network Error",h.ERR_NETWORK,e,B)),B=null},B.ontimeout=function(){let O=i.timeout?"timeout of "+i.timeout+"ms exceeded":"timeout exceeded",K=i.transitional||Oe;i.timeoutErrorMessage&&(O=i.timeoutErrorMessage),o(new h(O,K.clarifyTimeoutError?h.ETIMEDOUT:h.ECONNABORTED,e,B)),B=null},r===void 0&&a.setContentType(null),"setRequestHeader"in B&&f.forEach(a.toJSON(),function(O,K){B.setRequestHeader(K,O)}),f.isUndefined(i.withCredentials)||(B.withCredentials=!!i.withCredentials),u&&u!=="json"&&(B.responseType=i.responseType),I&&([m,p]=te(I,!0),B.addEventListener("progress",m)),c&&B.upload&&([l,s]=te(c),B.upload.addEventListener("progress",l),B.upload.addEventListener("loadend",s)),(i.cancelToken||i.signal)&&(n=w=>{B&&(o(!w||w.type?new G(null,e,B):w),B.abort(),B=null)},i.cancelToken&&i.cancelToken.subscribe(n),i.signal&&(i.signal.aborted?n():i.signal.addEventListener("abort",n)));let F=IA(i.url);if(F&&k.protocols.indexOf(F)===-1){o(new h("Unsupported protocol "+F+":",h.ERR_BAD_REQUEST,e));return}B.send(r||null)})};var vo=(e,A)=>{let t=new AbortController,o,i=function(c){if(!o){o=!0,a();let I=c instanceof Error?c:this.reason;t.abort(I instanceof h?I:new G(I instanceof Error?I.message:I))}},r=A&&setTimeout(()=>{i(new h(`timeout ${A} of ms exceeded`,h.ETIMEDOUT))},A),a=()=>{e&&(r&&clearTimeout(r),r=null,e.forEach(c=>{c&&(c.removeEventListener?c.removeEventListener("abort",i):c.unsubscribe(i))}),e=null)};e.forEach(c=>c&&c.addEventListener&&c.addEventListener("abort",i));let{signal:u}=t;return u.unsubscribe=a,[u,()=>{r&&clearTimeout(r),r=null}]},vt=vo;var zo=function*(e,A){let t=e.byteLength;if(!A||t<A){yield e;return}let o=0,i;for(;o<t;)i=o+A,yield e.slice(o,i),o=i},_o=async function*(e,A,t){for await(let o of e)yield*zo(ArrayBuffer.isView(o)?o:await t(String(o)),A)},cA=(e,A,t,o,i)=>{let r=_o(e,A,i),a=0,u,c=I=>{u||(u=!0,o&&o(I))};return new ReadableStream({async pull(I){try{let{done:n,value:l}=await r.next();if(n){c(),I.close();return}let m=l.byteLength;if(t){let s=a+=m;t(s)}I.enqueue(new Uint8Array(l))}catch(n){throw c(n),n}},cancel(I){return c(I),r.return()}},{highWaterMark:2})};var Le=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",_t=Le&&typeof ReadableStream=="function",mA=Le&&(typeof TextEncoder=="function"?(e=>A=>e.encode(A))(new TextEncoder):async e=>new Uint8Array(await new Response(e).arrayBuffer())),Vt=(e,...A)=>{try{return!!e(...A)}catch{return!1}},Vo=_t&&Vt(()=>{let e=!1,A=new Request(k.origin,{body:new ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type");return e&&!A}),zt=64*1024,BA=_t&&Vt(()=>f.isReadableStream(new Response("").body)),Te={stream:BA&&(e=>e.body)};Le&&(e=>{["text","arrayBuffer","blob","formData","stream"].forEach(A=>{!Te[A]&&(Te[A]=f.isFunction(e[A])?t=>t[A]():(t,o)=>{throw new h(`Response type '${A}' is not supported`,h.ERR_NOT_SUPPORT,o)})})})(new Response);var Zo=async e=>{if(e==null)return 0;if(f.isBlob(e))return e.size;if(f.isSpecCompliantForm(e))return(await new Request(e).arrayBuffer()).byteLength;if(f.isArrayBufferView(e)||f.isArrayBuffer(e))return e.byteLength;if(f.isURLSearchParams(e)&&(e=e+""),f.isString(e))return(await mA(e)).byteLength},Xo=async(e,A)=>{let t=f.toFiniteNumber(e.getContentLength());return t??Zo(A)},Zt=Le&&(async e=>{let{url:A,method:t,data:o,signal:i,cancelToken:r,timeout:a,onDownloadProgress:u,onUploadProgress:c,responseType:I,headers:n,withCredentials:l="same-origin",fetchOptions:m}=xe(e);I=I?(I+"").toLowerCase():"text";let[s,p]=i||r||a?vt([i,r],a):[],C,B,b=()=>{!C&&setTimeout(()=>{s&&s.unsubscribe()}),C=!0},F;try{if(c&&Vo&&t!=="get"&&t!=="head"&&(F=await Xo(n,o))!==0){let x=new Request(A,{method:"POST",body:o,duplex:"half"}),T;if(f.isFormData(o)&&(T=x.headers.get("content-type"))&&n.setContentType(T),x.body){let[ve,Qe]=pA(F,te(uA(c)));o=cA(x.body,zt,ve,Qe,mA)}}f.isString(l)||(l=l?"include":"omit"),B=new Request(A,{...m,signal:s,method:t.toUpperCase(),headers:n.normalize().toJSON(),body:o,duplex:"half",credentials:l});let w=await fetch(B),O=BA&&(I==="stream"||I==="response");if(BA&&(u||O)){let x={};["status","statusText","headers"].forEach(st=>{x[st]=w[st]});let T=f.toFiniteNumber(w.headers.get("content-length")),[ve,Qe]=u&&pA(T,te(uA(u),!0))||[];w=new Response(cA(w.body,zt,ve,()=>{Qe&&Qe(),O&&b()},mA),x)}I=I||"text";let K=await Te[f.findKey(Te,I)||"text"](w,e);return!O&&b(),p&&p(),await new Promise((x,T)=>{Be(x,T,{data:K,headers:D.from(w.headers),status:w.status,statusText:w.statusText,config:e,request:B})})}catch(w){throw b(),w&&w.name==="TypeError"&&/fetch/i.test(w.message)?Object.assign(new h("Network Error",h.ERR_NETWORK,e,B),{cause:w.cause||w}):h.from(w,w&&w.code,e,B)}});var CA={http:We,xhr:jt,fetch:Zt};f.forEach(CA,(e,A)=>{if(e){try{Object.defineProperty(e,"name",{value:A})}catch{}Object.defineProperty(e,"adapterName",{value:A})}});var Xt=e=>`- ${e}`,$o=e=>f.isFunction(e)||e===null||e===!1,Ge={getAdapter:e=>{e=f.isArray(e)?e:[e];let{length:A}=e,t,o,i={};for(let r=0;r<A;r++){t=e[r];let a;if(o=t,!$o(t)&&(o=CA[(a=String(t)).toLowerCase()],o===void 0))throw new h(`Unknown adapter '${a}'`);if(o)break;i[a||"#"+r]=o}if(!o){let r=Object.entries(i).map(([u,c])=>`adapter ${u} `+(c===!1?"is not supported by the environment":"is not available in the build")),a=A?r.length>1?`since :
`+r.map(Xt).join(`
`):" "+Xt(r[0]):"as no adapter specified";throw new h("There is no suitable adapter to dispatch the request "+a,"ERR_NOT_SUPPORT")}return o},adapters:CA};function dA(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new G(null,e)}function Je(e){return dA(e),e.headers=D.from(e.headers),e.data=ce.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),Ge.getAdapter(e.adapter||ee.adapter)(e).then(function(o){return dA(e),o.data=ce.call(e,e.transformResponse,o),o.headers=D.from(o.headers),o},function(o){return me(o)||(dA(e),o&&o.response&&(o.response.data=ce.call(e,e.transformResponse,o.response),o.response.headers=D.from(o.response.headers))),Promise.reject(o)})}var He="1.7.4";var EA={};["object","boolean","number","function","string","symbol"].forEach((e,A)=>{EA[e]=function(o){return typeof o===e||"a"+(A<1?"n ":" ")+e}});var $t={};EA.transitional=function(A,t,o){function i(r,a){return"[Axios v"+He+"] Transitional option '"+r+"'"+a+(o?". "+o:"")}return(r,a,u)=>{if(A===!1)throw new h(i(a," has been removed"+(t?" in "+t:"")),h.ERR_DEPRECATED);return t&&!$t[a]&&($t[a]=!0,console.warn(i(a," has been deprecated since v"+t+" and will be removed in the near future"))),A?A(r,a,u):!0}};function ei(e,A,t){if(typeof e!="object")throw new h("options must be an object",h.ERR_BAD_OPTION_VALUE);let o=Object.keys(e),i=o.length;for(;i-- >0;){let r=o[i],a=A[r];if(a){let u=e[r],c=u===void 0||a(u,r,e);if(c!==!0)throw new h("option "+r+" must be "+c,h.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new h("Unknown option "+r,h.ERR_BAD_OPTION)}}var qe={assertOptions:ei,validators:EA};var q=qe.validators,re=class{constructor(A){this.defaults=A,this.interceptors={request:new oA,response:new oA}}async request(A,t){try{return await this._request(A,t)}catch(o){if(o instanceof Error){let i;Error.captureStackTrace?Error.captureStackTrace(i={}):i=new Error;let r=i.stack?i.stack.replace(/^.+\n/,""):"";try{o.stack?r&&!String(o.stack).endsWith(r.replace(/^.+\n.+\n/,""))&&(o.stack+=`
`+r):o.stack=r}catch{}}throw o}}_request(A,t){typeof A=="string"?(t=t||{},t.url=A):t=A||{},t=M(this.defaults,t);let{transitional:o,paramsSerializer:i,headers:r}=t;o!==void 0&&qe.assertOptions(o,{silentJSONParsing:q.transitional(q.boolean),forcedJSONParsing:q.transitional(q.boolean),clarifyTimeoutError:q.transitional(q.boolean)},!1),i!=null&&(f.isFunction(i)?t.paramsSerializer={serialize:i}:qe.assertOptions(i,{encode:q.function,serialize:q.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let a=r&&f.merge(r.common,r[t.method]);r&&f.forEach(["delete","get","head","post","put","patch","common"],p=>{delete r[p]}),t.headers=D.concat(a,r);let u=[],c=!0;this.interceptors.request.forEach(function(C){typeof C.runWhen=="function"&&C.runWhen(t)===!1||(c=c&&C.synchronous,u.unshift(C.fulfilled,C.rejected))});let I=[];this.interceptors.response.forEach(function(C){I.push(C.fulfilled,C.rejected)});let n,l=0,m;if(!c){let p=[Je.bind(this),void 0];for(p.unshift.apply(p,u),p.push.apply(p,I),m=p.length,n=Promise.resolve(t);l<m;)n=n.then(p[l++],p[l++]);return n}m=u.length;let s=t;for(l=0;l<m;){let p=u[l++],C=u[l++];try{s=p(s)}catch(B){C.call(this,B);break}}try{n=Je.call(this,s)}catch(p){return Promise.reject(p)}for(l=0,m=I.length;l<m;)n=n.then(I[l++],I[l++]);return n}getUri(A){A=M(this.defaults,A);let t=Ce(A.baseURL,A.url);return ge(t,A.params,A.paramsSerializer)}};f.forEach(["delete","get","head","options"],function(A){re.prototype[A]=function(t,o){return this.request(M(o||{},{method:A,url:t,data:(o||{}).data}))}});f.forEach(["post","put","patch"],function(A){function t(o){return function(r,a,u){return this.request(M(u||{},{method:A,headers:o?{"Content-Type":"multipart/form-data"}:{},url:r,data:a}))}}re.prototype[A]=t(),re.prototype[A+"Form"]=t(!0)});var de=re;var yA=class e{constructor(A){if(typeof A!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(r){t=r});let o=this;this.promise.then(i=>{if(!o._listeners)return;let r=o._listeners.length;for(;r-- >0;)o._listeners[r](i);o._listeners=null}),this.promise.then=i=>{let r,a=new Promise(u=>{o.subscribe(u),r=u}).then(i);return a.cancel=function(){o.unsubscribe(r)},a},A(function(r,a,u){o.reason||(o.reason=new G(r,a,u),t(o.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){if(this.reason){A(this.reason);return}this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;let t=this._listeners.indexOf(A);t!==-1&&this._listeners.splice(t,1)}static source(){let A;return{token:new e(function(i){A=i}),cancel:A}}},er=yA;function QA(e){return function(t){return e.apply(null,t)}}function hA(e){return f.isObject(e)&&e.isAxiosError===!0}var wA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(wA).forEach(([e,A])=>{wA[A]=e});var Ar=wA;function tr(e){let A=new de(e),t=Ie(de.prototype.request,A);return f.extend(t,de.prototype,A,{allOwnKeys:!0}),f.extend(t,A,null,{allOwnKeys:!0}),t.create=function(i){return tr(M(e,i))},t}var S=tr(ee);S.Axios=de;S.CanceledError=G;S.CancelToken=er;S.isCancel=me;S.VERSION=He;S.toFormData=H;S.AxiosError=h;S.Cancel=S.CanceledError;S.all=function(A){return Promise.all(A)};S.spread=QA;S.isAxiosError=hA;S.mergeConfig=M;S.AxiosHeaders=D;S.formToJSON=e=>Ne(f.isHTMLForm(e)?new FormData(e):e);S.getAdapter=Ge.getAdapter;S.HttpStatusCode=Ar;S.default=S;var oe=S;var{Axios:xl,AxiosError:Tl,CanceledError:Ll,isCancel:Gl,CancelToken:Jl,VERSION:Hl,all:ql,Cancel:Yl,isAxiosError:Kl,spread:jl,toFormData:vl,AxiosHeaders:zl,HttpStatusCode:_l,formToJSON:Vl,getAdapter:Zl,mergeConfig:Xl}=oe;async function Ai(e,A){let t=e,o=null;if(t==null)o=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let i=await oe.get(t,{responseType:"blob",params:A}),r=URL.createObjectURL(i.data);o=new Worker(r,{type:"module"})}else o=new Worker(t,{type:"module"});return o}var Ee=Ai;function rr(e){let A=Ze(e),t=e;return t.terminated=!1,t.workerProxy=A,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[Ve](),t.originalTerminate()},{workerProxy:A,worker:t}}async function ti(e,A,t){let o;if(e!=null){let r=e;return r.workerProxy!==void 0?(o=r.workerProxy,{workerProxy:o,worker:r}):rr(e)}let i=await Ee(A,t);return rr(i)}var or=ti;async function ri(e,A,t){let o="unknown";typeof e!="string"?o=e.href:e.startsWith("http")?o=e:o=typeof A<"u"?`${A}/${e}`:e,o.endsWith(".js")&&(o=o.substring(0,o.length-3)),o.endsWith(".wasm")&&(o=o.substring(0,o.length-5));let i=`${o}.wasm`,a=(await oe.get(i,{responseType:"arraybuffer",params:t})).data;return(await import(`${o}.js`)).default({wasmBinary:a})}var ir=ri;var nr=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var lr=typeof globalThis.SharedArrayBuffer=="function",ar=new TextEncoder,sr=new TextDecoder("utf-8");function oi(e,A){let t={flags:"r",encoding:"binary"},o=e.fs_open(A,t.flags),r=e.fs_stat(A).size,a=null;lr?a=new SharedArrayBuffer(r):a=new ArrayBuffer(r);let u=new Uint8Array(a);return e.fs_read(o,u,0,r,0),e.fs_close(o),u}function Ir(e,A,t){let o=null;lr?o=new SharedArrayBuffer(t):o=new ArrayBuffer(t);let i=new Uint8Array(o),r=new Uint8Array(e.HEAPU8.buffer,A,t);return i.set(r),i}function R(e,A,t,o){let i=0;return A!==null&&(i=e.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,o,A.buffer.byteLength]),e.HEAPU8.set(new Uint8Array(A.buffer),i)),i}function Y(e,A,t){let o=JSON.stringify(A),i=e.lengthBytesUTF8(o)+1,r=e.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,i]);e.stringToUTF8(o,r,i)}function P(e,A,t,o){let i=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,A,t]),r=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,A,t]),a=Ir(e,i,r);return L(o,a.buffer)}function ye(e,A){let t=e.ccall("itk_wasm_output_json_address","number",["number","number"],[0,A]),o=e.UTF8ToString(t);return JSON.parse(o)}function ii(e,A,t,o){o!=null&&o.length>0&&o.forEach(function(I,n){switch(I.type){case g.TextStream:{let l=ar.encode(I.data.data),m=R(e,l,n,0),s={size:l.buffer.byteLength,data:`data:application/vnd.itk.address,0:${m}`};Y(e,s,n);break}case g.JsonCompatible:{let l=ar.encode(JSON.stringify(I.data)),m=R(e,l,n,0),s={size:l.buffer.byteLength,data:`data:application/vnd.itk.address,0:${m}`};Y(e,s,n);break}case g.BinaryStream:{let l=I.data.data,m=R(e,l,n,0),s={size:l.buffer.byteLength,data:`data:application/vnd.itk.address,0:${m}`};Y(e,s,n);break}case g.TextFile:{e.fs_writeFile(I.data.path,I.data.data);break}case g.BinaryFile:{e.fs_writeFile(I.data.path,I.data.data);break}case g.Image:{let l=I.data,m=R(e,l.data,n,0),s=R(e,l.direction,n,1),p=typeof l.metadata?.entries<"u"?Array.from(l.metadata.entries()):[],C={imageType:l.imageType,name:l.name,origin:l.origin,spacing:l.spacing,direction:`data:application/vnd.itk.address,0:${s}`,size:l.size,data:`data:application/vnd.itk.address,0:${m}`,metadata:p};Y(e,C,n);break}case g.Mesh:{let l=I.data,m=R(e,l.points,n,0),s=R(e,l.cells,n,1),p=R(e,l.pointData,n,2),C=R(e,l.cellData,n,3),B={meshType:l.meshType,name:l.name,numberOfPoints:l.numberOfPoints,points:`data:application/vnd.itk.address,0:${m}`,numberOfCells:l.numberOfCells,cells:`data:application/vnd.itk.address,0:${s}`,cellBufferSize:l.cellBufferSize,numberOfPointPixels:l.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:l.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${C}`};Y(e,B,n);break}case g.PointSet:{let l=I.data,m=R(e,l.points,n,0),s=R(e,l.pointData,n,1),p={pointSetType:l.pointSetType,name:l.name,numberOfPoints:l.numberOfPoints,points:`data:application/vnd.itk.address,0:${m}`,numberOfPointPixels:l.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${s}`};Y(e,p,n);break}case g.TransformList:{let l=I.data,m=[];l.forEach((s,p)=>{let B=`data:application/vnd.itk.address,0:${R(e,s.fixedParameters,n,p*2)}`,F=`data:application/vnd.itk.address,0:${R(e,s.parameters,n,p*2+1)}`,w={transformType:s.transformType,numberOfFixedParameters:s.numberOfFixedParameters,numberOfParameters:s.numberOfParameters,name:s.name,inputSpaceName:s.inputSpaceName,outputSpaceName:s.outputSpaceName,parameters:F,fixedParameters:B};m.push(w)}),Y(e,m,n);break}case g.PolyData:{let l=I.data,m=R(e,l.points,n,0),s=R(e,l.vertices,n,1),p=R(e,l.lines,n,2),C=R(e,l.polygons,n,3),B=R(e,l.triangleStrips,n,4),b=R(e,l.pointData,n,5),F=R(e,l.pointData,n,6),w={polyDataType:l.polyDataType,name:l.name,numberOfPoints:l.numberOfPoints,points:`data:application/vnd.itk.address,0:${m}`,verticesBufferSize:l.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${s}`,linesBufferSize:l.linesBufferSize,lines:`data:application/vnd.itk.address,0:${p}`,polygonsBufferSize:l.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${C}`,triangleStripsBufferSize:l.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${B}`,numberOfPointPixels:l.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${b}`,numberOfCellPixels:l.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${F}`};Y(e,w,n);break}default:throw Error("Unsupported input InterfaceType")}}),e.resetModuleStdout(),e.resetModuleStderr();let i=e.stackSave(),r=0;try{r=e.callMain(A.slice())}catch(I){throw typeof I=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",e.getModuleStdout()),console.error("stderr:",e.getModuleStderr()),typeof e.getExceptionMessage<"u"?console.error("exception:",e.getExceptionMessage(I)):console.error("Build module in Debug mode for exception message information.")),I}finally{e.stackRestore(i)}let a=e.getModuleStdout(),u=e.getModuleStderr(),c=[];return t!=null&&t.length>0&&r===0&&t.forEach(function(I,n){let l=null;switch(I.type){case g.TextStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),p=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),C=new Uint8Array(e.HEAPU8.buffer,s,p);l={data:sr.decode(C)};break}case g.JsonCompatible:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),p=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),C=new Uint8Array(e.HEAPU8.buffer,s,p);l=JSON.parse(sr.decode(C));break}case g.BinaryStream:{let s=e.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),p=e.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);l={data:Ir(e,s,p)};break}case g.TextFile:{l={path:I.data.path,data:e.fs_readFile(I.data.path,{encoding:"utf8"})};break}case g.BinaryFile:{l={path:I.data.path,data:oi(e,I.data.path)};break}case g.Image:{let s=ye(e,n);s.data=P(e,n,0,s.imageType.componentType),s.direction=P(e,n,1,V.Float64),s.metadata=new Map(s.metadata),l=s;break}case g.Mesh:{let s=ye(e,n);s.numberOfPoints>0?s.points=P(e,n,0,s.meshType.pointComponentType):s.points=L(s.meshType.pointComponentType,new ArrayBuffer(0)),s.numberOfCells>0?s.cells=P(e,n,1,s.meshType.cellComponentType):s.cells=L(s.meshType.cellComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=P(e,n,2,s.meshType.pointPixelComponentType):s.pointData=L(s.meshType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=P(e,n,3,s.meshType.cellPixelComponentType):s.cellData=L(s.meshType.cellPixelComponentType,new ArrayBuffer(0)),l=s;break}case g.PointSet:{let s=ye(e,n);s.numberOfPoints>0?s.points=P(e,n,0,s.pointSetType.pointComponentType):s.points=L(s.pointSetType.pointComponentType,new ArrayBuffer(0)),s.numberOfPointPixels>0?s.pointData=P(e,n,1,s.pointSetType.pointPixelComponentType):s.pointData=L(s.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),l=s;break}case g.TransformList:{let s=ye(e,n);s.forEach((p,C)=>{p.numberOfFixedParameters>0&&(s[C].fixedParameters=P(e,n,C*2,p.transformType.parametersValueType)),p.numberOfFixedParameters>0&&(s[C].parameters=P(e,n,C*2+1,p.transformType.parametersValueType))}),l=s;break}case g.PolyData:{let s=ye(e,n);s.numberOfPoints>0?s.points=P(e,n,0,V.Float32):s.points=new Float32Array,s.verticesBufferSize>0?s.vertices=P(e,n,1,W.UInt32):s.vertices=new Uint32Array,s.linesBufferSize>0?s.lines=P(e,n,2,W.UInt32):s.lines=new Uint32Array,s.polygonsBufferSize>0?s.polygons=P(e,n,3,W.UInt32):s.polygons=new Uint32Array,s.triangleStripsBufferSize>0?s.triangleStrips=P(e,n,4,W.UInt32):s.triangleStrips=new Uint32Array,s.numberOfPointPixels>0?s.pointData=P(e,n,5,s.polyDataType.pointPixelComponentType):s.pointData=L(s.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),s.numberOfCellPixels>0?s.cellData=P(e,n,6,s.polyDataType.cellPixelComponentType):s.cellData=L(s.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),l=s;break}default:throw Error("Unsupported output InterfaceType")}let m={type:I.type,data:l};c.push(m)}),{returnValue:r,stdout:a,stderr:u,outputs:c}}var pr=ii;var ni=typeof globalThis.SharedArrayBuffer<"u";function ai(e,A){if(e==null)return[];let t=[];for(let o=0;o<e.length;o++){let i=si(e[o],A);i!==null&&t.push(i)}return t}function si(e,A){if(e==null)return null;let t=null;return e.buffer!==void 0?t=e.buffer:e.byteLength!==void 0&&(t=e),ni&&t instanceof SharedArrayBuffer?null:A?t:t.slice(0)}var ur=ai;function li(e){return[e.data,e.direction]}var gr=li;function Ii(e){return[e.points,e.pointData,e.cells,e.cellData]}var fr=Ii;function pi(e){return[e.points,e.vertices,e.lines,e.polygons,e.triangleStrips,e.pointData,e.cellData]}var cr=pi;var ui;function Ye(){return ui}var gi;function mr(){return gi}var fi;function Ke(){return fi}var bA=new Map;function ci(){let e=Ke();return typeof e>"u"&&(e=null),e}function Br(){let e=Ye();return typeof e>"u"&&(e=new URL("/pipelines",document.location.origin).href),e}function je(){let e=mr();return typeof e>"u"&&(e={}),e}async function mi(e,A,t){let o=e,i=e;if(typeof e!="string"&&(o=new URL(e.href),i=o.href),bA.has(i))return bA.get(i);{let r=await ir(e,A?.toString()??Br(),t??je());return bA.set(i,r),r}}async function Bi(e,A,t,o,i){if(!await nr()){let B="WebAssembly SIMD support is required -- please update your browser.";throw alert(B),new Error(B)}let r=i?.webWorker??null;if(r===!1){let B=await mi(e.toString(),i?.pipelineBaseUrl,i?.pipelineQueryParams??je());return pr(B,A,t,o)}let a=r,u=i?.pipelineWorkerUrl??ci(),c=typeof u!="string"&&typeof u?.href<"u"?u.href:u,{workerProxy:I,worker:n}=await or(a,c,i?.pipelineQueryParams??je());a=n;let l=[];o!=null&&o.length>0&&o.forEach(function(B){if(B.type===g.BinaryStream){let b=B.data.data;l.push(b)}else if(B.type===g.BinaryFile){let b=B.data.data;l.push(b)}else if(B.type===g.Image){let b=B.data;b.data!==null&&l.push(...gr(b))}else if(B.type===g.Mesh){let b=B.data;l.push(...fr(b))}else if(B.type===g.PolyData){let b=B.data;l.push(...cr(b))}});let m=i?.pipelineBaseUrl??Br(),s=typeof m!="string"&&typeof m?.href<"u"?m.href:m,p=o!=null?Xe(o,ur(l,i?.noCopy)):null,C=await I.runPipeline(e.toString(),s,A,t,p,i?.pipelineQueryParams??je());return{returnValue:C.returnValue,stdout:C.stdout,stderr:C.stderr,outputs:C.outputs,webWorker:a}}var E=Bi;var Ci=null;function Cr(){return Ci}var di=new Map([]),ie=di;var Ei="1.6.2",dr=Ei;var SA,yi=`https://cdn.jsdelivr.net/npm/@itk-wasm/mesh-io@${dr}/dist/pipelines`;function YI(e){SA=e}function y(){if(typeof SA<"u")return SA;let e=Ye();return typeof e<"u"?e:yi}var RA,Qi=null;function Er(e){RA=e}function d(){if(typeof RA<"u")return RA;let e=Ke();return typeof e<"u"?e:Qi}var ne=null;async function yr(){let e=d(),A=typeof e!="string"&&typeof e?.href<"u"?e.href:e;ne=await Ee(A)}function ZI(e){ne=e}async function Q(){if(ne!==null)return ne.terminated&&await yr(),ne;let e=Cr();return e!==null?e:(await yr(),ne)}async function hi(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="vtk-poly-data-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var DA=hi;async function wi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="vtk-poly-data-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var kA=wi;async function bi(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="obj-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var FA=bi;async function Si(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="obj-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var PA=Si;async function Ri(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="stl-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var WA=Ri;async function Di(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="stl-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var UA=Di;async function ki(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="off-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var OA=ki;async function Fi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="off-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var NA=Fi;async function Pi(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="mz3-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var MA=Pi;async function Wi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="mz3-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var xA=Wi;async function Ui(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="wasm-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var TA=Ui;async function Oi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="wasm-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var LA=Oi;async function Ni(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="wasm-zstd-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var GA=Ni;async function Mi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="wasm-zstd-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var JA=Mi;async function xi(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="swc-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var HA=xi;async function Ti(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="swc-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var qA=Ti;async function Li(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="byu-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var YA=Li;async function Gi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="byu-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var KA=Gi;async function Ji(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="free-surfer-ascii-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var jA=Ji;async function Hi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="free-surfer-ascii-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var vA=Hi;async function qi(e,A={}){let t=[{type:g.JsonCompatible},{type:g.Mesh}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="free-surfer-binary-read-mesh",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,mesh:p[1]?.data}}var zA=qi;async function Yi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.Mesh,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="free-surfer-binary-write-mesh",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedMesh:p[1]?.data}}var _A=Yi;var Ki=new Map([["vtk",[DA,kA]],["obj",[FA,PA]],["stl",[WA,UA]],["off",[OA,NA]],["mz3",[MA,xA]],["wasm",[TA,LA]],["wasmZstd",[GA,JA]],["swc",[HA,qA]],["byu",[YA,KA]],["freeSurferAscii",[jA,vA]],["freeSurferBinary",[zA,_A]]]),ae=Ki;async function ji(e,A={}){let t=e.type??"",o=e.name??e.path??"fileName",i=J(o).toLowerCase(),r=A?.webWorker,a=e;if(e instanceof Blob){let s=await e.arrayBuffer();a={path:e.name,data:new Uint8Array(s)}}let u=null;if(t&&ie.has(t))u=ie.get(t);else if(j.has(i))u=j.get(i);else for(let s of ae.values())if(s[0]!==null){let{webWorker:p,couldRead:C,mesh:B}=await s[0]({path:a.path,data:a.data.slice()},{informationOnly:A.informationOnly,webWorker:r,noCopy:A?.noCopy});if(r=p,C)return{webWorker:r,mesh:B}}if(!u)throw Error("Could not find IO for: "+o);let I=ae.get(u)[0],{webWorker:n,couldRead:l,mesh:m}=await I(a,{informationOnly:A.informationOnly,webWorker:r,noCopy:A?.noCopy});if(r=n,!l)throw Error("Could not read: "+o);return{webWorker:r,mesh:m}}var vi=ji;async function zi(e,A,t={}){let o=e,i=t.mimeType,r=J(A).toLowerCase(),a=t.webWorker,u=null;if(typeof i<"u"&&ie.has(i))u=ie.get(i);else if(j.has(r))u=j.get(r);else for(let p of ae.values())if(p[1]!==null){let{webWorker:C,couldWrite:B,serializedMesh:b}=await p[1](o,A,t);if(a=C,B)return{webWorker:a,serializedMesh:b}}if(!u)throw Error("Could not find IO for: "+A);let I=ae.get(u)[1],{webWorker:n,couldWrite:l,serializedMesh:m}=await I(o,A,t);if(a=n,!l)throw Error("Could not write: "+A);return{webWorker:a,serializedMesh:m}}var _i=zi;var Vi=new Map([]),se=Vi;async function Zi(e,A={}){let t=[{type:g.JsonCompatible},{type:g.PointSet}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="vtk-poly-data-read-point-set",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,pointSet:p[1]?.data}}var VA=Zi;async function Xi(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.PointSet,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="vtk-poly-data-write-point-set",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedPointSet:p[1]?.data}}var ZA=Xi;async function $i(e,A={}){let t=[{type:g.JsonCompatible},{type:g.PointSet}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="mz3-read-point-set",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,pointSet:p[1]?.data}}var XA=$i;async function en(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.PointSet,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="mz3-write-point-set",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedPointSet:p[1]?.data}}var $A=en;async function An(e,A={}){let t=[{type:g.JsonCompatible},{type:g.PointSet}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="obj-read-point-set",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,pointSet:p[1]?.data}}var et=An;async function tn(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.PointSet,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="obj-write-point-set",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedPointSet:p[1]?.data}}var At=tn;async function rn(e,A={}){let t=[{type:g.JsonCompatible},{type:g.PointSet}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="off-read-point-set",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,pointSet:p[1]?.data}}var tt=rn;async function on(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.PointSet,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="off-write-point-set",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedPointSet:p[1]?.data}}var rt=on;async function nn(e,A={}){let t=[{type:g.JsonCompatible},{type:g.PointSet}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="wasm-read-point-set",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,pointSet:p[1]?.data}}var ot=nn;async function an(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.PointSet,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="wasm-write-point-set",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedPointSet:p[1]?.data}}var it=an;async function sn(e,A={}){let t=[{type:g.JsonCompatible},{type:g.PointSet}],o=e;if(e instanceof File){let B=await e.arrayBuffer();o={path:e.name,data:new Uint8Array(B)}}let i=[{type:g.BinaryFile,data:o}],r=[],a=o.path;r.push(a),r.push("0"),r.push("1"),r.push("--memory-io"),A.informationOnly&&A.informationOnly&&r.push("--information-only");let I="wasm-zstd-read-point-set",n=A?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,t,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:A?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldRead:p[0]?.data,pointSet:p[1]?.data}}var nt=sn;async function ln(e,A,t={}){let o=[{type:g.JsonCompatible},{type:g.BinaryFile,data:{path:A,data:new Uint8Array}}],i=[{type:g.PointSet,data:e}],r=[];r.push("0"),r.push("0");let c=A;r.push(c),r.push("--memory-io"),t.informationOnly&&t.informationOnly&&r.push("--information-only"),t.useCompression&&t.useCompression&&r.push("--use-compression"),t.binaryFileType&&t.binaryFileType&&r.push("--binary-file-type");let I="wasm-zstd-write-point-set",n=t?.webWorker;n===void 0&&(n=await Q());let{webWorker:l,returnValue:m,stderr:s,outputs:p}=await E(I,r,o,i,{pipelineBaseUrl:y(),pipelineWorkerUrl:d(),webWorker:n,noCopy:t?.noCopy});if(m!==0&&s!=="")throw new Error(s);return{webWorker:l,couldWrite:p[0]?.data,serializedPointSet:p[1]?.data}}var at=ln;var In=new Map([["vtk",[VA,ZA]],["mz3",[XA,$A]],["obj",[et,At]],["off",[tt,rt]],["wasm",[ot,it]],["wasm-zst",[nt,at]]]),le=In;async function pn(e,A={}){let t=e.type??"",o=e.name??e.path??"fileName",i=J(o).toLowerCase(),r=A?.webWorker,a=e;if(e instanceof Blob){let s=await e.arrayBuffer();a={path:e.name,data:new Uint8Array(s)}}let u=null;if(t&&se.has(t))u=se.get(t);else if(v.has(i))u=v.get(i);else for(let s of le.values())if(s[0]!==null){let{webWorker:p,couldRead:C,pointSet:B}=await s[0]({path:a.path,data:a.data.slice()},{informationOnly:A.informationOnly,webWorker:r,noCopy:A?.noCopy});if(r=p,C)return{webWorker:r,pointSet:B}}if(!u)throw Error("Could not find IO for: "+o);let I=le.get(u)[0],{webWorker:n,couldRead:l,pointSet:m}=await I(a,{informationOnly:A.informationOnly,webWorker:r,noCopy:A?.noCopy});if(r=n,!l)throw Error("Could not read: "+o);return{webWorker:r,pointSet:m}}var un=pn;async function gn(e,A,t={}){let o=e,i=t.mimeType,r=J(A).toLowerCase(),a=t.webWorker,u=null;if(typeof i<"u"&&se.has(i))u=se.get(i);else if(v.has(r))u=v.get(r);else for(let p of le.values())if(p[1]!==null){let{webWorker:C,couldWrite:B,serializedPointSet:b}=await p[1](o,A,t);if(a=C,B)return{webWorker:a,serializedPointSet:b}}if(!u)throw Error("Could not find IO for: "+A);let I=le.get(u)[1],{webWorker:n,couldWrite:l,serializedPointSet:m}=await I(o,A,t);if(a=n,!l)throw Error("Could not write: "+A);return{webWorker:a,serializedPointSet:m}}var fn=gn;var Qr='data:text/javascript;charset=utf-8,var me=Object.defineProperty;var we=(A,t)=>{for(var e in t)me(A,e,{get:t[e],enumerable:!0})};var ft=Symbol("Comlink.proxy"),pe=Symbol("Comlink.endpoint"),Se=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),aA=Symbol("Comlink.thrown"),lt=A=>typeof A=="object"&&A!==null||typeof A=="function",Fe={canHandle:A=>lt(A)&&A[ft],serialize(A){let{port1:t,port2:e}=new MessageChannel;return fA(A,t),[e,[e]]},deserialize(A){return A.start(),Ge(A)}},Re={canHandle:A=>lt(A)&&aA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},ut=new Map([["proxy",Fe],["throw",Re]]);function Ne(A,t){for(let e of A)if(t===e||e==="*"||e instanceof RegExp&&e.test(t))return!0;return!1}function fA(A,t=globalThis,e=["*"]){t.addEventListener("message",function I(r){if(!r||!r.data)return;if(!Ne(e,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:o,type:g,path:C}=Object.assign({path:[]},r.data),Q=(r.data.argumentList||[]).map(O),a;try{let n=C.slice(0,-1).reduce((f,B)=>f[B],A),s=C.reduce((f,B)=>f[B],A);switch(g){case"GET":a=s;break;case"SET":n[C.slice(-1)[0]]=O(r.data.value),a=!0;break;case"APPLY":a=s.apply(n,Q);break;case"CONSTRUCT":{let f=new s(...Q);a=be(f)}break;case"ENDPOINT":{let{port1:f,port2:B}=new MessageChannel;fA(A,B),a=MA(f,[f])}break;case"RELEASE":a=void 0;break;default:return}}catch(n){a={value:n,[aA]:0}}Promise.resolve(a).catch(n=>({value:n,[aA]:0})).then(n=>{let[s,f]=cA(n);t.postMessage(Object.assign(Object.assign({},s),{id:o}),f),g==="RELEASE"&&(t.removeEventListener("message",I),Dt(t),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(n=>{let[s,f]=cA({value:new TypeError("Unserializable return value"),[aA]:0});t.postMessage(Object.assign(Object.assign({},s),{id:o}),f)})}),t.start&&t.start()}function Ue(A){return A.constructor.name==="MessagePort"}function Dt(A){Ue(A)&&A.close()}function Ge(A,t){return qA(A,[],t)}function BA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ht(A){return P(A,{type:"RELEASE"}).then(()=>{Dt(A)})}var QA=new WeakMap,EA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(QA.get(A)||0)-1;QA.set(A,t),t===0&&ht(A)});function ke(A,t){let e=(QA.get(t)||0)+1;QA.set(t,e),EA&&EA.register(A,t,A)}function Le(A){EA&&EA.unregister(A)}function qA(A,t=[],e=function(){}){let I=!1,r=new Proxy(e,{get(o,g){if(BA(I),g===Se)return()=>{Le(r),ht(A),I=!0};if(g==="then"){if(t.length===0)return{then:()=>r};let C=P(A,{type:"GET",path:t.map(Q=>Q.toString())}).then(O);return C.then.bind(C)}return qA(A,[...t,g])},set(o,g,C){BA(I);let[Q,a]=cA(C);return P(A,{type:"SET",path:[...t,g].map(n=>n.toString()),value:Q},a).then(O)},apply(o,g,C){BA(I);let Q=t[t.length-1];if(Q===pe)return P(A,{type:"ENDPOINT"}).then(O);if(Q==="bind")return qA(A,t.slice(0,-1));let[a,n]=ct(C);return P(A,{type:"APPLY",path:t.map(s=>s.toString()),argumentList:a},n).then(O)},construct(o,g){BA(I);let[C,Q]=ct(g);return P(A,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:C},Q).then(O)}});return ke(r,A),r}function Je(A){return Array.prototype.concat.apply([],A)}function ct(A){let t=A.map(cA);return[t.map(e=>e[0]),Je(t.map(e=>e[1]))]}var dt=new WeakMap;function MA(A,t){return dt.set(A,t),A}function be(A){return Object.assign(A,{[ft]:!0})}function cA(A){for(let[t,e]of ut)if(e.canHandle(A)){let[I,r]=e.serialize(A);return[{type:"HANDLER",name:t,value:I},r]}return[{type:"RAW",value:A},dt.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return ut.get(A.name).deserialize(A.value);case"RAW":return A.value}}function P(A,t,e){return new Promise(I=>{let r=He();A.addEventListener("message",function o(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",o),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},t),e)})}function He(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function v(A,t){return function(){return A.apply(t,arguments)}}var{toString:Ye}=Object.prototype,{getPrototypeOf:OA}=Object,uA=(A=>t=>{let e=Ye.call(t);return A[e]||(A[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),t=>uA(t)===A),DA=A=>t=>typeof t===A,{isArray:j}=Array,$=DA("undefined");function qe(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&N(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var pt=G("ArrayBuffer");function Me(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&pt(A.buffer),t}var Te=DA("string"),N=DA("function"),St=DA("number"),hA=A=>A!==null&&typeof A=="object",Ke=A=>A===!0||A===!1,lA=A=>{if(uA(A)!=="object")return!1;let t=OA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Oe=G("Date"),xe=G("File"),Pe=G("Blob"),je=G("FileList"),We=A=>hA(A)&&N(A.pipe),Ze=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||N(A.append)&&((t=uA(A))==="formdata"||t==="object"&&N(A.toString)&&A.toString()==="[object FormData]"))},Ve=G("URLSearchParams"),[_e,Xe,ze,ve]=["ReadableStream","Request","Response","Headers"].map(G),$e=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function AA(A,t,{allOwnKeys:e=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),j(A))for(I=0,r=A.length;I<r;I++)t.call(null,A[I],I,A);else{let o=e?Object.getOwnPropertyNames(A):Object.keys(A),g=o.length,C;for(I=0;I<g;I++)C=o[I],t.call(null,A[C],C,A)}}function Ft(A,t){t=t.toLowerCase();let e=Object.keys(A),I=e.length,r;for(;I-- >0;)if(r=e[I],t===r.toLowerCase())return r;return null}var x=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Rt=A=>!$(A)&&A!==x;function KA(){let{caseless:A}=Rt(this)&&this||{},t={},e=(I,r)=>{let o=A&&Ft(t,r)||r;lA(t[o])&&lA(I)?t[o]=KA(t[o],I):lA(I)?t[o]=KA({},I):j(I)?t[o]=I.slice():t[o]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&AA(arguments[I],e);return t}var AI=(A,t,e,{allOwnKeys:I}={})=>(AA(t,(r,o)=>{e&&N(r)?A[o]=v(r,e):A[o]=r},{allOwnKeys:I}),A),tI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),eI=(A,t,e,I)=>{A.prototype=Object.create(t.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),e&&Object.assign(A.prototype,e)},II=(A,t,e,I)=>{let r,o,g,C={};if(t=t||{},A==null)return t;do{for(r=Object.getOwnPropertyNames(A),o=r.length;o-- >0;)g=r[o],(!I||I(g,A,t))&&!C[g]&&(t[g]=A[g],C[g]=!0);A=e!==!1&&OA(A)}while(A&&(!e||e(A,t))&&A!==Object.prototype);return t},rI=(A,t,e)=>{A=String(A),(e===void 0||e>A.length)&&(e=A.length),e-=t.length;let I=A.indexOf(t,e);return I!==-1&&I===e},oI=A=>{if(!A)return null;if(j(A))return A;let t=A.length;if(!St(t))return null;let e=new Array(t);for(;t-- >0;)e[t]=A[t];return e},gI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&OA(Uint8Array)),iI=(A,t)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let o=r.value;t.call(A,o[0],o[1])}},nI=(A,t)=>{let e,I=[];for(;(e=A.exec(t))!==null;)I.push(e);return I},sI=G("HTMLFormElement"),CI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(e,I,r){return I.toUpperCase()+r}),mt=(({hasOwnProperty:A})=>(t,e)=>A.call(t,e))(Object.prototype),BI=G("RegExp"),Nt=(A,t)=>{let e=Object.getOwnPropertyDescriptors(A),I={};AA(e,(r,o)=>{let g;(g=t(r,o,A))!==!1&&(I[o]=g||r)}),Object.defineProperties(A,I)},aI=A=>{Nt(A,(t,e)=>{if(N(A)&&["arguments","caller","callee"].indexOf(e)!==-1)return!1;let I=A[e];if(N(I)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+e+"\'")})}})},QI=(A,t)=>{let e={},I=r=>{r.forEach(o=>{e[o]=!0})};return j(A)?I(A):I(String(A).split(t)),e},EI=()=>{},cI=(A,t)=>A!=null&&Number.isFinite(A=+A)?A:t,TA="abcdefghijklmnopqrstuvwxyz",wt="0123456789",Ut={DIGIT:wt,ALPHA:TA,ALPHA_DIGIT:TA+TA.toUpperCase()+wt},fI=(A=16,t=Ut.ALPHA_DIGIT)=>{let e="",{length:I}=t;for(;A--;)e+=t[Math.random()*I|0];return e};function lI(A){return!!(A&&N(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var uI=A=>{let t=new Array(10),e=(I,r)=>{if(hA(I)){if(t.indexOf(I)>=0)return;if(!("toJSON"in I)){t[r]=I;let o=j(I)?[]:{};return AA(I,(g,C)=>{let Q=e(g,r+1);!$(Q)&&(o[C]=Q)}),t[r]=void 0,o}}return I};return e(A,0)},DI=G("AsyncFunction"),hI=A=>A&&(hA(A)||N(A))&&N(A.then)&&N(A.catch),Gt=((A,t)=>A?setImmediate:t?((e,I)=>(x.addEventListener("message",({source:r,data:o})=>{r===x&&o===e&&I.length&&I.shift()()},!1),r=>{I.push(r),x.postMessage(e,"*")}))(`axios@${Math.random()}`,[]):e=>setTimeout(e))(typeof setImmediate=="function",N(x.postMessage)),dI=typeof queueMicrotask<"u"?queueMicrotask.bind(x):typeof process<"u"&&process.nextTick||Gt,i={isArray:j,isArrayBuffer:pt,isBuffer:qe,isFormData:Ze,isArrayBufferView:Me,isString:Te,isNumber:St,isBoolean:Ke,isObject:hA,isPlainObject:lA,isReadableStream:_e,isRequest:Xe,isResponse:ze,isHeaders:ve,isUndefined:$,isDate:Oe,isFile:xe,isBlob:Pe,isRegExp:BI,isFunction:N,isStream:We,isURLSearchParams:Ve,isTypedArray:gI,isFileList:je,forEach:AA,merge:KA,extend:AI,trim:$e,stripBOM:tI,inherits:eI,toFlatObject:II,kindOf:uA,kindOfTest:G,endsWith:rI,toArray:oI,forEachEntry:iI,matchAll:nI,isHTMLForm:sI,hasOwnProperty:mt,hasOwnProp:mt,reduceDescriptors:Nt,freezeMethods:aI,toObjectSet:QI,toCamelCase:CI,noop:EI,toFiniteNumber:cI,findKey:Ft,global:x,isContextDefined:Rt,ALPHABET:Ut,generateString:fI,isSpecCompliantForm:lI,toJSONObject:uI,isAsyncFn:DI,isThenable:hI,setImmediate:Gt,asap:dI};function W(A,t,e,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),I&&(this.request=I),r&&(this.response=r)}i.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:i.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var kt=W.prototype,Lt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Lt[A]={value:A}});Object.defineProperties(W,Lt);Object.defineProperty(kt,"isAxiosError",{value:!0});W.from=(A,t,e,I,r,o)=>{let g=Object.create(kt);return i.toFlatObject(A,g,function(Q){return Q!==Error.prototype},C=>C!=="isAxiosError"),W.call(g,A.message,t,e,I,r),g.cause=A,g.name=A.name,o&&Object.assign(g,o),g};var u=W;var dA=null;function xA(A){return i.isPlainObject(A)||i.isArray(A)}function bt(A){return i.endsWith(A,"[]")?A.slice(0,-2):A}function Jt(A,t,e){return A?A.concat(t).map(function(r,o){return r=bt(r),!e&&o?"["+r+"]":r}).join(e?".":""):t}function yI(A){return i.isArray(A)&&!A.some(xA)}var mI=i.toFlatObject(i,{},null,function(t){return/^is[A-Z]/.test(t)});function wI(A,t,e){if(!i.isObject(A))throw new TypeError("target must be an object");t=t||new(dA||FormData),e=i.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(l,c){return!i.isUndefined(c[l])});let I=e.metaTokens,r=e.visitor||n,o=e.dots,g=e.indexes,Q=(e.Blob||typeof Blob<"u"&&Blob)&&i.isSpecCompliantForm(t);if(!i.isFunction(r))throw new TypeError("visitor must be a function");function a(E){if(E===null)return"";if(i.isDate(E))return E.toISOString();if(!Q&&i.isBlob(E))throw new u("Blob is not supported. Use a Buffer instead.");return i.isArrayBuffer(E)||i.isTypedArray(E)?Q&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function n(E,l,c){let p=E;if(E&&!c&&typeof E=="object"){if(i.endsWith(l,"{}"))l=I?l:l.slice(0,-2),E=JSON.stringify(E);else if(i.isArray(E)&&yI(E)||(i.isFileList(E)||i.endsWith(l,"[]"))&&(p=i.toArray(E)))return l=bt(l),p.forEach(function(D,U){!(i.isUndefined(D)||D===null)&&t.append(g===!0?Jt([l],U,o):g===null?l:l+"[]",a(D))}),!1}return xA(E)?!0:(t.append(Jt(c,l,o),a(E)),!1)}let s=[],f=Object.assign(mI,{defaultVisitor:n,convertValue:a,isVisitable:xA});function B(E,l){if(!i.isUndefined(E)){if(s.indexOf(E)!==-1)throw Error("Circular reference detected in "+l.join("."));s.push(E),i.forEach(E,function(p,S){(!(i.isUndefined(p)||p===null)&&r.call(t,p,i.isString(S)?S.trim():S,l,f))===!0&&B(p,l?l.concat(S):[S])}),s.pop()}}if(!i.isObject(A))throw new TypeError("data must be an object");return B(A),t}var q=wI;function Ht(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return t[I]})}function Yt(A,t){this._pairs=[],A&&q(A,this,t)}var qt=Yt.prototype;qt.append=function(t,e){this._pairs.push([t,e])};qt.toString=function(t){let e=t?function(I){return t.call(this,I,Ht)}:Ht;return this._pairs.map(function(r){return e(r[0])+"="+e(r[1])},"").join("&")};var yA=Yt;function pI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function tA(A,t,e){if(!t)return A;let I=e&&e.encode||pI,r=e&&e.serialize,o;if(r?o=r(t,e):o=i.isURLSearchParams(t)?t.toString():new yA(t,e).toString(I),o){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+o}return A}var PA=class{constructor(){this.handlers=[]}use(t,e,I){return this.handlers.push({fulfilled:t,rejected:e,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){i.forEach(this.handlers,function(I){I!==null&&t(I)})}},jA=PA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Mt=typeof URLSearchParams<"u"?URLSearchParams:yA;var Tt=typeof FormData<"u"?FormData:null;var Kt=typeof Blob<"u"?Blob:null;var Ot={isBrowser:!0,classes:{URLSearchParams:Mt,FormData:Tt,Blob:Kt},protocols:["http","https","file","blob","url","data"]};var ZA={};we(ZA,{hasBrowserEnv:()=>WA,hasStandardBrowserEnv:()=>SI,hasStandardBrowserWebWorkerEnv:()=>FI,origin:()=>RI});var WA=typeof window<"u"&&typeof document<"u",SI=(A=>WA&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),FI=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",RI=WA&&window.location.href||"http://localhost";var w={...ZA,...Ot};function VA(A,t){return q(A,new w.classes.URLSearchParams,Object.assign({visitor:function(e,I,r,o){return w.isNode&&i.isBuffer(e)?(this.append(I,e.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},t))}function NI(A){return i.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function UI(A){let t={},e=Object.keys(A),I,r=e.length,o;for(I=0;I<r;I++)o=e[I],t[o]=A[o];return t}function GI(A){function t(e,I,r,o){let g=e[o++];if(g==="__proto__")return!0;let C=Number.isFinite(+g),Q=o>=e.length;return g=!g&&i.isArray(r)?r.length:g,Q?(i.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!C):((!r[g]||!i.isObject(r[g]))&&(r[g]=[]),t(e,I,r[g],o)&&i.isArray(r[g])&&(r[g]=UI(r[g])),!C)}if(i.isFormData(A)&&i.isFunction(A.entries)){let e={};return i.forEachEntry(A,(I,r)=>{t(NI(I),r,e,0)}),e}return null}var wA=GI;function kI(A,t,e){if(i.isString(A))try{return(t||JSON.parse)(A),i.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(e||JSON.stringify)(A)}var _A={transitional:mA,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){let I=e.getContentType()||"",r=I.indexOf("application/json")>-1,o=i.isObject(t);if(o&&i.isHTMLForm(t)&&(t=new FormData(t)),i.isFormData(t))return r?JSON.stringify(wA(t)):t;if(i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)||i.isReadableStream(t))return t;if(i.isArrayBufferView(t))return t.buffer;if(i.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let C;if(o){if(I.indexOf("application/x-www-form-urlencoded")>-1)return VA(t,this.formSerializer).toString();if((C=i.isFileList(t))||I.indexOf("multipart/form-data")>-1){let Q=this.env&&this.env.FormData;return q(C?{"files[]":t}:t,Q&&new Q,this.formSerializer)}}return o||r?(e.setContentType("application/json",!1),kI(t)):t}],transformResponse:[function(t){let e=this.transitional||_A.transitional,I=e&&e.forcedJSONParsing,r=this.responseType==="json";if(i.isResponse(t)||i.isReadableStream(t))return t;if(t&&i.isString(t)&&(I&&!this.responseType||r)){let g=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(C){if(g)throw C.name==="SyntaxError"?u.from(C,u.ERR_BAD_RESPONSE,this,null,this.response):C}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};i.forEach(["delete","get","head","post","put","patch"],A=>{_A.headers[A]={}});var Z=_A;var LI=i.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),xt=A=>{let t={},e,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),e=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!e||t[e]&&LI[e])&&(e==="set-cookie"?t[e]?t[e].push(I):t[e]=[I]:t[e]=t[e]?t[e]+", "+I:I)}),t};var Pt=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function pA(A){return A===!1||A==null?A:i.isArray(A)?A.map(pA):String(A)}function JI(A){let t=Object.create(null),e=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=e.exec(A);)t[I[1]]=I[2];return t}var bI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function XA(A,t,e,I,r){if(i.isFunction(I))return I.call(this,t,e);if(r&&(t=e),!!i.isString(t)){if(i.isString(I))return t.indexOf(I)!==-1;if(i.isRegExp(I))return I.test(t)}}function HI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,e,I)=>e.toUpperCase()+I)}function YI(A,t){let e=i.toCamelCase(" "+t);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+e,{value:function(r,o,g){return this[I].call(this,t,r,o,g)},configurable:!0})})}var V=class{constructor(t){t&&this.set(t)}set(t,e,I){let r=this;function o(C,Q,a){let n=eA(Q);if(!n)throw new Error("header name must be a non-empty string");let s=i.findKey(r,n);(!s||r[s]===void 0||a===!0||a===void 0&&r[s]!==!1)&&(r[s||Q]=pA(C))}let g=(C,Q)=>i.forEach(C,(a,n)=>o(a,n,Q));if(i.isPlainObject(t)||t instanceof this.constructor)g(t,e);else if(i.isString(t)&&(t=t.trim())&&!bI(t))g(xt(t),e);else if(i.isHeaders(t))for(let[C,Q]of t.entries())o(Q,C,I);else t!=null&&o(e,t,I);return this}get(t,e){if(t=eA(t),t){let I=i.findKey(this,t);if(I){let r=this[I];if(!e)return r;if(e===!0)return JI(r);if(i.isFunction(e))return e.call(this,r,I);if(i.isRegExp(e))return e.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=eA(t),t){let I=i.findKey(this,t);return!!(I&&this[I]!==void 0&&(!e||XA(this,this[I],I,e)))}return!1}delete(t,e){let I=this,r=!1;function o(g){if(g=eA(g),g){let C=i.findKey(I,g);C&&(!e||XA(I,I[C],C,e))&&(delete I[C],r=!0)}}return i.isArray(t)?t.forEach(o):o(t),r}clear(t){let e=Object.keys(this),I=e.length,r=!1;for(;I--;){let o=e[I];(!t||XA(this,this[o],o,t,!0))&&(delete this[o],r=!0)}return r}normalize(t){let e=this,I={};return i.forEach(this,(r,o)=>{let g=i.findKey(I,o);if(g){e[g]=pA(r),delete e[o];return}let C=t?HI(o):String(o).trim();C!==o&&delete e[o],e[C]=pA(r),I[C]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let e=Object.create(null);return i.forEach(this,(I,r)=>{I!=null&&I!==!1&&(e[r]=t&&i.isArray(I)?I.join(", "):I)}),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,e])=>t+": "+e).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){let I=new this(t);return e.forEach(r=>I.set(r)),I}static accessor(t){let I=(this[Pt]=this[Pt]={accessors:{}}).accessors,r=this.prototype;function o(g){let C=eA(g);I[C]||(YI(r,g),I[C]=!0)}return i.isArray(t)?t.forEach(o):o(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);i.reduceDescriptors(V.prototype,({value:A},t)=>{let e=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(I){this[e]=I}}});i.freezeMethods(V);var m=V;function IA(A,t){let e=this||Z,I=t||e,r=m.from(I.headers),o=I.data;return i.forEach(A,function(C){o=C.call(e,o,r.normalize(),t?t.status:void 0)}),r.normalize(),o}function rA(A){return!!(A&&A.__CANCEL__)}function jt(A,t,e){u.call(this,A??"canceled",u.ERR_CANCELED,t,e),this.name="CanceledError"}i.inherits(jt,u,{__CANCEL__:!0});var b=jt;function oA(A,t,e){let I=e.config.validateStatus;!e.status||!I||I(e.status)?A(e):t(new u("Request failed with status code "+e.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}function zA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function qI(A,t){A=A||10;let e=new Array(A),I=new Array(A),r=0,o=0,g;return t=t!==void 0?t:1e3,function(Q){let a=Date.now(),n=I[o];g||(g=a),e[r]=Q,I[r]=a;let s=o,f=0;for(;s!==r;)f+=e[s++],s=s%A;if(r=(r+1)%A,r===o&&(o=(o+1)%A),a-g<t)return;let B=n&&a-n;return B?Math.round(f*1e3/B):void 0}}var Wt=qI;function MI(A,t){let e=0,I=1e3/t,r,o,g=(a,n=Date.now())=>{e=n,r=null,o&&(clearTimeout(o),o=null),A.apply(null,a)};return[(...a)=>{let n=Date.now(),s=n-e;s>=I?g(a,n):(r=a,o||(o=setTimeout(()=>{o=null,g(r)},I-s)))},()=>r&&g(r)]}var Zt=MI;var _=(A,t,e=3)=>{let I=0,r=Wt(50,250);return Zt(o=>{let g=o.loaded,C=o.lengthComputable?o.total:void 0,Q=g-I,a=r(Q),n=g<=C;I=g;let s={loaded:g,total:C,progress:C?g/C:void 0,bytes:Q,rate:a||void 0,estimated:a&&C&&n?(C-g)/a:void 0,event:o,lengthComputable:C!=null,[t?"download":"upload"]:!0};A(s)},e)},vA=(A,t)=>{let e=A!=null;return[I=>t[0]({lengthComputable:e,total:A,loaded:I}),t[1]]},$A=A=>(...t)=>i.asap(()=>A(...t));var Vt=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a"),I;function r(o){let g=o;return t&&(e.setAttribute("href",g),g=e.href),e.setAttribute("href",g),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\\?/,""):"",hash:e.hash?e.hash.replace(/^%23/,""):"",hostname:e.hostname,port:e.port,pathname:e.pathname.charAt(0)==="/"?e.pathname:"/"+e.pathname}}return I=r(window.location.href),function(g){let C=i.isString(g)?r(g):g;return C.protocol===I.protocol&&C.host===I.host}}():function(){return function(){return!0}}();var _t=w.hasStandardBrowserEnv?{write(A,t,e,I,r,o){let g=[A+"="+encodeURIComponent(t)];i.isNumber(e)&&g.push("expires="+new Date(e).toGMTString()),i.isString(I)&&g.push("path="+I),i.isString(r)&&g.push("domain="+r),o===!0&&g.push("secure"),document.cookie=g.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function At(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function tt(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function gA(A,t){return A&&!At(t)?tt(A,t):t}var Xt=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let e={};function I(a,n,s){return i.isPlainObject(a)&&i.isPlainObject(n)?i.merge.call({caseless:s},a,n):i.isPlainObject(n)?i.merge({},n):i.isArray(n)?n.slice():n}function r(a,n,s){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a,s)}else return I(a,n,s)}function o(a,n){if(!i.isUndefined(n))return I(void 0,n)}function g(a,n){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a)}else return I(void 0,n)}function C(a,n,s){if(s in t)return I(a,n);if(s in A)return I(void 0,a)}let Q={url:o,method:o,data:o,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,withXSRFToken:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:C,headers:(a,n)=>r(Xt(a),Xt(n),!0)};return i.forEach(Object.keys(Object.assign({},A,t)),function(n){let s=Q[n]||r,f=s(A[n],t[n],n);i.isUndefined(f)&&s!==C||(e[n]=f)}),e}var SA=A=>{let t=k({},A),{data:e,withXSRFToken:I,xsrfHeaderName:r,xsrfCookieName:o,headers:g,auth:C}=t;t.headers=g=m.from(g),t.url=tA(gA(t.baseURL,t.url),A.params,A.paramsSerializer),C&&g.set("Authorization","Basic "+btoa((C.username||"")+":"+(C.password?unescape(encodeURIComponent(C.password)):"")));let Q;if(i.isFormData(e)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)g.setContentType(void 0);else if((Q=g.getContentType())!==!1){let[a,...n]=Q?Q.split(";").map(s=>s.trim()).filter(Boolean):[];g.setContentType([a||"multipart/form-data",...n].join("; "))}}if(w.hasStandardBrowserEnv&&(I&&i.isFunction(I)&&(I=I(t)),I||I!==!1&&Vt(t.url))){let a=r&&o&&_t.read(o);a&&g.set(r,a)}return t};var TI=typeof XMLHttpRequest<"u",zt=TI&&function(A){return new Promise(function(e,I){let r=SA(A),o=r.data,g=m.from(r.headers).normalize(),{responseType:C,onUploadProgress:Q,onDownloadProgress:a}=r,n,s,f,B,E;function l(){B&&B(),E&&E(),r.cancelToken&&r.cancelToken.unsubscribe(n),r.signal&&r.signal.removeEventListener("abort",n)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function p(){if(!c)return;let D=m.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),K={data:!C||C==="text"||C==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:D,config:A,request:c};oA(function(J){e(J),l()},function(J){I(J),l()},K),c=null}"onloadend"in c?c.onloadend=p:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(p)},c.onabort=function(){c&&(I(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){I(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let U=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",K=r.transitional||mA;r.timeoutErrorMessage&&(U=r.timeoutErrorMessage),I(new u(U,K.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},o===void 0&&g.setContentType(null),"setRequestHeader"in c&&i.forEach(g.toJSON(),function(U,K){c.setRequestHeader(K,U)}),i.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),C&&C!=="json"&&(c.responseType=r.responseType),a&&([f,E]=_(a,!0),c.addEventListener("progress",f)),Q&&c.upload&&([s,B]=_(Q),c.upload.addEventListener("progress",s),c.upload.addEventListener("loadend",B)),(r.cancelToken||r.signal)&&(n=D=>{c&&(I(!D||D.type?new b(null,A,c):D),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(n),r.signal&&(r.signal.aborted?n():r.signal.addEventListener("abort",n)));let S=zA(r.url);if(S&&w.protocols.indexOf(S)===-1){I(new u("Unsupported protocol "+S+":",u.ERR_BAD_REQUEST,A));return}c.send(o||null)})};var KI=(A,t)=>{let e=new AbortController,I,r=function(Q){if(!I){I=!0,g();let a=Q instanceof Error?Q:this.reason;e.abort(a instanceof u?a:new b(a instanceof Error?a.message:a))}},o=t&&setTimeout(()=>{r(new u(`timeout ${t} of ms exceeded`,u.ETIMEDOUT))},t),g=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(Q=>{Q&&(Q.removeEventListener?Q.removeEventListener("abort",r):Q.unsubscribe(r))}),A=null)};A.forEach(Q=>Q&&Q.addEventListener&&Q.addEventListener("abort",r));let{signal:C}=e;return C.unsubscribe=g,[C,()=>{o&&clearTimeout(o),o=null}]},vt=KI;var OI=function*(A,t){let e=A.byteLength;if(!t||e<t){yield A;return}let I=0,r;for(;I<e;)r=I+t,yield A.slice(I,r),I=r},xI=async function*(A,t,e){for await(let I of A)yield*OI(ArrayBuffer.isView(I)?I:await e(String(I)),t)},et=(A,t,e,I,r)=>{let o=xI(A,t,r),g=0,C,Q=a=>{C||(C=!0,I&&I(a))};return new ReadableStream({async pull(a){try{let{done:n,value:s}=await o.next();if(n){Q(),a.close();return}let f=s.byteLength;if(e){let B=g+=f;e(B)}a.enqueue(new Uint8Array(s))}catch(n){throw Q(n),n}},cancel(a){return Q(a),o.return()}},{highWaterMark:2})};var RA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Ae=RA&&typeof ReadableStream=="function",It=RA&&(typeof TextEncoder=="function"?(A=>t=>A.encode(t))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),te=(A,...t)=>{try{return!!A(...t)}catch{return!1}},PI=Ae&&te(()=>{let A=!1,t=new Request(w.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!t}),$t=64*1024,rt=Ae&&te(()=>i.isReadableStream(new Response("").body)),FA={stream:rt&&(A=>A.body)};RA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!FA[t]&&(FA[t]=i.isFunction(A[t])?e=>e[t]():(e,I)=>{throw new u(`Response type \'${t}\' is not supported`,u.ERR_NOT_SUPPORT,I)})})})(new Response);var jI=async A=>{if(A==null)return 0;if(i.isBlob(A))return A.size;if(i.isSpecCompliantForm(A))return(await new Request(A).arrayBuffer()).byteLength;if(i.isArrayBufferView(A)||i.isArrayBuffer(A))return A.byteLength;if(i.isURLSearchParams(A)&&(A=A+""),i.isString(A))return(await It(A)).byteLength},WI=async(A,t)=>{let e=i.toFiniteNumber(A.getContentLength());return e??jI(t)},ee=RA&&(async A=>{let{url:t,method:e,data:I,signal:r,cancelToken:o,timeout:g,onDownloadProgress:C,onUploadProgress:Q,responseType:a,headers:n,withCredentials:s="same-origin",fetchOptions:f}=SA(A);a=a?(a+"").toLowerCase():"text";let[B,E]=r||o||g?vt([r,o],g):[],l,c,p=()=>{!l&&setTimeout(()=>{B&&B.unsubscribe()}),l=!0},S;try{if(Q&&PI&&e!=="get"&&e!=="head"&&(S=await WI(n,I))!==0){let L=new Request(t,{method:"POST",body:I,duplex:"half"}),J;if(i.isFormData(I)&&(J=L.headers.get("content-type"))&&n.setContentType(J),L.body){let[HA,CA]=vA(S,_($A(Q)));I=et(L.body,$t,HA,CA,It)}}i.isString(s)||(s=s?"include":"omit"),c=new Request(t,{...f,signal:B,method:e.toUpperCase(),headers:n.normalize().toJSON(),body:I,duplex:"half",credentials:s});let D=await fetch(c),U=rt&&(a==="stream"||a==="response");if(rt&&(C||U)){let L={};["status","statusText","headers"].forEach(Et=>{L[Et]=D[Et]});let J=i.toFiniteNumber(D.headers.get("content-length")),[HA,CA]=C&&vA(J,_($A(C),!0))||[];D=new Response(et(D.body,$t,HA,()=>{CA&&CA(),U&&p()},It),L)}a=a||"text";let K=await FA[i.findKey(FA,a)||"text"](D,A);return!U&&p(),E&&E(),await new Promise((L,J)=>{oA(L,J,{data:K,headers:m.from(D.headers),status:D.status,statusText:D.statusText,config:A,request:c})})}catch(D){throw p(),D&&D.name==="TypeError"&&/fetch/i.test(D.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,c),{cause:D.cause||D}):u.from(D,D&&D.code,A,c)}});var ot={http:dA,xhr:zt,fetch:ee};i.forEach(ot,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Ie=A=>`- ${A}`,ZI=A=>i.isFunction(A)||A===null||A===!1,NA={getAdapter:A=>{A=i.isArray(A)?A:[A];let{length:t}=A,e,I,r={};for(let o=0;o<t;o++){e=A[o];let g;if(I=e,!ZI(e)&&(I=ot[(g=String(e)).toLowerCase()],I===void 0))throw new u(`Unknown adapter \'${g}\'`);if(I)break;r[g||"%23"+o]=I}if(!I){let o=Object.entries(r).map(([C,Q])=>`adapter ${C} `+(Q===!1?"is not supported by the environment":"is not available in the build")),g=t?o.length>1?`since :%0A`+o.map(Ie).join(`%0A`):" "+Ie(o[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+g,"ERR_NOT_SUPPORT")}return I},adapters:ot};function gt(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new b(null,A)}function UA(A){return gt(A),A.headers=m.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),NA.getAdapter(A.adapter||Z.adapter)(A).then(function(I){return gt(A),I.data=IA.call(A,A.transformResponse,I),I.headers=m.from(I.headers),I},function(I){return rA(I)||(gt(A),I&&I.response&&(I.response.data=IA.call(A,A.transformResponse,I.response),I.response.headers=m.from(I.response.headers))),Promise.reject(I)})}var GA="1.7.4";var it={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{it[A]=function(I){return typeof I===A||"a"+(t<1?"n ":" ")+A}});var re={};it.transitional=function(t,e,I){function r(o,g){return"[Axios v"+GA+"] Transitional option \'"+o+"\'"+g+(I?". "+I:"")}return(o,g,C)=>{if(t===!1)throw new u(r(g," has been removed"+(e?" in "+e:"")),u.ERR_DEPRECATED);return e&&!re[g]&&(re[g]=!0,console.warn(r(g," has been deprecated since v"+e+" and will be removed in the near future"))),t?t(o,g,C):!0}};function VI(A,t,e){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let o=I[r],g=t[o];if(g){let C=A[o],Q=C===void 0||g(C,o,A);if(Q!==!0)throw new u("option "+o+" must be "+Q,u.ERR_BAD_OPTION_VALUE);continue}if(e!==!0)throw new u("Unknown option "+o,u.ERR_BAD_OPTION)}}var kA={assertOptions:VI,validators:it};var M=kA.validators,X=class{constructor(t){this.defaults=t,this.interceptors={request:new jA,response:new jA}}async request(t,e){try{return await this._request(t,e)}catch(I){if(I instanceof Error){let r;Error.captureStackTrace?Error.captureStackTrace(r={}):r=new Error;let o=r.stack?r.stack.replace(/^.+\\n/,""):"";try{I.stack?o&&!String(I.stack).endsWith(o.replace(/^.+\\n.+\\n/,""))&&(I.stack+=`%0A`+o):I.stack=o}catch{}}throw I}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=k(this.defaults,e);let{transitional:I,paramsSerializer:r,headers:o}=e;I!==void 0&&kA.assertOptions(I,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),r!=null&&(i.isFunction(r)?e.paramsSerializer={serialize:r}:kA.assertOptions(r,{encode:M.function,serialize:M.function},!0)),e.method=(e.method||this.defaults.method||"get").toLowerCase();let g=o&&i.merge(o.common,o[e.method]);o&&i.forEach(["delete","get","head","post","put","patch","common"],E=>{delete o[E]}),e.headers=m.concat(g,o);let C=[],Q=!0;this.interceptors.request.forEach(function(l){typeof l.runWhen=="function"&&l.runWhen(e)===!1||(Q=Q&&l.synchronous,C.unshift(l.fulfilled,l.rejected))});let a=[];this.interceptors.response.forEach(function(l){a.push(l.fulfilled,l.rejected)});let n,s=0,f;if(!Q){let E=[UA.bind(this),void 0];for(E.unshift.apply(E,C),E.push.apply(E,a),f=E.length,n=Promise.resolve(e);s<f;)n=n.then(E[s++],E[s++]);return n}f=C.length;let B=e;for(s=0;s<f;){let E=C[s++],l=C[s++];try{B=E(B)}catch(c){l.call(this,c);break}}try{n=UA.call(this,B)}catch(E){return Promise.reject(E)}for(s=0,f=a.length;s<f;)n=n.then(a[s++],a[s++]);return n}getUri(t){t=k(this.defaults,t);let e=gA(t.baseURL,t.url);return tA(e,t.params,t.paramsSerializer)}};i.forEach(["delete","get","head","options"],function(t){X.prototype[t]=function(e,I){return this.request(k(I||{},{method:t,url:e,data:(I||{}).data}))}});i.forEach(["post","put","patch"],function(t){function e(I){return function(o,g,C){return this.request(k(C||{},{method:t,headers:I?{"Content-Type":"multipart/form-data"}:{},url:o,data:g}))}}X.prototype[t]=e(),X.prototype[t+"Form"]=e(!0)});var iA=X;var nt=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let e;this.promise=new Promise(function(o){e=o});let I=this;this.promise.then(r=>{if(!I._listeners)return;let o=I._listeners.length;for(;o-- >0;)I._listeners[o](r);I._listeners=null}),this.promise.then=r=>{let o,g=new Promise(C=>{I.subscribe(C),o=C}).then(r);return g.cancel=function(){I.unsubscribe(o)},g},t(function(o,g,C){I.reason||(I.reason=new b(o,g,C),e(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let e=this._listeners.indexOf(t);e!==-1&&this._listeners.splice(e,1)}static source(){let t;return{token:new A(function(r){t=r}),cancel:t}}},oe=nt;function st(A){return function(e){return A.apply(null,e)}}function Ct(A){return i.isObject(A)&&A.isAxiosError===!0}var Bt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Bt).forEach(([A,t])=>{Bt[t]=A});var ge=Bt;function ie(A){let t=new iA(A),e=v(iA.prototype.request,t);return i.extend(e,iA.prototype,t,{allOwnKeys:!0}),i.extend(e,t,null,{allOwnKeys:!0}),e.create=function(r){return ie(k(A,r))},e}var d=ie(Z);d.Axios=iA;d.CanceledError=b;d.CancelToken=oe;d.isCancel=rA;d.VERSION=GA;d.toFormData=q;d.AxiosError=u;d.Cancel=d.CanceledError;d.all=function(t){return Promise.all(t)};d.spread=st;d.isAxiosError=Ct;d.mergeConfig=k;d.AxiosHeaders=m;d.formToJSON=A=>wA(i.isHTMLForm(A)?new FormData(A):A);d.getAdapter=NA.getAdapter;d.HttpStatusCode=ge;d.default=d;var LA=d;var{Axios:Ei,AxiosError:ci,CanceledError:fi,isCancel:li,CancelToken:ui,VERSION:Di,all:hi,Cancel:di,isAxiosError:yi,spread:mi,toFormData:wi,AxiosHeaders:pi,HttpStatusCode:Si,formToJSON:Fi,getAdapter:Ri,mergeConfig:Ni}=LA;var nA,Y,Qt,at={env:{emscripten_notify_memory_growth:function(A){Qt=new Uint8Array(Y.exports.memory.buffer)}}},JA=class{init(){return nA||(typeof fetch<"u"?nA=fetch("data:application/wasm;base64,"+ne).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,at)).then(this._init):nA=WebAssembly.instantiate(Buffer.from(ne,"base64"),at).then(this._init),nA)}_init(t){Y=t.instance,at.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=t.byteLength,r=Y.exports.malloc(I);Qt.set(t,r),e=e||Number(Y.exports.ZSTD_findDecompressedSize(r,I));let o=Y.exports.malloc(e),g=Y.exports.ZSTD_decompress(o,e,r,I),C=Qt.slice(o,o+g);return Y.exports.free(r),Y.exports.free(o),C}},ne="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var se=new JA,Ce=!1;async function _I(A,t,e){let I=null;typeof A!="string"?I=A.href:A.startsWith("http")?I=A:I=`${t}/${A}`,I.endsWith(".js")&&(I=I.substring(0,I.length-3)),I.endsWith(".wasm")&&(I=I.substring(0,I.length-5));let r=`${I}.wasm`,o=await LA.get(`${r}.zst`,{responseType:"arraybuffer",params:e});Ce||(await se.init(),Ce=!0);let C=se.decode(new Uint8Array(o.data)).buffer;return(await import(`${I}.js`)).default({wasmBinary:C})}var Be=_I;var bA=new Map;async function XI(A,t,e){let I=A,r=A,o=null;return typeof A!="string"&&(I=new URL(A.href),r=I.href),bA.has(r)?o=await bA.get(r):(bA.set(r,Be(I,t,e)),o=await bA.get(r)),o}var ae=XI;var zI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},h=zI;var vI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},R=vI;var $I={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},z=$I;function Ar(A,t){let e=null;switch(A){case R.UInt8:{e=new Uint8Array(t);break}case R.Int8:{e=new Int8Array(t);break}case R.UInt16:{e=new Uint16Array(t);break}case R.Int16:{e=new Int16Array(t);break}case R.UInt32:{e=new Uint32Array(t);break}case R.Int32:{e=new Int32Array(t);break}case R.UInt64:{typeof globalThis.BigUint64Array=="function"?e=new BigUint64Array(t):e=new Uint8Array(t);break}case R.Int64:{typeof globalThis.BigInt64Array=="function"?e=new BigInt64Array(t):e=new Uint8Array(t);break}case z.Float32:{e=new Float32Array(t);break}case z.Float64:{e=new Float64Array(t);break}case"null":{e=null;break}case null:{e=null;break}default:throw new Error("Type is not supported as a TypedArray")}return e}var H=Ar;var ce=typeof globalThis.SharedArrayBuffer=="function",Qe=new TextEncoder,Ee=new TextDecoder("utf-8");function tr(A,t){let e={flags:"r",encoding:"binary"},I=A.fs_open(t,e.flags),o=A.fs_stat(t).size,g=null;ce?g=new SharedArrayBuffer(o):g=new ArrayBuffer(o);let C=new Uint8Array(g);return A.fs_read(I,C,0,o,0),A.fs_close(I),C}function fe(A,t,e){let I=null;ce?I=new SharedArrayBuffer(e):I=new ArrayBuffer(e);let r=new Uint8Array(I),o=new Uint8Array(A.HEAPU8.buffer,t,e);return r.set(o),r}function y(A,t,e,I){let r=0;return t!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,e,I,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),r)),r}function T(A,t,e){let I=JSON.stringify(t),r=A.lengthBytesUTF8(I)+1,o=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,e,r]);A.stringToUTF8(I,o,r)}function F(A,t,e,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,e]),o=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,e]),g=fe(A,r,o);return H(I,g.buffer)}function sA(A,t){let e=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),I=A.UTF8ToString(e);return JSON.parse(I)}function er(A,t,e,I){I!=null&&I.length>0&&I.forEach(function(a,n){switch(a.type){case h.TextStream:{let s=Qe.encode(a.data.data),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.JsonCompatible:{let s=Qe.encode(JSON.stringify(a.data)),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.BinaryStream:{let s=a.data.data,f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.TextFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.BinaryFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.Image:{let s=a.data,f=y(A,s.data,n,0),B=y(A,s.direction,n,1),E=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],l={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${B}`,size:s.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};T(A,l,n);break}case h.Mesh:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.cells,n,1),E=y(A,s.pointData,n,2),l=y(A,s.cellData,n,3),c={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${B}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${l}`};T(A,c,n);break}case h.PointSet:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.pointData,n,1),E={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`};T(A,E,n);break}case h.TransformList:{let s=a.data,f=[];s.forEach((B,E)=>{let c=`data:application/vnd.itk.address,0:${y(A,B.fixedParameters,n,E*2)}`,S=`data:application/vnd.itk.address,0:${y(A,B.parameters,n,E*2+1)}`,D={transformType:B.transformType,numberOfFixedParameters:B.numberOfFixedParameters,numberOfParameters:B.numberOfParameters,name:B.name,inputSpaceName:B.inputSpaceName,outputSpaceName:B.outputSpaceName,parameters:S,fixedParameters:c};f.push(D)}),T(A,f,n);break}case h.PolyData:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.vertices,n,1),E=y(A,s.lines,n,2),l=y(A,s.polygons,n,3),c=y(A,s.triangleStrips,n,4),p=y(A,s.pointData,n,5),S=y(A,s.pointData,n,6),D={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${B}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${l}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${S}`};T(A,D,n);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),o=0;try{o=A.callMain(t.slice())}catch(a){throw typeof a=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(a)):console.error("Build module in Debug mode for exception message information.")),a}finally{A.stackRestore(r)}let g=A.getModuleStdout(),C=A.getModuleStderr(),Q=[];return e!=null&&e.length>0&&o===0&&e.forEach(function(a,n){let s=null;switch(a.type){case h.TextStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s={data:Ee.decode(l)};break}case h.JsonCompatible:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s=JSON.parse(Ee.decode(l));break}case h.BinaryStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);s={data:fe(A,B,E)};break}case h.TextFile:{s={path:a.data.path,data:A.fs_readFile(a.data.path,{encoding:"utf8"})};break}case h.BinaryFile:{s={path:a.data.path,data:tr(A,a.data.path)};break}case h.Image:{let B=sA(A,n);B.data=F(A,n,0,B.imageType.componentType),B.direction=F(A,n,1,z.Float64),B.metadata=new Map(B.metadata),s=B;break}case h.Mesh:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.meshType.pointComponentType):B.points=H(B.meshType.pointComponentType,new ArrayBuffer(0)),B.numberOfCells>0?B.cells=F(A,n,1,B.meshType.cellComponentType):B.cells=H(B.meshType.cellComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,2,B.meshType.pointPixelComponentType):B.pointData=H(B.meshType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,3,B.meshType.cellPixelComponentType):B.cellData=H(B.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.PointSet:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.pointSetType.pointComponentType):B.points=H(B.pointSetType.pointComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,1,B.pointSetType.pointPixelComponentType):B.pointData=H(B.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.TransformList:{let B=sA(A,n);B.forEach((E,l)=>{E.numberOfFixedParameters>0&&(B[l].fixedParameters=F(A,n,l*2,E.transformType.parametersValueType)),E.numberOfFixedParameters>0&&(B[l].parameters=F(A,n,l*2+1,E.transformType.parametersValueType))}),s=B;break}case h.PolyData:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,z.Float32):B.points=new Float32Array,B.verticesBufferSize>0?B.vertices=F(A,n,1,R.UInt32):B.vertices=new Uint32Array,B.linesBufferSize>0?B.lines=F(A,n,2,R.UInt32):B.lines=new Uint32Array,B.polygonsBufferSize>0?B.polygons=F(A,n,3,R.UInt32):B.polygons=new Uint32Array,B.triangleStripsBufferSize>0?B.triangleStrips=F(A,n,4,R.UInt32):B.triangleStrips=new Uint32Array,B.numberOfPointPixels>0?B.pointData=F(A,n,5,B.polyDataType.pointPixelComponentType):B.pointData=H(B.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,6,B.polyDataType.cellPixelComponentType):B.cellData=H(B.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}default:throw Error("Unsupported output InterfaceType")}let f={type:a.type,data:s};Q.push(f)}),{returnValue:o,stdout:g,stderr:C,outputs:Q}}var le=er;var Ir=typeof globalThis.SharedArrayBuffer<"u";function rr(A,t){if(A==null)return[];let e=[];for(let I=0;I<A.length;I++){let r=or(A[I],t);r!==null&&e.push(r)}return e}function or(A,t){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Ir&&e instanceof SharedArrayBuffer?null:t?e:e.slice(0)}var ue=rr;function gr(A){return[A.data,A.direction]}var De=gr;function ir(A){return[A.points,A.pointData,A.cells,A.cellData]}var he=ir;function nr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var de=nr;async function sr(A,t,e,I){let r=le(A,t,e,I),o=[];return r.outputs.forEach(function(g){if(g.type===h.BinaryStream||g.type===h.BinaryFile){let C=g.data;o.push(C)}else if(g.type===h.Image){let C=g.data;o.push(...De(C))}else if(g.type===h.Mesh){let C=g.data;o.push(...he(C))}else if(g.type===h.PolyData){let C=g.data;o.push(...de(C))}}),MA(r,ue(o,!0))}var ye=sr;var Cr={runPipeline:async function(A,t,e,I,r,o){let g=await ae(A,t,o);return await ye(g,e,I,r)}};fA(Cr);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';Er(Qr);export{YA as byuReadMesh,KA as byuWriteMesh,j as extensionToMeshIo,v as extensionToPointSetIo,jA as freeSurferAsciiReadMesh,vA as freeSurferAsciiWriteMesh,zA as freeSurferBinaryReadMesh,_A as freeSurferBinaryWriteMesh,Q as getDefaultWebWorker,d as getPipelineWorkerUrl,y as getPipelinesBaseUrl,MA as mz3ReadMesh,XA as mz3ReadPointSet,xA as mz3WriteMesh,$A as mz3WritePointSet,FA as objReadMesh,et as objReadPointSet,PA as objWriteMesh,At as objWritePointSet,OA as offReadMesh,tt as offReadPointSet,NA as offWriteMesh,rt as offWritePointSet,vi as readMesh,un as readPointSet,ZI as setDefaultWebWorker,Er as setPipelineWorkerUrl,YI as setPipelinesBaseUrl,WA as stlReadMesh,UA as stlWriteMesh,HA as swcReadMesh,qA as swcWriteMesh,DA as vtkPolyDataReadMesh,VA as vtkPolyDataReadPointSet,kA as vtkPolyDataWriteMesh,ZA as vtkPolyDataWritePointSet,TA as wasmReadMesh,ot as wasmReadPointSet,LA as wasmWriteMesh,it as wasmWritePointSet,GA as wasmZstdReadMesh,nt as wasmZstdReadPointSet,JA as wasmZstdWriteMesh,at as wasmZstdWritePointSet,_i as writeMesh,fn as writePointSet};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
