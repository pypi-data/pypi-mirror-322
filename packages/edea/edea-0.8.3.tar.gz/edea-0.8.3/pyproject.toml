[tool.poetry]
name = "edea"
version = "0.8.3"
description = "KiCAD file format parser and tools"
readme = "README.md"
repository = "https://gitlab.com/edea-dev/edea"
documentation = "https://edea-dev.gitlab.io/edea/latest/get_started.html"
authors = [
    "Elen Eisendle <ln@calcifer.ee>",
    "Kaspar Emanuel <kaspar@kitspace.org>",
    "Abdulrhmn Ghanem <abdoghanem160@gmail.com>",
]
license = "EUPL-1.2"


[tool.poetry.dependencies]
python = "<3.14,>=3.10"
pydantic = "^2.9.2"
numpy = "^1.26.1"
typer = { extras = ["all"], version = "^0.9.0" }
gitpython = "^3.1.43"
requests = "^2.32.3"
packaging = "^24.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
black = "^24.4.2"
datamodel-code-generator = { extras = ["http"], version = "^0.25.2" }
hypothesis = "^6.108.2"
matplotlib = "^3.9.1"
myst-parser = "^3.0.1"
nox = "^2024.4.15"
poethepoet = "^0.27.0"
pydoclint = "^0.5.4"
pyinstrument = "^4.6.2"
pylint = "^3.2.5"
pylint-pydantic = "^0.3.2"
pyright = "^1.1.382.post1"
pytest = "^8.3.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-only = "^2.1.2"
pytest-profiling = "^1.7.0"
pytest-xdist = "^3.6.1"
ruff = "^0.5.2"
sphinx-autobuild = "^2024.4.16"
sphinx-favicon = "^1.0.1"
sphinx-inline-tabs = "^2023.4.21"
sphinx-last-updated-by-git = "^0.3.7"
sphinx-notfound-page = "^1.0.2"
sphinx-sitemap = "^2.6.0"
sphinx-tippy = "^0.4.3"
sphinxawesome-theme = "^5.2.0"
sphinxcontrib-asciinema = "^0.3.8"
sphinxext-opengraph = "^0.9.1"
watchfiles = "^0.22.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]
ignore = []
fixable = ["ALL"]


[tool.pytest.ini_options]
markers = [
    "long_running: marks test as taking a long time (deselect with '-m \"not long_running\")",
]


[tool.coverage.run]
omit = ["edea/cli.py"]

[tool.poetry.scripts]
edea = "edea.cli:cli"

[tool.poe.tasks]
fmt = "poetry run black edea tests docs --exclude tests/kicad_projects"
ruff = "poetry run ruff check edea tests --exclude tests/kicad_projects/kicad-test-files"

[tool.poe.tasks.profile]
shell = """
    pyinstrument --show-all -r html -o $file.prof.html $file && \
    (lsof -i:8000 || \
    (python -m http.server -d tests/benchmark & \
    SERVER_PID=$!; \
    xdg-open http://localhost:8000/$(basename $file).prof.html; \
    sleep 5; \
    kill $SERVER_PID))
"""

[[tool.poe.tasks.profile.args]]
name = "file"
help = "File to profile"

[tool.poe.tasks.benchmark]
shell = "hyperfine 'python $file'"

[[tool.poe.tasks.benchmark.args]]
name = "file"
help = "File to benchmark"

[tool.poe.tasks.docs]
shell = "rm -rf docs/_build && sphinx-autobuild --port 4444 --watch edea docs docs/_build"

[tool.poe.tasks.docs-lint]
shell = "pydoclint edea && vale docs"
