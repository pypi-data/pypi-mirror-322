"""
    ai/h2o/engine/v1/adjusted_dai_profile.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from h2o_engine_manager.gen.api_client import ApiClient, Endpoint as _Endpoint
from h2o_engine_manager.gen.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from h2o_engine_manager.gen.model.internal_h2_o_version_resource import InternalH2OVersionResource
from h2o_engine_manager.gen.model.rpc_status import RpcStatus
from h2o_engine_manager.gen.model.v1_assign_internal_h2_o_version_aliases_request import V1AssignInternalH2OVersionAliasesRequest
from h2o_engine_manager.gen.model.v1_assign_internal_h2_o_version_aliases_response import V1AssignInternalH2OVersionAliasesResponse
from h2o_engine_manager.gen.model.v1_create_internal_h2_o_version_response import V1CreateInternalH2OVersionResponse
from h2o_engine_manager.gen.model.v1_get_internal_h2_o_version_response import V1GetInternalH2OVersionResponse
from h2o_engine_manager.gen.model.v1_internal_h2_o_version import V1InternalH2OVersion
from h2o_engine_manager.gen.model.v1_list_internal_h2_o_versions_response import V1ListInternalH2OVersionsResponse
from h2o_engine_manager.gen.model.v1_update_internal_h2_o_version_response import V1UpdateInternalH2OVersionResponse


class InternalH2OVersionServiceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.internal_h2_o_version_service_assign_internal_h2_o_version_aliases_endpoint = _Endpoint(
            settings={
                'response_type': (V1AssignInternalH2OVersionAliasesResponse,),
                'auth': [],
                'endpoint_path': '/v1/internalH2OVersions:assignInternalH2OVersionAliases',
                'operation_id': 'internal_h2_o_version_service_assign_internal_h2_o_version_aliases',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (V1AssignInternalH2OVersionAliasesRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.internal_h2_o_version_service_create_internal_h2_o_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1CreateInternalH2OVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/internalH2OVersions',
                'operation_id': 'internal_h2_o_version_service_create_internal_h2_o_version',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'internal_h2o_version_id',
                    'internal_h2o_version',
                ],
                'required': [
                    'internal_h2o_version_id',
                    'internal_h2o_version',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'internal_h2o_version_id':
                        (str,),
                    'internal_h2o_version':
                        (V1InternalH2OVersion,),
                },
                'attribute_map': {
                    'internal_h2o_version_id': 'internalH2oVersionId',
                },
                'location_map': {
                    'internal_h2o_version_id': 'query',
                    'internal_h2o_version': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.internal_h2_o_version_service_delete_internal_h2_o_version_endpoint = _Endpoint(
            settings={
                'response_type': (bool, date, datetime, dict, float, int, list, str, none_type,),
                'auth': [],
                'endpoint_path': '/v1/{name_7}',
                'operation_id': 'internal_h2_o_version_service_delete_internal_h2_o_version',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_7',
                ],
                'required': [
                    'name_7',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_7',
                ]
            },
            root_map={
                'validations': {
                    ('name_7',): {

                        'regex': {
                            'pattern': r'internalH2OVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_7':
                        (str,),
                },
                'attribute_map': {
                    'name_7': 'name_7',
                },
                'location_map': {
                    'name_7': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.internal_h2_o_version_service_get_internal_h2_o_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1GetInternalH2OVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_14}',
                'operation_id': 'internal_h2_o_version_service_get_internal_h2_o_version',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_14',
                ],
                'required': [
                    'name_14',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_14',
                ]
            },
            root_map={
                'validations': {
                    ('name_14',): {

                        'regex': {
                            'pattern': r'internalH2OVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_14':
                        (str,),
                },
                'attribute_map': {
                    'name_14': 'name_14',
                },
                'location_map': {
                    'name_14': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.internal_h2_o_version_service_list_internal_h2_o_versions_endpoint = _Endpoint(
            settings={
                'response_type': (V1ListInternalH2OVersionsResponse,),
                'auth': [],
                'endpoint_path': '/v1/internalH2OVersions',
                'operation_id': 'internal_h2_o_version_service_list_internal_h2_o_versions',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'page_size',
                    'page_token',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'page_size':
                        (int,),
                    'page_token':
                        (str,),
                },
                'attribute_map': {
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                },
                'location_map': {
                    'page_size': 'query',
                    'page_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.internal_h2_o_version_service_update_internal_h2_o_version_endpoint = _Endpoint(
            settings={
                'response_type': (V1UpdateInternalH2OVersionResponse,),
                'auth': [],
                'endpoint_path': '/v1/{internalH2oVersion.name}',
                'operation_id': 'internal_h2_o_version_service_update_internal_h2_o_version',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'internal_h2o_version_name',
                    'update_mask',
                    'internal_h2o_version',
                ],
                'required': [
                    'internal_h2o_version_name',
                    'update_mask',
                    'internal_h2o_version',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'internal_h2o_version_name',
                ]
            },
            root_map={
                'validations': {
                    ('internal_h2o_version_name',): {

                        'regex': {
                            'pattern': r'internalH2OVersions\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'internal_h2o_version_name':
                        (str,),
                    'update_mask':
                        (str,),
                    'internal_h2o_version':
                        (InternalH2OVersionResource,),
                },
                'attribute_map': {
                    'internal_h2o_version_name': 'internalH2oVersion.name',
                    'update_mask': 'updateMask',
                },
                'location_map': {
                    'internal_h2o_version_name': 'path',
                    'update_mask': 'query',
                    'internal_h2o_version': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def internal_h2_o_version_service_assign_internal_h2_o_version_aliases(
        self,
        body,
        **kwargs
    ):
        """Same behaviour as in AssignInternalDAIVersionAliases. (-- api-linter: core::0136::http-uri-suffix=disabled     aip.dev/not-precedent: Google linter incorrectly requires URI suffix \"assignInternalH2oVersionAliases\" --)  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.internal_h2_o_version_service_assign_internal_h2_o_version_aliases(body, async_req=True)
        >>> result = thread.get()

        Args:
            body (V1AssignInternalH2OVersionAliasesRequest):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1AssignInternalH2OVersionAliasesResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['body'] = \
            body
        return self.internal_h2_o_version_service_assign_internal_h2_o_version_aliases_endpoint.call_with_http_info(**kwargs)

    def internal_h2_o_version_service_create_internal_h2_o_version(
        self,
        internal_h2o_version_id,
        internal_h2o_version,
        **kwargs
    ):
        """Creates a new InternalH2OVersion. (-- api-linter: core::0133::http-uri-parent=disabled     aip.dev/not-precedent: InternalH2OVersion has no parent (it's a top-level resource) --) (-- api-linter: core::0133::method-signature=disabled     aip.dev/not-precedent: InternalH2OVersion has no parent (it's a top-level resource) --)  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.internal_h2_o_version_service_create_internal_h2_o_version(internal_h2o_version_id, internal_h2o_version, async_req=True)
        >>> result = thread.get()

        Args:
            internal_h2o_version_id (str): Specify the InternalH2OVersion resource ID, which will become a part of the InternalH2OVersion resource name.  It must: - be in semver format (but allowing more segments than only the standard three segments Major.Minor.Patch) - contain max 63 characters  Examples: \"3.42.0.3\", \"3.42.0.3-alpha\", \"3.42.0.3.1\", \"3.42.0.3.1-alpha\"
            internal_h2o_version (V1InternalH2OVersion): The InternalH2OVersion resource to create.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1CreateInternalH2OVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['internal_h2o_version_id'] = \
            internal_h2o_version_id
        kwargs['internal_h2o_version'] = \
            internal_h2o_version
        return self.internal_h2_o_version_service_create_internal_h2_o_version_endpoint.call_with_http_info(**kwargs)

    def internal_h2_o_version_service_delete_internal_h2_o_version(
        self,
        name_7,
        **kwargs
    ):
        """Deletes a InternalH2OVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.internal_h2_o_version_service_delete_internal_h2_o_version(name_7, async_req=True)
        >>> result = thread.get()

        Args:
            name_7 (str): InternalH2OVersion resource name.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            bool, date, datetime, dict, float, int, list, str, none_type
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_7'] = \
            name_7
        return self.internal_h2_o_version_service_delete_internal_h2_o_version_endpoint.call_with_http_info(**kwargs)

    def internal_h2_o_version_service_get_internal_h2_o_version(
        self,
        name_14,
        **kwargs
    ):
        """Returns a specific InternalH2OVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.internal_h2_o_version_service_get_internal_h2_o_version(name_14, async_req=True)
        >>> result = thread.get()

        Args:
            name_14 (str): InternalH2OVersion resource name.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1GetInternalH2OVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_14'] = \
            name_14
        return self.internal_h2_o_version_service_get_internal_h2_o_version_endpoint.call_with_http_info(**kwargs)

    def internal_h2_o_version_service_list_internal_h2_o_versions(
        self,
        **kwargs
    ):
        """Returns a collection of InternalH2OVersions.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.internal_h2_o_version_service_list_internal_h2_o_versions(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            page_size (int): Maximum number of InternalH2OVersions to return in a response. If unspecified (or set to 0), at most 50 InternalH2OVersions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.. [optional]
            page_token (str): Leave unset to receive the initial page. To list any subsequent pages use the value of 'next_page_token' returned from the ListInternalH2OVersionsResponse.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1ListInternalH2OVersionsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.internal_h2_o_version_service_list_internal_h2_o_versions_endpoint.call_with_http_info(**kwargs)

    def internal_h2_o_version_service_update_internal_h2_o_version(
        self,
        internal_h2o_version_name,
        update_mask,
        internal_h2o_version,
        **kwargs
    ):
        """Updates a InternalH2OVersion.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.internal_h2_o_version_service_update_internal_h2_o_version(internal_h2o_version_name, update_mask, internal_h2o_version, async_req=True)
        >>> result = thread.get()

        Args:
            internal_h2o_version_name (str): InternalH2OVersion resource name. For example: internalH2OVersions/3.42.0.3
            update_mask (str): The list of paths referencing which fields to update. Update mask must be non-empty.  Allowed field paths are: {deprecated, image, image_pull_policy, image_pull_secrets, gpu_resource_name, annotations}.  To update all allowed fields, specify exactly one path with value \"*\".
            internal_h2o_version (InternalH2OVersionResource): InternalH2OVersion resource.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1UpdateInternalH2OVersionResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['internal_h2o_version_name'] = \
            internal_h2o_version_name
        kwargs['update_mask'] = \
            update_mask
        kwargs['internal_h2o_version'] = \
            internal_h2o_version
        return self.internal_h2_o_version_service_update_internal_h2_o_version_endpoint.call_with_http_info(**kwargs)

