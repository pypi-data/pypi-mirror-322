from _typeshed import Incomplete
from pandas.errors import EmptyDataError as pdEmptyDataError
from typing import Dict, Optional
from ydata.core.error import FabricError

class SDKError(Exception):
    def __init__(self, *args: object) -> None: ...

class ResponseError(FabricError):
    description: Incomplete
    return_value: Incomplete
    def __init__(self, context: Optional[Dict[str, str]] = ..., httpCode: Optional[int] = ..., name: Optional[str] = ..., description: Optional[str] = ..., returnValue: Optional[str] = ...) -> None: ...

class ClientException(SDKError): ...

class ClientCreationError(ClientException):
    def __init__(self, message: Incomplete | None = ...) -> None: ...

class ClientHandshakeError(ClientException):
    auth_link: Incomplete
    def __init__(self, auth_link: str) -> None: ...

class ConnectorError(SDKError): ...
class InvalidConnectorError(ConnectorError): ...
class CredentialTypeError(ConnectorError): ...
class EmptyDataError(pdEmptyDataError, SDKError): ...
class DataSourceError(SDKError): ...
class DataSourceNotAvailableError(DataSourceError): ...
class SynthesizerException(SDKError): ...
class NotReadyError(SynthesizerException): ...
class NotTrainedError(SynthesizerException): ...

class NotInitializedError(SynthesizerException):
    def __init__(self, message: str = ...) -> None: ...

class AlreadyFittedError(SynthesizerException):
    def __init__(self, message: str = ...) -> None: ...

class DataTypeMissingError(SynthesizerException): ...
class DataSourceAttrsError(SynthesizerException): ...
class FittingError(SynthesizerException): ...
class InputError(SDKError): ...
