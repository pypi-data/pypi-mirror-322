[tool.poetry]
name = "swarmauri"
version = "0.6.0.dev149"
description = "Namespace package for components, packages, and plugins within the Swarmauri framework."
authors = ["Jacob Stewart <jacob@swarmauri.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "http://github.com/swarmauri/swarmauri-sdk"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
swarmauri_core = { version = "^0.6.0.dev149" }
swarmauri_base = { version = "^0.6.0.dev149" }
swarmauri_standard = { version = "^0.6.0.dev149" }

toml = "^0.10.2"
httpx = "^0.27.0"
joblib = "^1.4.0"
numpy = "*"
pandas = "*"
pydantic = "^2.9.2"
typing_extensions = "*"
requests = "^2.32.3"
Pillow = ">=8.0,<11.0"
aiofiles = { version = "24.1.0", optional = true }
aiohttp = { version = "^3.10.10", optional = true }
yake = { version = "==0.4.8", optional = true }
beautifulsoup4 = { version = "04.12.3", optional = true }
scipy = { version = ">=1.7.0,<1.14.0", optional = true }
scikit-learn = { version = "^1.4.2", optional = true }
matplotlib = { version = ">=3.9.2", optional = true }

[tool.poetry.extras]
io = ["aiofiles", "aiohttp"]
nlp = ["yake"]
nlp_tools = ["beautifulsoup4"]
ml_toolkits = ["scikit-learn"]
visualization = ["matplotlib"]
full = [
    "aiofiles", "aiohttp",
    "yake",
    "beautifulsoup4",
    "scikit-learn",
    "matplotlib"
]
doc2vec_vectorstore = ["swarmauri_vectorstore_doc2vec"]
doc2vec_embedding = ["swarmauri_embedding_doc2vec"]
matplotlib_tool = ["swarmauri_tool_matplotlib"]
keywordextractor_parser = ["swarmauri_parser_keywordextractor"]
tfidf_vectorstore = ["swarmauri_vectorstore_tfidf"]
tfidf_embedding = ["swarmauri_embedding_tfidf"]
nmf_embedding = ["swarmauri_embedding_nmf"]
beautifulsoupelement_parser = ["swarmauri_parser_beautifulsoupelement"]
minkowski_distance = ["swarmauri_distance_minkowski"]

[tool.setuptools]
namespace_packages = ["swarmauri"]

[tool.poetry.group.dev.dependencies]
flake8 = "^7.0"
pytest = "^8.0"
pytest-asyncio = ">=0.24.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.6.1"
pytest-json-report = "^1.5.0"
python-dotenv = "^1.0.0"
jsonschema = "^4.18.5"
ipython = "^8.28.0"
requests = "^2.32.3"

[tool.poetry.scripts]
swarmauri-cli = "swarmauri.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = ["combined", "scripts"]
asyncio_mode = "auto"

markers = [
    "test: standard test",
    "unit: Unit tests",
    "integration: Integration tests",
    "acceptance: Acceptance tests",
    "experimental: Experimental tests",
    "timeout: mark test to timeout after X seconds",
]

log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

asyncio_default_fixture_loop_scope = "function"