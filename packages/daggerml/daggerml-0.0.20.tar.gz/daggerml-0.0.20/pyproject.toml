[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# [build-system]
# requires = ["setuptools"]
# build-backend = "setuptools.build_meta"

[project]
name = "daggerml"
version = "0.0.20"
authors = [
  { name="DaggerML", email="engineering@daggerml.com" }
]
description = "DaggerML"
readme = "README.md"
#license = "MIT"
requires-python = ">=3.6"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "dataclasses; python_version < '3.7'",
  "importlib_metadata; python_version < '3.8'",
]

[project.optional-dependencies]
cli = ["daggerml-cli"]
all = ["daggerml[cli]"]
test = [
  "pytest",
  "pytest-cov",
]

[project.urls]
Homepage = "https://daggerml.com"
Documentation = "https://daggerml.com"
Issues = "https://github.com/daggerml/python-lib/issues"

[tool.pytest.ini_options]
pythonpath = "tests/"
minversion = "6.0"
addopts = "-ra --ignore=submodules/"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]

[tool.hatch.build.targets.wheel]
packages = ["src/daggerml"]

[tool.hatch.envs.default]
python="3.10"
dependencies = [
  "daggerml_cli @ {root:uri}/submodules/daggerml_cli",
]

[tool.hatch.envs.test]
dependencies = [
  "twine",
  "daggerml_cli @ {root:uri}/submodules/daggerml_cli",
  "daggerml[test]",
]

[tool.hatch.envs.test.scripts]
test = 'pytest -vsx {args}'
coverage-report = 'pytest --cov-report term-missing --cov=daggerml tests/'
dml-build = "hatch build && twine upload -r {args:testpypi} dist/*"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "B", "I", "PGH004"]
ignore = []
unfixable = ["B"]

[tool.ruff.lint.isort]
known-first-party = ["daggerml"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]

[tool.pyright]
include = ["src"]
defineConstant = { DEBUG = true }
typeCheckingMode = "basic"
reportGeneralTypeIssues = false
reportMissingImports = "error"
reportMissingTypeStubs = false
reportOptionalCall = false
reportOptionalMemberAccess = false
