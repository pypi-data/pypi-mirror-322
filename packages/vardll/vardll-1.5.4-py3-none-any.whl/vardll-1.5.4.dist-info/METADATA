Metadata-Version: 2.2
Name: vardll
Version: 1.5.4
Summary: A library used to read uncompiled files and DLL files (Really useful)
Author-email: Universal CEO <universal.store.panel@gmail.com>
License: Custom License
        
        This software is provided by PyGaps under the following terms:
        
        1. You may use, modify, and distribute this software for personal or commercial purposes, provided that you do not claim ownership of the original code.
        
        2. If you modify or distribute this software, you must include this license notice and acknowledge PyGaps as the original creator of the software.
        
        3. Any individual or entity that modifies or distributes this software and claims it as their own creation will be subject to a fee of $200 (USD) per instance. Failure to pay this fee will result in legal action.
        
        4. This software is provided "as is," without warranty of any kind, express or implied. PyGaps shall not be liable for any damages, including but not limited to direct, indirect, special, incidental, or consequential damages, arising out of the use, modification, or distribution of this software.
        
        5. PyGaps is NOT liable for any individual or entity that uses this software for unethical activities or illegal activities!
        
        
        By using this software, you agree to these terms and conditions.
        
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

<-------------------------------------------------------------------------------->

                VARDLL Does not work if it is in python's program folder!!
                Please put VARDLL's Folder within your project for it to work!!

<-------------------------------------------------------------------------------->

How to use:

This example shows how to use vardll 1.4.2:

"from vardll import DLLvar, load_file"

# Load the DLL file
dll_path = 'varotp.dll'
dll_variable = load_file(dll_path)

# Access the variables from the DLL file
print(dll_variable)

Make sure you have the vardll in the directory, like this:

test/
|
|__vardll
|     |
|     |__ __init__.py
|     |__ dllvariable.py
|     |__ license
|     |__ readme.md
|     |__ loader.py
|
|__main.py
|__var0otp.dll

Make sure in var0otp or any dll file you have your variable or the text you wanna input! Disclaimer:

IF THE DLL FILE STAYS EMPTY IT MIGHT MESS UP THE LIBRARY'S CODE!!
