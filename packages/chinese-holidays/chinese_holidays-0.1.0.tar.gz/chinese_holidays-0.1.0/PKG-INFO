Metadata-Version: 2.4
Name: chinese-holidays
Version: 0.1.0
Summary: Query information about Chinese holidays
Author-email: OSpoon <zxin088@gmail.com>
Requires-Python: >=3.10
Requires-Dist: httpx>=0.28.1
Requires-Dist: mcp>=1.2.0
Description-Content-Type: text/markdown

# chinese-holidays MCP server

Query information about Chinese holidays

### Tools

1. `get-all-holidays`: Get all holidays for a year
2. `is-holiday`: Check if a date is a holiday

## Quickstart

### Install

#### Claude Desktop

On MacOS: `~/Library/Application\ Support/Claude/claude_desktop_config.json`
On Windows: `%APPDATA%/Claude/claude_desktop_config.json`

<details>
  <summary>Development/Unpublished Servers Configuration</summary>
  ```
  "mcpServers": {
    "chinese-holidays": {
      "command": "uv",
      "args": [
        "--directory",
        "D:\workspaces\chinese-holidays",
        "run",
        "chinese-holidays"
      ]
    }
  }
  ```
</details>

<details>
  <summary>Published Servers Configuration</summary>
  ```
  "mcpServers": {
    "chinese-holidays": {
      "command": "uvx",
      "args": [
        "chinese-holidays"
      ]
    }
  }
  ```
</details>

## Development

### Building and Publishing

To prepare the package for distribution:

1. Sync dependencies and update lockfile:
```bash
uv sync
```

2. Build package distributions:
```bash
uv build
```

This will create source and wheel distributions in the `dist/` directory.

3. Publish to PyPI:
```bash
uv publish
```

Note: You'll need to set PyPI credentials via environment variables or command flags:
- Token: `--token` or `UV_PUBLISH_TOKEN`
- Or username/password: `--username`/`UV_PUBLISH_USERNAME` and `--password`/`UV_PUBLISH_PASSWORD`

### Debugging

Since MCP servers run over stdio, debugging can be challenging. For the best debugging
experience, we strongly recommend using the [MCP Inspector](https://github.com/modelcontextprotocol/inspector).


You can launch the MCP Inspector via [`npm`](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) with this command:

```bash
npx @modelcontextprotocol/inspector uv --directory D:\workspaces\chinese-holidays run chinese-holidays
```


Upon launching, the Inspector will display a URL that you can access in your browser to begin debugging.