Metadata-Version: 2.2
Name: fancytypes
Version: 1.0.1
Summary: Contains a base class representing an updatable parameter set that is equipped with methods to facilitate parameter data serialization and validation.
Author-email: Matthew Fitzpatrick <matthew.rc.fitzpatrick@gmail.com>
Project-URL: Homepage, https://mrfitzpa.github.io/fancytypes
Project-URL: Repository, https://github.com/mrfitzpa/fancytypes
Keywords: type checking,type conversion
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Classifier: Natural Language :: English
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: czekitout
Provides-Extra: tests
Requires-Dist: pytest-cov; extra == "tests"
Provides-Extra: examples
Requires-Dist: jupyter; extra == "examples"
Requires-Dist: ipympl; extra == "examples"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx_rtd_theme; extra == "docs"
Requires-Dist: sphinx-autodoc-typehints; extra == "docs"
Requires-Dist: numpydoc; extra == "docs"
Requires-Dist: docutils; extra == "docs"
Provides-Extra: all
Requires-Dist: fancytypes[docs,examples,tests]; extra == "all"

# fancytypes

[![Test library](https://github.com/mrfitzpa/fancytypes/actions/workflows/test_library.yml/badge.svg)](https://github.com/mrfitzpa/fancytypes/actions/workflows/test_library.yml)
[![Code Coverage](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/mrfitzpa/0ff284bfee8b5519e6f1bafa849007bb/raw/fancytypes_coverage_badge.json)](https://github.com/mrfitzpa/fancytypes/actions/workflows/measure_code_coverage.yml)
[![Documentation](https://img.shields.io/badge/docs-read-brightgreen)](https://mrfitzpa.github.io/fancytypes)
[![PyPi Version](https://img.shields.io/pypi/v/fancytypes.svg)](https://pypi.org/project/fancytypes)
[![Conda-Forge Version](https://img.shields.io/conda/vn/conda-forge/fancytypes.svg)](https://anaconda.org/conda-forge/fancytypes)
[![License](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)

``fancytypes`` is a simple Python library that contains a base class
representing an updatable parameter set that is equipped with methods to
facilitate parameter data serialization and validation.

Visit the `fancytypes`
[website](https://mrfitzpa.github.io/fancytypes) for a web version of the
installation instructions, the reference guide, and the examples archive.

<!--
For those reading raw .rst files, see file `docs/INSTALL.rst` for instructions
on installing the `fancytypes` library.
-->
