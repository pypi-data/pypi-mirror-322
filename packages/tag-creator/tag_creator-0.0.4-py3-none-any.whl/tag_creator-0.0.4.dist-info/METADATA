Metadata-Version: 2.2
Name: tag_creator
Version: 0.0.4
Summary: Project to automatically create release tags based on merged commit message'
Author-email: Vladyslav Honcharenko <goncharvlad02@gmail.com>
Maintainer-email: Vladyslav Honcharenko <goncharvlad02@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Vladyslav Honcharenko
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Repository, https://github.com/Oberstmarschall/tag_creator
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML==6.0.2

## Tag creator

Tag Creator is a Python tool that automatically generates release tags follow [SemVer](https://semver.org/) conventions.
It's designed to streamline the process of creating version tags for software projects, ensuring consistency and saving time.
Each new release tag will be created based on the latest tag version for the provided git branch. Increments for new version
will be parsed from the commit message. Commit messages must follow the [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) format.

Each commit must start from the allowed [type](tag_creator/configuration.yml) to find increments for next tag based on it.
Be avare that the `MAJOR` verion rule is differnt. Commits still can start from the allowed types in the `MAJOR` section, however there are several
additional rules:

- script will interpret commits with the `!` character after the allowed type as a major verion
- allowed type can be declared in a description. E.g.:

```
fix: some fix

BREAKING CHANGE: this is a breaking change!
```

Initial list of types in the configuration provided by [conventional-changelog](https://github.com/conventional-changelog/commitlint/tree/master/@commitlint/config-conventional#type-enum).

## Features

- Automatically generates release tags
- Easy integration into existing workflows
- Lightweight and configurable

## Configuration

Use --help option to see available scripts options.
You can provide a custom configuration file to change the default majority-to-type match to change the script behaviour.
Default configuration file is located [here](tag_creator/configuration.yml)
Be aware that configs will not be joined when you provide new config file.
