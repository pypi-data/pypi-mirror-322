"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([["51062"],{56615:function(t,i,e){e.r(i),e.d(i,{DEFAULT_DAYS_TO_SHOW:function(){return v},HuiStatisticsGraphCard:function(){return g}});var s=e(61701),n=e(72621),a=(e(52247),e(71695),e(92745),e(40251),e(39527),e(67670),e(41360),e(47021),e(57243)),o=e(50778),h=e(35359),d=(e(54977),e(17705)),c=e(69223),r=e(93331),_=e(29401);let l,u,f=t=>t;const v=30;let g=(0,s.Z)([(0,o.Mo)("hui-statistics-graph-card")],(function(t,i){class s extends i{constructor(...i){super(...i),t(this)}}return{F:s,d:[{kind:"method",static:!0,key:"getConfigElement",value:async function(){return await Promise.all([e.e("46379"),e.e("24199"),e.e("78943"),e.e("67390"),e.e("96245"),e.e("19551"),e.e("16285")]).then(e.bind(e,23656)),document.createElement("hui-statistics-graph-card-editor")}},{kind:"method",static:!0,key:"getStubConfig",value:function(t,i,e){const s=(0,c.j)(t,1,i,e,["sensor"],(t=>"state_class"in t.attributes));return{type:"statistics-graph",entities:s.length?[s[0]]:[]}}},{kind:"field",decorators:[(0,o.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,o.SB)()],key:"_config",value:void 0},{kind:"field",decorators:[(0,o.SB)()],key:"_statistics",value:void 0},{kind:"field",decorators:[(0,o.SB)()],key:"_metadata",value:void 0},{kind:"field",decorators:[(0,o.SB)()],key:"_unit",value:void 0},{kind:"field",key:"_entities",value(){return[]}},{kind:"field",key:"_names",value(){return{}}},{kind:"field",key:"_interval",value:void 0},{kind:"field",key:"_statTypes",value:void 0},{kind:"method",key:"disconnectedCallback",value:function(){(0,n.Z)(s,"disconnectedCallback",this,3)([]),this._interval&&(clearInterval(this._interval),this._interval=void 0)}},{kind:"method",key:"connectedCallback",value:function(){(0,n.Z)(s,"connectedCallback",this,3)([]),this.hasUpdated&&this._setFetchStatisticsTimer()}},{kind:"method",key:"getCardSize",value:function(){var t,i,e;return 5+(null!==(t=this._config)&&void 0!==t&&t.title?2:0)+(null!==(i=this._config)&&void 0!==i&&i.hide_legend?0:(null===(e=this._entities)||void 0===e?void 0:e.length)||0)}},{kind:"method",key:"getGridOptions",value:function(){return{columns:12,min_columns:9,min_rows:4}}},{kind:"method",key:"setConfig",value:function(t){if(!t.entities||!Array.isArray(t.entities))throw new Error("Entities need to be an array");if(!t.entities.length)throw new Error("You must include at least one entity");const i=t.entities?(0,_.A)(t.entities,!1):[];this._entities=[],i.forEach((t=>{this._entities.push(t.entity),t.name&&(this._names[t.entity]=t.name)})),"string"==typeof t.stat_types?this._statTypes=[t.stat_types]:t.stat_types?this._statTypes=t.stat_types:this._statTypes=["change","state","sum","min","max","mean"],this._config=t}},{kind:"method",key:"shouldUpdate",value:function(t){return(0,r.Wh)(this,t)||t.size>1||!t.has("hass")}},{kind:"method",key:"willUpdate",value:function(t){if((0,n.Z)(s,"willUpdate",this,3)([t]),!this._config||!t.has("_config"))return;const i=t.get("_config");t.has("_config")&&(null==i?void 0:i.entities)!==this._config.entities?this._getStatisticsMetaData(this._entities).then((()=>{this._setFetchStatisticsTimer()})):!t.has("_config")||(null==i?void 0:i.stat_types)===this._config.stat_types&&(null==i?void 0:i.days_to_show)===this._config.days_to_show&&(null==i?void 0:i.period)===this._config.period&&(null==i?void 0:i.unit)===this._config.unit||this._setFetchStatisticsTimer()}},{kind:"method",key:"_setFetchStatisticsTimer",value:function(){this._getStatistics(),clearInterval(this._interval),this._interval=window.setInterval((()=>this._getStatistics()),this._intervalTimeout)}},{kind:"method",key:"render",value:function(){return this.hass&&this._config?(0,a.dy)(l||(l=f` <ha-card .header="${0}"> <div class="content ${0}"> <statistics-chart .hass="${0}" .isLoadingData="${0}" .statisticsData="${0}" .metadata="${0}" .period="${0}" .chartType="${0}" .statTypes="${0}" .names="${0}" .unit="${0}" .minYAxis="${0}" .maxYAxis="${0}" .fitYData="${0}" .hideLegend="${0}" .logarithmicScale="${0}"></statistics-chart> </div> </ha-card> `),this._config.title,(0,h.$)({"has-header":!!this._config.title}),this.hass,!this._statistics,this._statistics,this._metadata,this._config.period,this._config.chart_type||"line",this._statTypes,this._names,this._unit,this._config.min_y_axis,this._config.max_y_axis,this._config.fit_y_data||!1,this._config.hide_legend||!1,this._config.logarithmic_scale||!1):a.Ld}},{kind:"get",key:"_intervalTimeout",value:function(){var t;return 1e3*("5minute"===(null===(t=this._config)||void 0===t?void 0:t.period)?5:60)*60}},{kind:"method",key:"_getStatisticsMetaData",value:async function(t){const i=await(0,d.Py)(this.hass,t),e={};i.forEach((t=>{e[t.statistic_id]=t})),this._metadata=e}},{kind:"method",key:"_getStatistics",value:async function(){const t=new Date;t.setTime(t.getTime()-36e5*(24*(this._config.days_to_show||v)+1));try{let i;if(this._config.unit&&this._metadata){const t=Object.values(this._metadata).find((t=>(0,d.dO)(this.hass,null==t?void 0:t.statistic_id,t)===this._config.unit));t&&(i=t.unit_class,this._unit=this._config.unit)}if(!i&&this._metadata){const t=this._metadata[this._entities[0]];i=null==t?void 0:t.unit_class,this._unit=i&&(0,d.dO)(this.hass,t.statistic_id,t)||void 0}const e=i?{[i]:this._unit}:void 0,s=await(0,d.dL)(this.hass,t,void 0,this._entities,this._config.period,e,this._statTypes);this._statistics={},this._entities.forEach((t=>{t in s&&(this._statistics[t]=s[t])}))}catch(i){this._statistics=void 0}}},{kind:"get",static:!0,key:"styles",value:function(){return(0,a.iv)(u||(u=f`ha-card{height:100%}.content{padding:16px}.has-header{padding-top:0}`))}}]}}),a.oi)}}]);
//# sourceMappingURL=51062.cca6e9022358079e.js.map